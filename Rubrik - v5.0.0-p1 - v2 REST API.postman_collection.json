{
	"info": {
		"_postman_id": "b2b0dc04-84b8-4c52-bda8-b1e9b05c21c3",
		"name": "Rubrik - v5.0.0-p1 - v2 REST API",
		"description": "\nCopyright © 2017-2018 Rubrik Inc. [Legal](#section/Legal)\n\n# Introduction\n\nWelcome to the Rubrik™ REST API documentation.\n\nThe Rubrik REST API provides a RESTful interface for working with Rubrik clusters and Rubrik Edge virtual appliances. The Rubrik REST API can be used to query, configure, and control nearly all of the operations of the Rubrik software.\n\nThrough authenticated and encrypted interaction with the Rubrik REST API server, perform any of the operations that are available through the Rubrik web UI and many bulk-type operations that might otherwise be difficult or impossible to perform.\n\nThis documentation provides reference information and examples of typical workflows for the Rubrik REST API. For more detailed information about working with Rubrik clusters and Rubrik Edge virtual appliances refer to the *Rubrik User Guide*.\n\nA quick way to become familiar with the Rubrik REST API, is to use the Rubrik REST API Explorer. [OpenAPI](#section/OpenAPI) describes this tool.\n\nRefer to the [changelog](#section/Changelog) to see information about changes within this version of the Rubrik REST API.\n\n# Changelog\n\nRevisions are listed with the most recent revision first.\n\n### Changes to V2 API in Rubrik Version 5.0\nInitial GA release.\n\nNew features:\n* Modified the `/sla_domain` endpoints to add support for weekly and quarterly\n  time units.\n\n# OpenAPI\nThe Rubrik REST API specification conforms to the OpenAPI 2.0 Specification. Tools that work with the OpenAPI 2.0 Specification can be used with the Rubrik REST API specification.\n\nDevelopment releases (pre-1.0) of the Rubrik REST API specification made reference to 'swagger'. The previous release of the OpenAPI 2.0 Specification was named the Swagger 1.2 Specification.\n\nDownload the Rubrik REST API specification for your tools. [Download](./api-docs)\n\n## Rubrik REST API Explorer\nThe Rubrik REST API Explorer is a browser-based API client hosted by the Rubrik cluster. The Explorer has the Rubrik REST API specification built in. You can use the Explorer to try out Rubrik REST API calls and view the responses.\n\n**IMPORTANT:** The Explorer interacts with the Rubrik cluster through the API calls you make. Use care when making calls that modify or delete configurations and data.\n\nTo access the Rubrik REST API Explorer, click: [Rubrik REST API Explorer](./playground/)\n\n# SLA Domains\n\nRubrik clusters provide automated data management and protection through SLA Domains.\nAn SLA Domain defines the data management and protection policies for their assigned snappables (virtual machines, file systems, and applications).\n\nTo provide policy based management and protection of a snappable, add the snappable to an SLA Domain, or to multiple SLA Domains.\n\n## Retrieving SLA Domains\n\nBefore assigning snappables to SLA Domains, get a list of the SLA Domains that exist on a Rubrik cluster. For a new Rubrik cluster, the list shows only the default SLA Domains. When custom SLA Domains are added to the Rubrik cluster, the list is modified to include those SLA Domains.\n\n**Example:** Retrieving SLA Domains from a Rubrik cluster\n\nSend a GET request to [`/sla_domain`](#operation/querySlaDomainV2).\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v2/sla_domain\"\n```\n\nThe Rubrik REST API server returns a `ListResponse` object of all SLA Domains. A `ListResponse` object includes all of the SLA Domains on the Rubrik cluster, including SLA Domains created through a v1 SLA Domain endpoint. The `ListResponse` object always includes the default SLA Domains: Gold, Silver, and Bronze.\n\n```bash\n{\n  \"data\": [\n    {\n      \"id\": \"$gold_sla_id\",\n      \"name\": \"Gold\"\n    },\n    {\n      \"id\": \"$silver_sla_id\",\n      \"name\": \"Silver\"\n    },\n    {\n      \"id\": \"$bronze_sla_id\",\n      \"name\": \"Bronze\"\n    }\n  ],\n  \"hasMore\": false,\n  \"total\": 3\n}\n```\n\nFor more details about an SLA domain, send a GET request to the `/sla_domain/{id}` endpoint and provide the ID of the SLA domain, for example:  [`/sla_domain/{id}`](#operation/getSlaDomainV2)\n\n```bash\ncurl -X GET \"https://$cluster_address/api/v2/sla_domain/$bronze_sla_id\"\n```\nThe Rubrik REST API server responds with the details of the specified SLA Domain.\n\n```bash\n{\n  \"id\": \"$bronze_sla_id\",\n  \"primaryClusterId\": \"$cluster_id\",\n  \"name\": \"Bronze\",\n  \"frequencies\": [\n    \"daily\": {\n      \"frequency\": 1,\n      \"retention\": 32\n    },\n    \"weekly\": {\n      \"frequency\": 1,\n      \"retention\": 12,\n      \"dayOfWeek\": \"Monday\"\n    },\n    \"monthly\": {\n      \"frequency\": 1,\n      \"retention\": 12,\n      \"dayOfMonth\": \"LastDay\"\n    },\n    \"quarterly\" {\n      \"frequency\": 1,\n      \"retention\": 2,\n      \"quarterStarts\": \"January\",\n      \"dayOfQuarter\": \"LastDay\"\n    },\n    \"yearly\": {\n      \"frequency\": 1,\n      \"retention\": 2,\n      \"yearStarts\": \"January\",\n      \"dayOfYear\": \"LastDay\"\n    }\n  ],\n  \"allowedBackupWindows\": [],\n  \"firstFullAllowedBackupWindows\": [],\n  \"archivalSpecs\": [],\n  \"replicationSpecs\": [\n    {\n      \"locationId\": \"$repl_location_id\",\n      \"retentionLimit\": 0\n    }\n  ],\n  \"numDbs\": 0,\n  \"numFilesets\": 7,\n  \"numLinuxHosts\": 3,\n  \"numWindowsHosts\": 2,\n  \"numVms\": 1,\n  \"isDefault\": false,\n  \"uiColor\": \"#cc8366\",\n  \"showAdvancedUi\": false,\n  \"advancedUiConfig\": []\n}\n```\n\n## Working with SLA Domains\n\nTo work with an SLA Domain, obtain the `id` of that SLA Domain. As described in [Retrieving SLA Domains](#section/SLA-Domains/Retrieving-SLA-Domains), start by sending a GET request to [`/sla_domain`](#operation/querySlaDomainV2).\n\nThe Rubrik REST API server responds with a `ListResponse` object that contains all of the SLA Domains on the specfied Rubrik cluster. From that list object, find the data array element that has the `name` value of the selected SLA Domain. In the same array element as the `name` value, note the value of the `id` string.\n\n## Creating SLA Domains\n\nTo create an SLA domain send a POST request to [`/sla_domain`](#operation/createSlaDomainV2). Include the attributes for the SLA Domain in the request body.\n\nThe following table describes the required and optional attributes to include in the request body when creating an SLA Domain.\n\n| Attribute | Req'd | JSON Type | Description |\n| ------ | --- | ----- | ----------- |\n| `name` | Yes | String | Name of the SLA Domain.  |\n| `frequencies` | Yes | Object | Each member defines a policy by specifying: `frequency`, and `retention`. For `weekly`, it defines one more field `dayOfWeek`. For `monthly`, it defines one more field `dayOfMonth`. For `quarterly`, it defines two more fields `firstQuarterStartMonth` and `dayOfQuarter`. For `yearly`, it defines two more fields `yearStartMonth` and `dayOfYear`. Requires at least one member in the object.  |\n| `allowedBackupWindows` | Yes | Array | Each member defines a backup window using values for `startTimeAttributes` and `durationInHours`. The time specified in `startTimeAttributes` uses the Rubrik cluster time zone. To specify multiple backup windows, add an array member for each window. To create an SLA Domain without a backup window, specify a null array value: `[]`.  |\n| `firstFullAllowedBackupWindows` | Yes | Array | Each member defines a period when first full backups are allowed by specifying: `startTimeAttributes` and `durationInHours`. Several first full backup windows can be specified by adding an array member for each one. Create an SLA Domain without a first full backup window by specifying a null array value: `[]`.  |\n| `localRetentionLimit` | No | String | Specify an integer value to set the number of days to retain a local copy of a snapshot. When an archival location is specified, specify `0` to enable Instant Archiving. |\n| `archivalSpecs` | No | Array | Defines the archival location for the SLA Domain by specifying: `locationId` and `archivalThreshold`. Currently limited to one array member. |\n| `replicationSpecs` | No | Array | Defines the replication location for the SLA Domain by specifying: `locationId` and `retentionLimit`. Currently limited to one array member. |\n\nThe following table describes the required attributes for each time unit in `frequency`\n| Attribute | Req'd | JSON Type | Description |\n| ------ | --- | ----- | ----------- |\n| `dayOfWeek` | Yes | String | Defines as enum and only accepts `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.  |\n| `dayOfMonth` | Yes | String | Defines as enum and only accepts `FirstDay`, `Fifteenth` and `LastDay`.  |\n| `firstQuarterStartMonth` | Yes | String | Defines as enum and only accepts `January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November` and `December`. |\n| `dayOfQuarter` | Yes | String | Defines as enum and only accepts `FirstDay` and `LastDay`. |\n| `yearStartMonth` | Yes | String | Defines as enum and only accepts `January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November` and `December`.  |\n| `dayOfYear` | Yes | String | Defines as enum and only accepts `FirstDay` and `LastDay`. |\n\n**Example:** Creating an SLA Domain for daily backups\n\nCreate an SLA Domain that takes a backup once a day and retains the backup for seven days. Do not set a backup window or a first full backup window. Do not include archival or replication.\n\n```bash\ncurl -X POST \\\n  -d '{\n  \"name\": \"Daily SLA\",\n  \"frequencies\": [\n    \"daily\": {\n      \"frequency\": 1,\n      \"retention\": 7\n    }\n  ],\n  \"allowedBackupWindows\": [],\n  \"firstFullAllowedBackupWindows\": [] }' \\\n  \"https://$cluster_address/api/v2/sla_domain\"\n```\nThe response confirms the attributes of the SLA Domain and provides the `id` of the new SLA Domain.\n\n```bash\n{\n  \"id\": \"$sla_id\",\n  \"name\": \"Daily SLA\",\n  \"frequencies\": [\n    \"daily\": {\n      \"frequency\": 1,\n      \"retention\": 7\n    }\n  ],\n  \"allowedBackupWindows\": [],\n  \"firstFullAllowedBackupWindows\": []\n}\n```\n\n## Patching SLA Domains\n\nTo patch the attributes of an SLA domain, send a PATCH request to\n[`/sla_domain/{id}`](#operation/patchSlaDomainV2). Include in the request body\nonly the attributes that needs to be patched.\n\n**Example:** Patching the daily backup SLA Domain\n\nPatch the SLA Domain that was created in [Creating SLA Domains](#section/SLA-Domains/Creating-SLA-Domains) to change the archival specifications.\n\n```bash\ncurl -X PATCH \\\n  -d '{\n  \"archivalSpecs\": [\n    {\n        \"locationId\": \"some-valid-archived-location-id\",\n        \"archivalThreshold\": 14\n    }\n  ]}' \\\n  \"https://$cluster_address/api/v2/sla_domain/$sla_id\"\n```\nThe response confirms the new attribute and also includes the other\nattributes that were not changed.\n\n```bash\n{\n  \"id\": \"$sla_id\",\n  \"name\": \"Daily SLA\",\n  \"frequencies\": [\n    \"daily\": {\n      \"frequency\": 1,\n      \"retention\": 7\n    }\n  ],\n  \"archivalSpecs\": [\n    {\n      \"locationId\": \"some-valid-archived-location-id\",\n      \"archivalThreshold\": 14\n    }\n  ],\n  \"allowedBackupWindows\": [],\n  \"firstFullAllowedBackupWindows\": []\n}\n```\n\n## Deleting SLA Domains\n\nTo delete an SLA Domain send a DELETE request to [`/sla_domain/{id}`](#operation/deleteSlaDomainV2).\n\n**Example:** Deleting an SLA Domain\n\nDelete an SLA Domain with the `id` of `$sla_id`.\n\n```bash\ncurl -X DELETE \"https://$cluster_address/api/v2/sla_domain/$sla_id\"\n```\nThe Rubrik REST API server responds with HTTP response code 204. This indicates the request succeeded and the response body is empty.\n\n# Legal\n\n## Copyright\n\nRubrik REST API - Copyright © 2017-2018 Rubrik Inc.\nAll rights reserved.\n\nThis documentation may be used free of charge. Selling without prior written consent is prohibited.\nObtain permission before redistributing. In all cases, this copyright notice and disclaimer must remain\nintact.\n\n\n## Disclaimer\n\nTHE CONTENTS OF THIS DOCUMENTATION ARE PROVIDED \"AS IS,\" AND COPYRIGHT HOLDERS MAKE NO\nREPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR\nTITLE; THAT THE CONTENTS OF THE DOCUMENTATION ARE SUITABLE FOR ANY PURPOSE; THAT THE\nIMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS,\nTRADEMARKS OR OTHER RIGHTS.\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL\nDAMAGES ARISING OUT OF ANY USE OF THE DOCUMENTATION OR THE PERFORMANCE OR IMPLEMENTATION OF\nTHE CONTENTS THEREOF.\n\n## Trademarks\n\nRubrik, the Rubrik logo, Rubrik Envision, and Rubrik Edge are trademarks or registered trademarks of Rubrik, Inc. in the U.S. and/or other countries. All other trademarks are the property of their respective owners.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "sla_domain",
			"item": [
				{
					"name": "Get list of SLA Domains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/v2/sla_domain?primary_cluster_id={{primary_cluster_id}}&name={{name}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"v2",
								"sla_domain"
							],
							"query": [
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Retrieve summary information for all SLA Domains."
					},
					"response": []
				},
				{
					"name": "Create SLA Domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "SLA Domain definition. The SLA domain accepts two backup windows, one for a regular backup or snapshot and one for the first full backup or snapshot. Specify times using Rubrik cluster timezone."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/v2/sla_domain",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"v2",
								"sla_domain"
							]
						},
						"description": "Create a new SLA Domain on a Rubrik cluster by specifying Domain rules and policies."
					},
					"response": []
				},
				{
					"name": "Get SLA Domain details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/v2/sla_domain/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"v2",
								"sla_domain",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for a specified SLA Domain."
					},
					"response": []
				},
				{
					"name": "Patch SLA Domain",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object containing the fields to be edited for SLA Domain. The SLA Domain accepts two backup windows, one for a regular backup or snapshot and one for the first full backup or snapshot. Specify times using the Rubrik cluster timezone. Remote SLA Domain only supports edit to the archival specification."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/v2/sla_domain/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"v2",
								"sla_domain",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Patch the properties of an SLA Domain."
					},
					"response": []
				},
				{
					"name": "Remove SLA Domain",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/v2/sla_domain/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"v2",
								"sla_domain",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete an SLA Domain from a Rubrik cluster. The SLA Domain must not be assigned to any VMs, filesets or databases."
					},
					"response": []
				}
			],
			"description": "Folder for sla_domain"
		}
	]
}