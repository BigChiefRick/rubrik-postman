{
	"info": {
		"_postman_id": "418e51ab-978f-4cff-a1af-35f7dd8f1b32",
		"name": "Rubrik INTERNAL REST API",
		"description": "Copyright Â© 2017 Rubrik Inc.\n\n# Introduction\n\nThis is the INTERNAL REST API for Rubrik. We don't guarantee support or backward compatibility. Use at your own risk.\n\n# Changelog\n\n Revisions are listed with the most recent revision first.\n\n ### Changes to Internal API in Rubrik version 5.2.0\n ## Deprecation:\n * Deprecating `GET /replication/global_pause`. Use\n   `GET /internal/replication/source` and \n   `GET /internal/replication/source/{id}` to retrieve replication\n    pause status in CDM v5.3.\n * Deprecating `POST /replication/global_pause`. Use\n   `POST /v1/replication/location_pause/disable` and \n   `POST /v1/replication/location_pause/enable` to toggle replication\n    pause in CDM v5.3.\n * Deprecating `slaId` field returned by `GET /vcd/vapp/{id}/snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /vcd/vapp/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /oracle/db/{id}/snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /oracle/db/\n    {id}/recoverable_range`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /oracle/db/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /hyperv/vm/{id}/snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /hyperv/vm/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /volume_group/{id}/snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /volume_group/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n * Deprecating `slaId` field returned by `GET /storage/array_volume_group\n/{id}/snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /vcd/vapp/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /host_fileset/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /host_fileset/share/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /app_blueprint/{id}/snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /app_blueprint/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /managed_volume/{id}/snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `POST /managed_volume/{id\n}/end_snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /managed_volume/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /aws/ec2_instance/{id}/snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /aws/ec2_instance/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /nutanix/vm/{id}/snapshot`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /nutanix/vm/snapshot/{id}`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Deprecating `slaId` field returned by `GET /fileset/bulk`.\n    See **snapshotRetentionInfo** to track retention for\n    snapshots.\n*  Added a new field `pendingSlaDomain` to `VirtualMachineDetail`\n    object referred by `VappVmDetail` returned by\n    `GET /vcd/vapp/{id}` and `PATCH /vcd/vapp/{id}`\n*  Deprecated the `POST /internal/vmware/vcenter/{id}/refresh_vm` endpoint. To\n    refresh a virtual machine by MOID, use the\n    `POST /v1/vmware/vcenter/{id}/refresh_vm` endpoint.\n\n ## Breaking changes:\n* Rename the field configuredSlaDomainId in the OracleUpdate object to\n  configuredSlaDomainIdDeprecated and modify the behavior so\n  configuredSlaDomainIdDeprecated is only used to determine log backup\n  frequency and not to set retention time.\n* Removed `GET /event/count_by_status` endpoint and it will be\n   replaced by `GET /job_monitoring/summary_by_job_state`.\n* Removed `GET /event/count_by_job_type` endpoint and it will be\n   replaced by `GET /job_monitoring/summary_by_job_type`.\n* Removed `GET /event_series` endpoint and it will be replaced by\n   `GET /job_monitoring`.\n* Refactor `PUT /cluster/{id}/security/web_signed_cert` to accept\n   certificate_id instead of X.509 certificate text. Also removed\n   the `POST /cluster/{id}/security/web_csr` endpoint.\n * Refactor `GET /rsa-server`, `POST /rsa-server`, `GET /rsa-server/{id}`,\n   and `PATCH /rsa-server/{id}` to take in a certificate ID instead of\n   a certificate.\n * Changed definition of CloudInstanceUpdate by updating the enums ON/OFF\n   to POWERSTATUS_ON/POWERSTATUS_OFF\n * Removed `GET /event_series/{status}/csv_link` endpoint to download CSV\n   with job monitoring information. It has been replaced by the\n   `GET /job_monitoring//csv_download_link` v1 endpoint.\n * Removed GET `/report/summary/physical_storage_time_series`. Use\n   GET `/stats/total_physical_storage/time_series` instead.\n * Removed GET `/report/summary/average_local_growth_per_day`. Use\n   GET `/stats/average_storage_growth_per_day` instead.\n * Removed POST `/job/instances/`. Use GET `/job/{job_id}/instances` instead.\n * Removed the POST `/cluster/{id}/reset` endpoint.\n\n ## Feature additions/improvements:\n * Added the `GET /replication/global_pause` endpoint to return the current\n   status of global replication pause. Added the `POST /replication/global_pause`.\n   endpoint to toggle the replication target global pause jobs status. When\n   global replication pause is enabled, all replication jobs on the local\n   cluster are paused. When disabling global replication pause, optional\n   parameter `shouldOnlyReplicateNewSnapshots` can be set to `true` to only\n   replicate snapshots taken after disabling the pause. These endpoints must\n   be used at the target cluster.\n * Added new field `parentSnapshotId` to AppBlueprintSnapshotSummary returned\n   by `GET /app_blueprint/{id}/snapshot`.\n * Added new field `parentSnapshotId` to AppBlueprintSnapshotDetail returned\n   by `GET /app_blueprint/snapshot/{id}`.\n * Added new field `parentSnapshotId` to AwsEc2InstanceSummary returned by\n  `GET /aws/ec2_instance`.\n * Added new field `parentSnapshotId` to AwsEc2InstanceDetail returned by\n  `GET /aws/ec2_instance/{id}`.\n * Added new field `parentSnapshotId` to AwsEc2InstanceDetail returned by\n  `PATCH /aws/ec2_instance/{id}`.\n * Added new field `parentSnapshotId` to HypervVirtualMachineSnapshotSummary\n  returned by `GET /hyperv/vm/{id}/snapshot`.\n * Added new field `parentSnapshotId` to HypervVirtualMachineSnapshotDetail\n  returned by `GET /hyperv/vm/snapshot/{id}`.\n * Added new field `parentSnapshotId` to ManagedVolumeSnapshotSummary\n   returned by `GET /managed_volume/{id}/snapshot`.\n * Added new field `parentSnapshotId` to ManagedVolumeSnapshotSummary\n   returned by `POST /managed_volume/{id}/end_snapshot`.\n * Added new field `parentSnapshotId` to ManagedVolumeSnapshotDetail returned\n   by `GET /managed_volume/snapshot/{id}`.\n * Added new field `parentSnapshotId` to NutanixVmSnapshotSummary returned by\n  `GET /nutanix/vm/{id}/snapshot`.\n * Added new field `parentSnapshotId` to NutanixVmSnapshotDetail returned by\n  `GET /nutanix/vm/snapshot/{id}`.\n * Added new field `parentSnapshotId` to OracleDbSnapshotSummary returned by\n  `GET /oracle/db/{id}/snapshot`.\n * Added new field `parentSnapshotId` to OracleDbSnapshotDetail returned by\n  `GET /oracle/db/snapshot/{id}`.\n * Added new field `parentSnapshotId` to StorageArrayVolumeGroupSnapshotSummary\n  returned by `GET /storage/array_volume_group/{id}/snapshot`.\n * Added new field `parentSnapshotId` to StorageArrayVolumeGroupSnapshotDetail\n   returned by `GET /storage/array_volume_group/snapshot/{id}`.\n * Added new field `parentSnapshotId` to VcdVappSnapshotSummary returned by\n  `GET /vcd/vapp/{id}/snapshot`.\n * Added new field `parentSnapshotId` to VcdVappSnapshotDetail returned by\n  `GET /vcd/vapp/snapshot/{id}`.\n * Added new field `parentSnapshotId` to VolumeGroupSnapshotSummary returned by\n  `GET /volume_group/{id}/snapshot`.\n * Added new field `parentSnapshotId` to VolumeGroupSnapshotDetail returned by\n  `GET /volume_group/snapshot/{id}`.\n * Added new values `RetentionSlaDomainName` , `ObjectType`, `SnapshotCount`,\n   `AutoSnapshotCount` and  `ManualSnapshotCount` to \n   `UnmanagedObjectSortAttribute` field of the `GET /unmanaged_object` endpont.\n * Added new field `shouldSkipPrechecks` to DecommissionNodesConfig used by\n   `POST /cluster/{id}/decommission_nodes`.\n * Added new field `isPrimary` to OracleDbSummary returned by\n   `GET /oracle/db`.\n * Added new field `isPrimary` to OracleDbDetail returned by\n   `GET /oracle/db/{id}` and `PATCH /oracle/db/{id}`.\n * Added new field `retentionSlaDomanId` to MssqlAvailabilityGroupSummary\n   returned by `GET /mssql/availability_group`.\n * Added new field `retentionSlaDomanId` to MssqlAvailabilityGroupDetail\n   returned by `GET /mssql/availability_group/{id}`.\n * Added new field `retentionSlaDomanId` to MssqlAvailabilityGroupDetail\n   returned by `PATCH /mssql/availability_group/{id}`.\n * Added new field `retentionSlaDomainId` to UnmanagedObjectSummary \n   returned by `GET /unmanaged_object`.\n * Added new field `retentionSlaDomainId` to ManagedVolumeSummary \n   returned by `GET /managed_volume`.\n * Added new field `retentionSlaDomainId` to AppBlueprintDetail \n   returned by `GET /app_blueprint/{id}`.\n * Added new field `retentionSlaDomainId` to AppBlueprintDetail \n   returned by `PATCH /polaris/app_blueprint/{id}`.\n * Added new field `retentionSlaDomainId` to AppBlueprintDetail \n   returned by `POST /polaris/app_blueprint`.\n * Added new field `retentionSlaDomainId` to AppBlueprintExportSnapshotJobConfig \n   returned by `POST /polaris/app_blueprint/snapshot/{id}/export`.\n * Added new field `retentionSlaDomainId` to AppBlueprintInstantRecoveryJobConfig \n   returned by `POST /polaris/app_blueprint/snapshot/{id}/instant_recover`.\n * Added new field `retentionSlaDomainId` to AppBlueprintMountSnapshotJobConfig \n   returned by `POST /polaris/app_blueprint/snapshot/{id}/mount`.\n * Added new field `retentionSlaDomainId` to AppBlueprintSummary \n   returned by `GET /app_blueprint`.\n * Added new field `retentionSlaDomainId` to AwsEc2InstanceDetail \n   returned by `GET /aws/ec2_instance/{id}`.\n * Added new field `retentionSlaDomainId` to AwsEc2InstanceDetail \n   returned by `PATCH /aws/ec2_instance/{id}`.\n * Added new field `retentionSlaDomainId` to AwsEc2InstanceSummary \n   returned by `GET /aws/ec2_instance`.\n * Added new field `retentionSlaDomainId` to AwsHierarchyObjectSummary \n   returned by `GET /aws/hierarchy/{id}/children`.\n * Added new field `retentionSlaDomainId` to AwsHierarchyObjectSummary \n   returned by `GET /aws/hierarchy/{id}/descendants`.\n * Added new field `retentionSlaDomainId` to AwsHierarchyObjectSummary \n   returned by `GET /aws/hierarchy/{id}`.\n * Added new field `retentionSlaDomainId` to HypervHierarchyObjectSummary \n   returned by `GET /hyperv/hierarchy/{id}/children`.\n * Added new field `retentionSlaDomainId` to HypervHierarchyObjectSummary \n   returned by `GET /hyperv/hierarchy/{id}/descendants`.\n * Added new field `retentionSlaDomainId` to HypervHierarchyObjectSummary \n   returned by `GET /hyperv/hierarchy/{id}`.\n * Added new field `retentionSlaDomainId` to HypervHierarchyObjectSummary \n   returned by `GET /organization/{id}/hyperv`.\n * Added new field `retentionSlaDomainId` to HypervVirtualMachineDetail \n   returned by `GET /hyperv/vm/{id}`.\n * Added new field `retentionSlaDomainId` to HypervVirtualMachineDetail \n   returned by `PATCH /hyperv/vm/{id}`.\n * Added new field `retentionSlaDomainId` to HypervVirtualMachineSummary \n   returned by `GET /hyperv/vm`.\n * Added new field `retentionSlaDomainId` to ManagedHierarchyObjectSummary \n   returned by `GET /hierarchy/{id}`.\n * Added new field `retentionSlaDomainId` to ManagedHierarchyObjectSummary \n   returned by `GET /hierarchy/{id}/sla_conflicts`.\n * Added new field `retentionSlaDomainId` to ManagedVolumeSummary \n   returned by `GET /managed_volume/{id}`.\n * Added new field `retentionSlaDomainId` to ManagedVolumeSummary \n   returned by `GET /organization/{id}/managed_volume`.\n * Added new field `retentionSlaDomainId` to ManagedVolumeSummary \n   returned by `PATCH /managed_volume/{id}`.\n * Added new field `retentionSlaDomainId` to ManagedVolumeSummary \n   returned by `POST /managed_volume`.\n * Added new field `retentionSlaDomainId` to MountDetail \n   returned by `GET /vmware/vm/snapshot/mount/{id}`.\n * Added new field `retentionSlaDomainId` to NutanixHierarchyObjectSummary \n   returned by `GET /nutanix/hierarchy/{id}/children`.\n * Added new field `retentionSlaDomainId` to NutanixHierarchyObjectSummary \n   returned by `GET /nutanix/hierarchy/{id}/descendants`.\n * Added new field `retentionSlaDomainId` to NutanixHierarchyObjectSummary \n   returned by `GET /nutanix/hierarchy/{id}`.\n * Added new field `retentionSlaDomainId` to NutanixHierarchyObjectSummary \n   returned by `GET /organization/{id}/nutanix`.\n * Added new field `retentionSlaDomainId` to OracleDbDetail \n   returned by `GET /oracle/db/{id}`.\n * Added new field `retentionSlaDomainId` to OracleDbDetail \n   returned by `PATCH /oracle/db/{id}`.\n * Added new field `retentionSlaDomainId` to OracleDbSummary \n   returned by `GET /oracle/db`.\n * Added new field `retentionSlaDomainId` to OracleHierarchyObjectSummary \n   returned by `GET /oracle/hierarchy/{id}/children`.\n * Added new field `retentionSlaDomainId` to OracleHierarchyObjectSummary \n   returned by `GET /oracle/hierarchy/{id}/descendants`.\n * Added new field `retentionSlaDomainId` to OracleHierarchyObjectSummary \n   returned by `GET /oracle/hierarchy/{id}`.\n * Added new field `retentionSlaDomainId` to OracleHierarchyObjectSummary \n   returned by `GET /organization/{id}/oracle`.\n * Added new field `retentionSlaDomainId` to SlaConflictsSummary \n   returned by `POST /hierarchy/bulk_sla_conflicts`.\n * Added new field `retentionSlaDomainId` to SnappableRecoverySpecDetails \n   returned by `POST /polaris/failover/recovery_spec/upsert`.\n * Added new field `retentionSlaDomainId` to SnappableRecoverySpec \n   returned by `POST /polaris/failover/recovery_spec/upsert`.\n * Added new field `retentionSlaDomainId` to Snappable \n   returned by `POST /polaris/failover/recovery_spec/upsert`.\n * Added new field `retentionSlaDomainId` to Snappable \n   returned by `POST /stats/snappable_storage`.\n * Added new field `retentionSlaDomainId` to StorageArrayHierarchyObjectSummary \n   returned by `GET /organization/{id}/storage/array`.\n * Added new field `retentionSlaDomainId` to StorageArrayHierarchyObjectSummary \n   returned by `GET /storage/array/hierarchy/{id}/children`.\n * Added new field `retentionSlaDomainId` to StorageArrayHierarchyObjectSummary \n   returned by `GET /storage/array/hierarchy/{id}/descendants`.\n * Added new field `retentionSlaDomainId` to StorageArrayHierarchyObjectSummary \n   returned by `GET /storage/array/hierarchy/{id}`.\n * Added new field `retentionSlaDomainId` to StorageArrayVolumeGroupDetail \n   returned by `GET /storage/array_volume_group/{id}`.\n * Added new field `retentionSlaDomainId` to StorageArrayVolumeGroupDetail \n   returned by `PATCH /storage/array_volume_group/{id}`.\n * Added new field `retentionSlaDomainId` to StorageArrayVolumeGroupDetail \n   returned by `POST /storage/array_volume_group`.\n * Added new field `retentionSlaDomainId` to StorageArrayVolumeGroupSummary \n   returned by `GET /storage/array_volume_group`.\n * Added new field `retentionSlaDomainId` to TriggerFailoverOnTargetDefinition \n   returned by `PUT /polaris/failover/target/{id}/resume`.\n * Added new field `retentionSlaDomainId` to TriggerFailoverOnTargetDefinition \n   returned by `PUT /polaris/failover/target/{id}/start`.\n * Added new field `retentionSlaDomainId` to UpsertSnappableRecoverySpecResponse \n   returned by `POST /polaris/failover/recovery_spec/upsert`.\n * Added new field `retentionSlaDomainId` to VcdHierarchyObjectSummary \n   returned by `GET /organization/{id}/vcd`.\n * Added new field `retentionSlaDomainId` to VcdHierarchyObjectSummary \n   returned by `GET /vcd/hierarchy/{id}/children`.\n * Added new field `retentionSlaDomainId` to VcdHierarchyObjectSummary \n   returned by `GET /vcd/hierarchy/{id}/descendants`.\n * Added new field `retentionSlaDomainId` to VcdHierarchyObjectSummary \n   returned by `GET /vcd/hierarchy/{id}`.\n * Added new field `retentionSlaDomainId` to VcdVappDetail \n   returned by `GET /vcd/vapp/{id}`.\n * Added new field `retentionSlaDomainId` to VcdVappDetail \n   returned by `PATCH /vcd/vapp/{id}`.\n * Added new field `retentionSlaDomainId` to VcdVappSnapshotDetail \n   returned by `GET /vcd/vapp/snapshot/{id}`.\n * Added new field `retentionSlaDomainId` to VolumeGroupDetail \n   returned by `GET /volume_group/{id}`.\n * Added new field `retentionSlaDomainId` to VolumeGroupDetail \n   returned by `PATCH /volume_group/{id}`.\n * Added new field `retentionSlaDomainId` to VolumeGroupSummary \n   returned by `GET /volume_group`.\n * Added new field `retentionSlaDomainId` to AwsHierarchyObjectSummary \n   returned by `GET /organization/{id}/aws`.\n * Added new field `retentionSlaDomainId` to VmwareVmMountSummary \n   returned by `GET /vmware/vm/snapshot/mount`.\n * Added new field `retentionSlaDomainId` to VcdVappSummary \n   returned by `GET /vcd/vapp`.\n * Added `isReplicationTargetPauseEnabled` to ReplicationTargetSummary\n   returned by `GET /replication/target`.\n * Added `isReplicationTargetPauseEnabled` to ReplicationTargetSummary\n   returned by `POST /replication/target`.\n * Added `isReplicationTargetPauseEnabled` to ReplicationTargetSummary\n   returned by `GET /replication/target/{id}`.\n * Added `isReplicationTargetPauseEnabled` to ReplicationTargetSummary\n   returned by `GET /replication/target/{id}`.\n * Added `isReplicationTargetPauseEnabled` to ReplicationTargetSummary\n   returned by `PATCH /replication/target/{id}`.\n * Added `isReplicationTargetPauseEnabled` to ReplicationTargetSummary\n   returned by `GET /organization/{id}/replication/target`.\n * Added new field `hasSnapshotsWithPolicy` to UnmanagedObjectSummary returned\n   by GET `/unmanaged_object`  \n * Added new field `slaLastUpdateTime` to AppBlueprintDetail\n   returned by POST `/polaris/app_blueprint`.\n * Added new field `slaLastUpdateTime` to AppBlueprintDetail\n   returned by `GET /app_blueprint/{id}`.\n * Added new field `slaLastUpdateTime` to AppBlueprintDetail\n   returned by `PATCH /polaris/app_blueprint/{id}`.\n * Added new field `slaLastUpdateTime` to AppBlueprintExportSnapshotJobConfig\n   returned by POST `/polaris/app_blueprint/snapshot/{id}/export`.\n * Added new field `slaLastUpdateTime` to AppBlueprintInstantRecoveryJobConfig\n   returned by POST `/polaris/app_blueprint/snapshot/{id}/instant_recover`.\n * Added new field `slaLastUpdateTime` to AppBlueprintMountSnapshotJobConfig\n   returned by POST `/polaris/app_blueprint/snapshot/{id}/mount`.\n * Added new field `slaLastUpdateTime` to AppBlueprintSummary\n   returned by `GET /app_blueprint`.\n * Added new field `slaLastUpdateTime` to AwsAccountDetail\n   returned by `PATCH /aws/account/dca/{id}`.\n * Added new field `slaLastUpdateTime` to AwsAccountDetail\n   returned by `GET /aws/account/{id}`.\n * Added new field `slaLastUpdateTime` to AwsAccountDetail\n   returned by `PATCH /aws/account/{id}`.\n * Added new field `slaLastUpdateTime` to AwsEc2InstanceDetail\n   returned by `GET /aws/ec2_instance/{id}`.\n * Added new field `slaLastUpdateTime` to AwsEc2InstanceDetail\n   returned by `PATCH /aws/ec2_instance/{id}`.\n * Added new field `slaLastUpdateTime` to FilesetDetail\n   returned by POST `/fileset/bulk`.\n * Added new field `slaLastUpdateTime` to AwsEc2InstanceSummary\n   returned by `GET /aws/ec2_instance`.\n * Added new field `slaLastUpdateTime` to AwsHierarchyObjectSummary\n   returned by `GET /aws/hierarchy/{id}`.\n * Added new field `slaLastUpdateTime` to AwsHierarchyObjectSummary\n   returned by `GET /aws/hierarchy/{id}/children`.\n * Added new field `slaLastUpdateTime` to AwsHierarchyObjectSummary\n   returned by `GET /aws/hierarchy/{id}/descendants`.\n * Added new field `slaLastUpdateTime` to AwsHierarchyObjectSummary\n   returned by `GET /organization/{id}/aws`.\n * Added new field `slaLastUpdateTime` to DataCenterDetail\n   returned by `GET /vmware/data_center/{id}`.\n * Added new field `slaLastUpdateTime` to DataCenterSummary\n   returned by `GET /vmware/data_center`.\n * Added new field `slaLastUpdateTime` to DataStoreDetail\n   returned by `GET /vmware/datastore/{id}`.\n * Added new field `slaLastUpdateTime` to FolderDetail\n   returned by `GET /folder/host/{datacenter_id}`.\n * Added new field `slaLastUpdateTime` to FolderDetail\n   returned by `GET /folder/vm/{datacenter_id}`.\n * Added new field `slaLastUpdateTime` to FolderDetail\n   returned by `GET /folder/{id}`.\n * Added new field `slaLastUpdateTime` to HostFilesetDetail\n   returned by `GET /host_fileset/{id}`.\n * Added new field `slaLastUpdateTime` to HostFilesetShareDetail\n   returned by `GET /host_fileset/share/{id}`.\n * Added new field `slaLastUpdateTime` to HostFilesetShareSummary\n   returned by `GET /host_fileset/share`.\n * Added new field `slaLastUpdateTime` to HostFilesetSummary\n   returned by `GET /host_fileset`.\n * Added new field `slaLastUpdateTime` to HypervClusterDetail\n   returned by `GET /hyperv/cluster/{id}`.\n * Added new field `slaLastUpdateTime` to HypervClusterDetail\n   returned by `PATCH /hyperv/cluster/{id}`.\n * Added new field `slaLastUpdateTime` to HypervClusterSummary\n   returned by `GET /hyperv/cluster`.\n * Added new field `slaLastUpdateTime` to HypervHierarchyObjectSummary\n   returned by `GET /hyperv/hierarchy/{id}`.\n * Added new field `slaLastUpdateTime` to HypervHierarchyObjectSummary\n   returned by `GET /hyperv/hierarchy/{id}/children`.\n * Added new field `slaLastUpdateTime` to HypervHierarchyObjectSummary\n   returned by `GET /hyperv/hierarchy/{id}/descendants`.\n * Added new field `slaLastUpdateTime` to HypervHierarchyObjectSummary\n   returned by `GET /organization/{id}/hyperv`.\n * Added new field `slaLastUpdateTime` to HypervHostDetail\n   returned by `GET /hyperv/host/{id}`.\n * Added new field `slaLastUpdateTime` to HypervHostDetail\n   returned by `PATCH /hyperv/host/{id}`.\n * Added new field `slaLastUpdateTime` to HypervHostSummary\n   returned by `GET /hyperv/host`.\n * Added new field `slaLastUpdateTime` to HypervScvmmDetail\n   returned by `GET /hyperv/scvmm/{id}`.\n * Added new field `slaLastUpdateTime` to HypervScvmmDetail\n   returned by `PATCH /hyperv/scvmm/{id}`.\n * Added new field `slaLastUpdateTime` to HypervScvmmSummary\n   returned by `GET /hyperv/scvmm`.\n * Added new field `slaLastUpdateTime` to HypervVirtualMachineDetail\n   returned by `GET /hyperv/vm/{id}`.\n * Added new field `slaLastUpdateTime` to HypervVirtualMachineDetail\n   returned by `PATCH /hyperv/vm/{id}`.\n * Added new field `slaLastUpdateTime` to HypervVirtualMachineSummary\n   returned by `GET /hyperv/vm`.\n * Added new field `slaLastUpdateTime` to ManagedHierarchyObjectSummary\n   returned by `GET /hierarchy/{id}`.\n * Added new field `slaLastUpdateTime` to ManagedHierarchyObjectSummary\n   returned by `GET /hierarchy/{id}/sla_conflicts`.\n * Added new field `slaLastUpdateTime` to ManagedVolumeSummary\n   returned by `GET /managed_volume`.\n * Added new field `slaLastUpdateTime` to ManagedVolumeSummary\n   returned by POST `/managed_volume`.\n * Added new field `slaLastUpdateTime` to ManagedVolumeSummary\n   returned by `GET /managed_volume/{id}`.\n * Added new field `slaLastUpdateTime` to ManagedVolumeSummary\n   returned by `PATCH /managed_volume/{id}`.\n * Added new field `slaLastUpdateTime` to ManagedVolumeSummary\n   returned by `GET /organization/{id}/managed_volume`.\n * Added new field `slaLastUpdateTime` to MountDetail\n   returned by `GET /vmware/vm/snapshot/mount/{id}`.\n * Added new field `slaLastUpdateTime` to NutanixHierarchyObjectSummary\n   returned by `GET /nutanix/hierarchy/{id}`.\n * Added new field `slaLastUpdateTime` to NutanixHierarchyObjectSummary\n   returned by `GET /nutanix/hierarchy/{id}/children`.\n * Added new field `slaLastUpdateTime` to NutanixHierarchyObjectSummary\n   returned by `GET /nutanix/hierarchy/{id}/descendants`.\n * Added new field `slaLastUpdateTime` to NutanixHierarchyObjectSummary\n   returned by `GET /organization/{id}/nutanix`.\n * Added new field `slaLastUpdateTime` to OracleDbDetail\n   returned by `GET /oracle/db/{id}`.\n * Added new field `slaLastUpdateTime` to OracleDbDetail\n   returned by `PATCH /oracle/db/{id}`.\n * Added new field `slaLastUpdateTime` to OracleDbSummary\n   returned by `GET /oracle/db`.\n * Added new field `slaLastUpdateTime` to OracleHierarchyObjectSummary\n   returned by `GET /oracle/hierarchy/{id}`.\n * Added new field `slaLastUpdateTime` to OracleHierarchyObjectSummary\n   returned by `GET /oracle/hierarchy/{id}/children`.\n * Added new field `slaLastUpdateTime` to OracleHierarchyObjectSummary\n   returned by `GET /oracle/hierarchy/{id}/descendants`.\n * Added new field `slaLastUpdateTime` to OracleHierarchyObjectSummary\n   returned by `GET /organization/{id}/oracle`.\n * Added new field `slaLastUpdateTime` to OracleHostDetail\n   returned by `GET /oracle/host/{id}`.\n * Added new field `slaLastUpdateTime` to OracleHostDetail\n   returned by `PATCH /oracle/host/{id}`.\n * Added new field `slaLastUpdateTime` to OracleHostSummary\n   returned by `GET /oracle/host`.\n * Added new field `slaLastUpdateTime` to OracleRacDetail\n   returned by `GET /oracle/rac/{id}`.\n * Added new field `slaLastUpdateTime` to OracleRacDetail\n   returned by `PATCH /oracle/rac/{id}`.\n * Added new field `slaLastUpdateTime` to OracleRacSummary\n   returned by `GET /oracle/rac`.\n * Added new field `slaLastUpdateTime` to Snappable\n   returned by POST `/polaris/failover/recovery_spec/upsert`.\n * Added new field `slaLastUpdateTime` to SnappableRecoverySpec\n   returned by POST `/polaris/failover/recovery_spec/upsert`.\n * Added new field `slaLastUpdateTime` to SnappableRecoverySpecDetails\n   returned by POST `/polaris/failover/recovery_spec/upsert`.\n * Added new field `slaLastUpdateTime` to StorageArrayHierarchyObjectSummary\n   returned by `GET /organization/{id}/storage/array`.\n * Added new field `slaLastUpdateTime` to StorageArrayHierarchyObjectSummary\n   returned by `GET /storage/array/hierarchy/{id}`.\n * Added new field `slaLastUpdateTime` to StorageArrayHierarchyObjectSummary\n   returned by `GET /storage/array/hierarchy/{id}/children`.\n * Added new field `slaLastUpdateTime` to StorageArrayHierarchyObjectSummary\n   returned by `GET /storage/array/hierarchy/{id}/descendants`.\n * Added new field `slaLastUpdateTime` to StorageArrayVolumeGroupDetail\n   returned by POST `/storage/array_volume_group`.\n * Added new field `slaLastUpdateTime` to StorageArrayVolumeGroupDetail\n   returned by `GET /storage/array_volume_group/{id}`.\n * Added new field `slaLastUpdateTime` to StorageArrayVolumeGroupDetail\n   returned by `PATCH /storage/array_volume_group/{id}`.\n * Added new field `slaLastUpdateTime` to StorageArrayVolumeGroupSummary\n   returned by `GET /storage/array_volume_group`.\n * Added new field `slaLastUpdateTime` to VcdClusterDetail\n   returned by `GET /vcd/cluster/{id}`.\n * Added new field `slaLastUpdateTime` to VcdClusterDetail\n   returned by `PATCH /vcd/cluster/{id}`.\n * Added new field `slaLastUpdateTime` to VcdClusterSummary\n   returned by `GET /vcd/cluster`.\n * Added new field `slaLastUpdateTime` to VcdHierarchyObjectSummary\n   returned by `GET /organization/{id}/vcd`.\n * Added new field `slaLastUpdateTime` to VcdHierarchyObjectSummary\n   returned by `GET /vcd/hierarchy/{id}`.\n * Added new field `slaLastUpdateTime` to VcdHierarchyObjectSummary\n   returned by `GET /vcd/hierarchy/{id}/children`.\n * Added new field `slaLastUpdateTime` to VcdHierarchyObjectSummary\n   returned by `GET /vcd/hierarchy/{id}/descendants`.\n * Added new field `slaLastUpdateTime` to VcdVappDetail\n   returned by `GET /vcd/vapp/{id}`.\n * Added new field `slaLastUpdateTime` to VcdVappDetail\n   returned by `PATCH /vcd/vapp/{id}`.\n * Added new field `slaLastUpdateTime` to VcdVappSnapshotDetail\n   returned by `GET /vcd/vapp/snapshot/{id}`.\n * Added new field `slaLastUpdateTime` to VcdVappSummary\n   returned by `GET /vcd/vapp`.\n * Added new field `slaLastUpdateTime` to VmwareVmMountSummary\n   returned by `GET /vmware/vm/snapshot/mount`.\n * Added new field `slaLastUpdateTime` to VolumeGroupDetail\n   returned by `GET /volume_group/{id}`.\n * Added new field `slaLastUpdateTime` to VolumeGroupDetail\n   returned by `PATCH /volume_group/{id}`.\n * Added new field `slaLastUpdateTime` to VolumeGroupSummary\n   returned by `GET /volume_group`.\n * Added new field `slaLastUpdateTime` to VsphereCategory\n   returned by `GET /vmware/vcenter/{id}/tag_category`.\n * Added new field `slaLastUpdateTime` to VsphereCategory\n   returned by `GET /vmware/vcenter/tag_category/{tag_category_id}`.\n * Added new field `slaLastUpdateTime` to VsphereTag\n   returned by `GET /vmware/vcenter/{id}/tag`.\n * Added new field `slaLastUpdateTime` to VsphereTag\n   returned by `GET /vmware/vcenter/tag/{tag_id}`.\n * Added new Field `configuredSlaDomainType` to AppBlueprintDetail returned by\n   `POST /polaris/app_blueprint`.\n * Added new Field `configuredSlaDomainType` to AppBlueprintDetail returned by\n   `GET /app_blueprint/{id}`.\n * Added new Field `configuredSlaDomainType` to AppBlueprintDetail returned by\n  `PATCH /polaris/app_blueprint/{id}`.\n * Added new Field `configuredSlaDomainType` to\n   AppBlueprintExportSnapshotJobConfig returned by\n  `POST /polaris/app_blueprint/snapshot/{id}/export`.\n * Added new Field `configuredSlaDomainType` to\n   AppBlueprintInstantRecoveryJobConfig returned by\n    `POST /polaris/app_blueprint/snapshot/{id}/instant_recover`.\n * Added new Field `configuredSlaDomainType` to\n   AppBlueprintMountSnapshotJobConfig returned by\n    `POST /polaris/app_blueprint/snapshot/{id}/mount`.\n * Added new Field `configuredSlaDomainType` to AppBlueprintSummary returned by\n   `GET /app_blueprint`.\n * Added new Field `configuredSlaDomainType` to AwsAccountDetail returned by\n   `PATCH /aws/account/dca/{id}`.\n * Added new Field `configuredSlaDomainType` to AwsAccountDetail returned by\n   `GET /aws/account/{id}`.\n * Added new Field `configuredSlaDomainType` to AwsAccountDetail returned by\n   `PATCH /aws/account/{id}`.\n * Added new Field `configuredSlaDomainType` to AwsEc2InstanceDetail returned\n   by `GET /aws/ec2_instance/{id}`.\n * Added new Field `configuredSlaDomainType` to AwsEc2InstanceDetail returned\n   by `PATCH /aws/ec2_instance/{id}`.\n * Added new Field `configuredSlaDomainType` to AwsEc2InstanceSummary returned\n   by `GET /aws/ec2_instance`.\n * Added new Field `configuredSlaDomainType` to AwsHierarchyObjectSummary\n   returned by `GET /aws/hierarchy/{id}`.\n * Added new Field `configuredSlaDomainType` to AwsHierarchyObjectSummary\n   returned by `GET /aws/hierarchy/{id}/children`.\n * Added new Field `configuredSlaDomainType` to AwsHierarchyObjectSummary\n   returned by `GET /aws/hierarchy/{id}/descendants`.\n * Added new Field `configuredSlaDomainType` to AwsHierarchyObjectSummary\n   returned by `GET /organization/{id}/aws`.\n * Added new Field `configuredSlaDomainType` to DataCenterDetail returned by\n   `GET /vmware/data_center/{id}`.\n * Added new Field `configuredSlaDomainType` to DataCenterSummary returned by\n   `GET /vmware/data_center`.\n * Added new Field `configuredSlaDomainType` to DataStoreDetail returned by\n   `GET /vmware/datastore/{id}`.\n * Added new Field `configuredSlaDomainType` to FilesetDetail returned by\n   `POST /fileset/bulk`.\n * Added new Field `configuredSlaDomainType` to FolderDetail returned by\n   `GET /folder/host/{datacenter_id}`.\n * Added new Field `configuredSlaDomainType` to FolderDetail returned by\n   `GET /folder/vm/{datacenter_id}`.\n * Added new Field `configuredSlaDomainType` to FolderDetail returned by\n   `GET /folder/{id}`.\n * Added new Field `configuredSlaDomainType` to HostFilesetDetail returned by\n   `GET /host_fileset/{id}`.\n * Added new Field `configuredSlaDomainType` to HostFilesetShareDetail returned\n   by `GET /host_fileset/share/{id}`.\n * Added new Field `configuredSlaDomainType` to HostFilesetShareSummary\n   returned by `GET /host_fileset/share`.\n * Added new Field `configuredSlaDomainType` to HostFilesetSummary returned by\n   `GET /host_fileset`.\n * Added new Field `configuredSlaDomainType` to HypervClusterDetail returned by\n   `GET /hyperv/cluster/{id}`.\n * Added new Field `configuredSlaDomainType` to HypervClusterDetail returned by\n   `PATCH /hyperv/cluster/{id}`.\n * Added new Field `configuredSlaDomainType` to HypervClusterSummary returned\n   by `GET /hyperv/cluster`.\n * Added new Field `configuredSlaDomainType` to HypervHierarchyObjectSummary\n   returned by `GET /hyperv/hierarchy/{id}`.\n * Added new Field `configuredSlaDomainType` to HypervHierarchyObjectSummary\n   returned by `GET /hyperv/hierarchy/{id}/children`.\n * Added new Field `configuredSlaDomainType` to HypervHierarchyObjectSummary\n   returned by `GET /hyperv/hierarchy/{id}/descendants`.\n * Added new Field `configuredSlaDomainType` to HypervHierarchyObjectSummary\n   returned by `GET /organization/{id}/hyperv`.\n * Added new Field `configuredSlaDomainType` to HypervHostDetail returned by\n   `GET /hyperv/host/{id}`.\n * Added new Field `configuredSlaDomainType` to HypervHostDetail returned by\n   `PATCH /hyperv/host/{id}`.\n * Added new Field `configuredSlaDomainType` to HypervHostSummary returned by\n   `GET /hyperv/host`.\n * Added new Field `configuredSlaDomainType` to HypervScvmmDetail returned by\n   `GET /hyperv/scvmm/{id}`.\n * Added new Field `configuredSlaDomainType` to HypervScvmmDetail returned by\n   `PATCH /hyperv/scvmm/{id}`.\n * Added new Field `configuredSlaDomainType` to HypervScvmmSummary returned by\n   `GET /hyperv/scvmm`.\n * Added new Field `configuredSlaDomainType` to HypervVirtualMachineDetail\n   returned by `GET /hyperv/vm/{id}`.\n * Added new Field `configuredSlaDomainType` to HypervVirtualMachineDetail\n   returned by `PATCH /hyperv/vm/{id}`.\n * Added new Field `configuredSlaDomainType` to HypervVirtualMachineSummary\n   returned by `GET /hyperv/vm`.\n * Added new Field `configuredSlaDomainType` to ManagedHierarchyObjectSummary\n   returned by `GET /hierarchy/{id}`.\n * Added new Field `configuredSlaDomainType` to ManagedHierarchyObjectSummary\n   returned by `GET /hierarchy/{id}/sla_conflicts`.\n * Added new Field `configuredSlaDomainType` to ManagedVolumeSummary returned\n   by `GET /managed_volume`.\n * Added new Field `configuredSlaDomainType` to ManagedVolumeSummary returned\n   by `POST /managed_volume`.\n * Added new Field `configuredSlaDomainType` to ManagedVolumeSummary returned\n   by `GET /managed_volume/{id}`.\n * Added new Field `configuredSlaDomainType` to ManagedVolumeSummary returned\n   by `PATCH /managed_volume/{id}`.\n * Added new Field `configuredSlaDomainType` to ManagedVolumeSummary returned\n   by `GET /organization/{id}/managed_volume`.\n * Added new Field `configuredSlaDomainType` to MountDetail returned by\n   `GET /vmware/vm/snapshot/mount/{id}`.\n * Added new Field `configuredSlaDomainType` to NutanixHierarchyObjectSummary\n   returned by `GET /nutanix/hierarchy/{id}`.\n * Added new Field `configuredSlaDomainType` to NutanixHierarchyObjectSummary\n   returned by `GET /nutanix/hierarchy/{id}/children`.\n * Added new Field `configuredSlaDomainType` to NutanixHierarchyObjectSummary\n   returned by `GET /nutanix/hierarchy/{id}/descendants`.\n * Added new Field `configuredSlaDomainType` to NutanixHierarchyObjectSummary\n   returned by `GET /organization/{id}/nutanix`.\n * Added new Field `configuredSlaDomainType` to OracleDbDetail returned by\n   `GET /oracle/db/{id}`.\n * Added new Field `configuredSlaDomainType` to OracleDbDetail returned by\n   `PATCH /oracle/db/{id}`.\n * Added new Field `configuredSlaDomainType` to OracleDbSummary returned by\n   `GET /oracle/db`.\n * Added new Field `configuredSlaDomainType` to OracleHierarchyObjectSummary\n   returned by `GET /oracle/hierarchy/{id}`.\n * Added new Field `configuredSlaDomainType` to OracleHierarchyObjectSummary\n   returned by `GET /oracle/hierarchy/{id}/children`.\n * Added new Field `configuredSlaDomainType` to OracleHierarchyObjectSummary\n   returned by `GET /oracle/hierarchy/{id}/descendants`.\n * Added new Field `configuredSlaDomainType` to OracleHierarchyObjectSummary\n   returned by `GET /organization/{id}/oracle`.\n * Added new Field `configuredSlaDomainType` to OracleHostDetail returned by\n   `GET /oracle/host/{id}`.\n * Added new Field `configuredSlaDomainType` to OracleHostDetail returned by\n   `PATCH /oracle/host/{id}`.\n * Added new Field `configuredSlaDomainType` to OracleHostSummary returned by\n   `GET /oracle/host`.\n * Added new Field `configuredSlaDomainType` to OracleRacDetail returned by\n   `GET /oracle/rac/{id}`.\n * Added new Field `configuredSlaDomainType` to OracleRacDetail returned by\n   `PATCH /oracle/rac/{id}`.\n * Added new Field `configuredSlaDomainType` to OracleRacSummary returned by\n   `GET /oracle/rac`.\n * Added new Field `configuredSlaDomainType` to SlaConflictsSummary returned by\n   `POST /hierarchy/bulk_sla_conflicts`.\n * Added new Field `configuredSlaDomainType` to Snappable returned by\n   `POST /polaris/failover/recovery_spec/upsert`.\n * Added new Field `configuredSlaDomainType` to SnappableRecoverySpec returned\n   by `POST /polaris/failover/recovery_spec/upsert`.\n * Added new Field `configuredSlaDomainType` to SnappableRecoverySpecDetails\n   returned by `POST /polaris/failover/recovery_spec/upsert`.\n * Added new Field `configuredSlaDomainType` to\n   StorageArrayHierarchyObjectSummary returned by\n   `GET /organization/{id}/storage/array`.\n * Added new Field `configuredSlaDomainType` to\n   StorageArrayHierarchyObjectSummary returned by\n    `GET /storage/array/hierarchy/{id}`.\n * Added new Field `configuredSlaDomainType` to\n   StorageArrayHierarchyObjectSummary returned by\n    `GET /storage/array/hierarchy/{id}/children`.\n * Added new Field `configuredSlaDomainType` to\n   StorageArrayHierarchyObjectSummary returned by\n   `GET /storage/array/hierarchy/{id}/descendants`.\n * Added new Field `configuredSlaDomainType` to StorageArrayVolumeGroupDetail\n   returned by `POST /storage/array_volume_group`.\n * Added new Field `configuredSlaDomainType` to StorageArrayVolumeGroupDetail\n   returned by `GET /storage/array_volume_group/{id}`.\n * Added new Field `configuredSlaDomainType` to StorageArrayVolumeGroupDetail\n   returned by `PATCH /storage/array_volume_group/{id}`.\n * Added new Field `configuredSlaDomainType` to StorageArrayVolumeGroupSummary\n   returned by `GET /storage/array_volume_group`.\n * Added new Field `configuredSlaDomainType` to\n   TriggerFailoverOnTargetDefinition returned by\n   `PUT /polaris/failover/target/{id}/start`.\n * Added new Field `configuredSlaDomainType` to\n   TriggerFailoverOnTargetDefinition returned by\n    `PUT /polaris/failover/target/{id}/resume`.\n * Added new Field `configuredSlaDomainType` to\n   UnmanagedObjectSummary returned by `GET /unmanaged_object`.\n * Added new Field `configuredSlaDomainType` to\n   UpsertSnappableRecoverySpecResponse returned by\n   `POST /polaris/failover/recovery_spec/upsert`.\n * Added new Field `configuredSlaDomainType` to VcdClusterDetail returned by\n   `GET /vcd/cluster/{id}`.\n * Added new Field `configuredSlaDomainType` to VcdClusterDetail returned by\n   `PATCH /vcd/cluster/{id}`.\n * Added new Field `configuredSlaDomainType` to VcdClusterSummary returned by\n   `GET /vcd/cluster`.\n * Added new Field `configuredSlaDomainType` to VcdHierarchyObjectSummary\n   returned by `GET /organization/{id}/vcd`.\n * Added new Field `configuredSlaDomainType` to VcdHierarchyObjectSummary\n   returned by `GET /vcd/hierarchy/{id}`.\n * Added new Field `configuredSlaDomainType` to VcdHierarchyObjectSummary\n   returned by `GET /vcd/hierarchy/{id}/children`.\n * Added new Field `configuredSlaDomainType` to VcdHierarchyObjectSummary\n   returned by `GET /vcd/hierarchy/{id}/descendants`.\n * Added new Field `configuredSlaDomainType` to VcdVappDetail returned by\n   `GET /vcd/vapp/{id}`.\n * Added new Field `configuredSlaDomainType` to VcdVappDetail returned by\n   `PATCH /vcd/vapp/{id}`.\n * Added new Field `configuredSlaDomainType` to VcdVappSnapshotDetail returned\n   by `GET /vcd/vapp/snapshot/{id}`.\n * Added new Field `configuredSlaDomainType` to VcdVappSummary returned by\n   `GET /vcd/vapp`.\n * Added new Field `configuredSlaDomainType` to VmwareVmMountSummary returned\n   by `GET /vmware/vm/snapshot/mount`.\n * Added new Field `configuredSlaDomainType` to VolumeGroupDetail returned by\n   `GET /volume_group/{id}`.\n * Added new Field `configuredSlaDomainType` to VolumeGroupDetail returned by\n   `PATCH /volume_group/{id}`.\n * Added new Field `configuredSlaDomainType` to VolumeGroupSummary returned by\n   `GET /volume_group`.\n * Added new Field `configuredSlaDomainType` to VsphereCategory returned by\n   `GET /vmware/vcenter/{id}/tag_category`.\n * Added new Field `configuredSlaDomainType` to VsphereCategory returned by\n  `GET /vmware/vcenter/tag_category/{tag_category_id}`.\n * Added new Field `configuredSlaDomainType` to VsphereTag returned by\n   `GET /vmware/vcenter/{id}/tag`.\n * Added new Field `configuredSlaDomainType` to VsphereTag returned by\n  `GET /vmware/vcenter/tag/{tag_id}`.\n * Added a new optional query parameter `name` to\n   `GET /user/{id}/organization`.\n * Added new field `hostLogRetentionHours` to OracleDbSummary returned by\n   `GET /oracle/db`.\n * Added new field `isCustomRetentionApplied` to AppBlueprintSnapshotSummary\n   returned by `GET /app_blueprint/{id}/snapshot`.\n * Added new field `isCustomRetentionApplied` to AppBlueprintSnapshotDetail\n   returned by `GET /app_blueprint/snapshot/{id}` .\n * Added new field `isCustomRetentionApplied` to AwsEc2InstanceSummary returned\n   by `GET /aws/ec2_instance`.\n * Added new field `isCustomRetentionApplied` to AwsEc2InstanceDetail returned\n   by `GET /aws/ec2_instance/{id}`.\n * Added new field `isCustomRetentionApplied` to AwsEc2InstanceDetail returned\n   by `PATCH /aws/ec2_instance/{id}`.\n * Added new field `isCustomRetentionApplied` to\n   HypervVirtualMachineSnapshotSummary returned by\n  `GET /hyperv/vm/{id}/snapshot`.\n * Added new field `isCustomRetentionApplied` to\n   HypervVirtualMachineSnapshotDetail returned by\n   `GET /hyperv/vm/snapshot/{id}`.\n * Added new field `isCustomRetentionApplied` to ManagedVolumeSnapshotSummary\n   returned by `GET /managed_volume/{id}/snapshot`.\n * Added new field `isCustomRetentionApplied` to ManagedVolumeSnapshotSummary\n   returned by `POST /managed_volume/{id}/end_snapshot`.\n * Added new field `isCustomRetentionApplied` to ManagedVolumeSnapshotDetail\n   returned by `GET /managed_volume/snapshot/{id}`.\n * Added new field `isCustomRetentionApplied` to NutanixVmSnapshotSummary\n   returned by `GET /nutanix/vm/{id}/snapshot`.\n * Added new field `isCustomRetentionApplied` to NutanixVmSnapshotDetail\n   returned by `GET /nutanix/vm/snapshot/{id}`.\n * Added new field `isCustomRetentionApplied` to OracleDbSnapshotSummary\n   returned by `GET /oracle/db/{id}/snapshot`.\n * Added new field `isCustomRetentionApplied` to OracleDbSnapshotDetail returned\n   by `GET /oracle/db/snapshot/{id}`.\n * Added new field `isCustomRetentionApplied` to\n   StorageArrayVolumeGroupSnapshotSummary returned by\n   `GET /storage/array_volume_group/{id}/snapshot`.\n * Added new field `isCustomRetentionApplied` to\n   StorageArrayVolumeGroupSnapshotDetail returned by\n   `GET /storage/array_volume_group/snapshot/{id}`.\n * Added new field `isCustomRetentionApplied` to VcdVappSnapshotSummary returned\n   by `GET /vcd/vapp/{id}/snapshot`.\n * Added new field `isCustomRetentionApplied` to VcdVappSnapshotDetail returned\n   by `GET /vcd/vapp/snapshot/{id}`.\n * Added new field `isCustomRetentionApplied` to VolumeGroupSnapshotSummary\n   returned by `GET /volume_group/{id}/snapshot`.\n * Added new field `isCustomRetentionApplied` to VolumeGroupSnapshotDetail\n   returned by `GET /volume_group/snapshot/{id}`.\n * Added optional field `isQueuedSnapshot` to the response of\n   GET `/managed_volume/{id}/snapshot`, GET `/managed_volume/snapshot/{id}`.\n   and POST `/managed_volume/{id}/end_snapshot`.\n   The field specifies if ManagedVolume snapshots are in queue to be stored\n   as patch file.\n * Added new field `securityLevel` to `SnmpTrapReceiverConfig` object as\n   optional input parameter for SNMPv3, which is used in\n   `PATCH /cluster/{id}/snmp_configuration` and\n   `GET /cluster/{id}/snmp_configuration`.\n * Added new field `advancedRecoveryConfigBase64` to `ExportOracleDbConfig`.\n   and `MountOracleDbConfig` objects as optional input parameter\n   during Oracle recovery.\n * Added new optional field `isRemote` to UnmanagedObjectSummary object, which\n   is returned from a `GET /unmanaged_object` call.\n * Added new field `hostLogRetentionHours` to OracleRacDetail returned by\n   `GET /oracle/rac/{id}` and `PATCH /oracle/rac/{id}`.\n * Added new field `hostLogRetentionHours` to OracleHostDetail returned by\n   `GET /oracle/host/{id}` and `PATCH /oracle/host/{id}`.\n * Added new field `hostLogRetentionHours` to OracleDbDetail returned by\n   `GET /oracle/db/{id}` and `PATCH /oracle/db/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of AppBlueprintSnapshotSummary returned\n   by `GET /app_blueprint/{id}/snapshot`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of AppBlueprintSnapshotDetail returned by\n   `GET /app_blueprint/snapshot/{id}` .\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of AwsEc2InstanceSummary returned by\n   `GET /aws/ec2_instance`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of AwsEc2InstanceDetail returned by\n   `GET /aws/ec2_instance/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of AwsEc2InstanceDetail returned by\n   `PATCH /aws/ec2_instance/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of HypervVirtualMachineSnapshotSummary\n   returned by `GET /hyperv/vm/{id}/snapshot`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of HypervVirtualMachineSnapshotDetail\n   returned by `GET /hyperv/vm/snapshot/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of ManagedVolumeSnapshotSummary returned\n   by `GET /managed_volume/{id}/snapshot`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of ManagedVolumeSnapshotSummary returned by\n   `POST /managed_volume/{id}/end_snapshot`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of ManagedVolumeSnapshotDetail returned\n    by `GET /managed_volume/snapshot/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of NutanixVmSnapshotSummary returned by\n   `GET /nutanix/vm/{id}/snapshot`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of NutanixVmSnapshotDetail returned by\n   `GET /nutanix/vm/snapshot/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of OracleDbSnapshotSummary returned by\n   `GET /oracle/db/{id}/snapshot`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of OracleDbSnapshotDetail returned by\n   `GET /oracle/db/snapshot/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of StorageArrayVolumeGroupSnapshotSummary\n   returned by `GET /storage/array_volume_group/{id}/snapshot`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of StorageArrayVolumeGroupSnapshotDetail\n   returned by `GET /storage/array_volume_group/snapshot/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of VcdVappSnapshotSummary returned by\n   `GET /vcd/vapp/{id}/snapshot`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of VcdVappSnapshotDetail returned by\n   `GET  /vcd/vapp/snapshot/{id}`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of VolumeGroupSnapshotSummary returned by\n   `GET /volume_group/{id}/snapshot`.\n * Added new field `snapshotFrequency` to `snapshotLocationRetentionInfo` field\n   of `SnapshotRetentionInfo` field of VolumeGroupSnapshotDetail returned by\n   `GET /volume_group/snapshot/{id}`.\n * Added new field `SnapshotRetentionInfo` to AppBlueprintSnapshotSummary\n   returned by `GET /app_blueprint/{id}/snapshot`.\n * Added new field `SnapshotRetentionInfo` to AppBlueprintSnapshotDetail\n   returned by `GET /app_blueprint/snapshot/{id}` .\n * Added new field `SnapshotRetentionInfo` to AwsEc2InstanceSummary returned\n   by `GET /aws/ec2_instance`.\n * Added new field `SnapshotRetentionInfo` to AwsEc2InstanceDetail returned\n   by `GET /aws/ec2_instance/{id}`.\n * Added new field `SnapshotRetentionInfo` to AwsEc2InstanceDetail returned\n   by `PATCH /aws/ec2_instance/{id}`.\n * Added new field `SnapshotRetentionInfo` to\n   HypervVirtualMachineSnapshotSummary returned by\n   `GET /hyperv/vm/{id}/snapshot`.\n * Added new field `SnapshotRetentionInfo` to\n   HypervVirtualMachineSnapshotDetail returned by\n   `GET /hyperv/vm/snapshot/{id}`.\n * Added new field `SnapshotRetentionInfo` to ManagedVolumeSnapshotSummary\n   returned by `GET /managed_volume/{id}/snapshot`.\n * Added new field `SnapshotRetentionInfo` to ManagedVolumeSnapshotSummary\n   returned by `POST /managed_volume/{id}/end_snapshot`.\n * Added new field `SnapshotRetentionInfo` to ManagedVolumeSnapshotDetail\n   returned by `GET /managed_volume/snapshot/{id}`.\n * Added new field `SnapshotRetentionInfo` to NutanixVmSnapshotSummary\n   returned by `GET /nutanix/vm/{id}/snapshot`.\n * Added new field `SnapshotRetentionInfo` to NutanixVmSnapshotDetail\n   returned by `GET /nutanix/vm/snapshot/{id}`.\n * Added new field `SnapshotRetentionInfo` to OracleDbSnapshotSummary\n   returned by `GET /oracle/db/{id}/snapshot`.\n * Added new field `SnapshotRetentionInfo` to OracleDbSnapshotDetail returned\n   by `GET /oracle/db/snapshot/{id}`.\n * Added new field `SnapshotRetentionInfo` to\n   StorageArrayVolumeGroupSnapshotSummary returned by\n   `GET /storage/array_volume_group/{id}/snapshot`.\n * Added new field `SnapshotRetentionInfo` to\n   StorageArrayVolumeGroupSnapshotDetail returned by\n   `GET /storage/array_volume_group/snapshot/{id}`.\n * Added new field `SnapshotRetentionInfo` to VcdVappSnapshotSummary returned\n   by `GET /vcd/vapp/{id}/snapshot`.\n * Added new field `SnapshotRetentionInfo` to VcdVappSnapshotDetail returned\n   by `GET /vcd/vapp/snapshot/{id}`.\n * Added new field `SnapshotRetentionInfo` to VolumeGroupSnapshotSummary\n   returned by `GET /volume_group/{id}/snapshot`.\n * Added new field `SnapshotRetentionInfo` to VolumeGroupSnapshotDetail\n   returned by `GET /volume_group/snapshot/{id}`.\n * Added optional field `networkInterface` to `NetworkThrottleUpdate`. The\n   field allows users to specify non standard network interfaces. This applies\n   to the `PATCH /network_throttle/{id}` endpoint.\n * Added mandatory field `networkInterface` to `NetworkThrottleSummary`.\n   This applies to the endpoints `GET /network_throttle` and\n   `GET /network_throttle/{id}`.\n * Added endpoint `POST /cluster/{id}/manual_discover`, which allows\n   the customer to manually input data that would be learned using\n   mDNS discovery. Returns same output as discover.\n * `PATCH /cluster/{id}/snmp_configuration` will now use\n   `SnmpConfigurationPatch` as a parameter.\n * Added optional field `user` to `SnmpTrapReceiverConfig`. The field\n   specifies which user to use for SNMPv3 traps.\n * Added optional field `users` to `SnmpConfiguration`. The field contains\n   usernames of users configured for SNMPv3.\n * Added two new models `SnmpUserConfig` to store user credentials and\n   `SnmpConfigurationPatch`.\n * Added new endpoint `POST /role/authorization_query` to get authorizations\n   granted to roles.\n * Added new endpoint `GET /role/{id}/authorization` to get authorizations\n   granted to a role.\n * Added new endpoint `POST /role/{id}/authorization` to grant authorizations\n   to a role.\n * Added new endpoint `POST /role/{id}/authorization/bulk_revoke` to revoke\n   authorizations from a role.\n * Added optional field `recoveryInfo` to UnmanagedObjectSummary.\n * Added optional field `isRetentionLocked` to SlaInfo.\n   The parameter indicates that the SLA Domain associated with the job is a\n   Retention Lock SLA Domain.\n * Added optional field `legalHoldDownloadConfig` to\n   `FilesetDownloadFilesJobConfig`,`HypervDownloadFileJobConfig`,\n   `DownloadFilesJobConfig`,`ManagedVolumeDownloadFileJobConfig`,\n   `NutanixDownloadFilesJobConfig`,`StorageArrayDownloadFilesJobConfig`,\n   `VolumeGroupDownloadFilesJobConfig`.This is an optional argument\n   containing a Boolean parameter to depict if the download is being\n   triggered for Legal Hold use case. This change applies to\n   /fileset/snapshot/{id}/download_files,\n   /hyperv/vm/snapshot/{id}/download_file,\n   /vmware/vm/snapshot/{id}/download_files,\n   /managed_volume/snapshot/{id}/download_file,\n   /nutanix/vm/snapshot/{id}/download_files,\n   /storage/array_volume_group/snapshot/{id}/download_files and\n   /volume_group/snapshot/{id}/download_files endpoints.\n * Added optional field isPlacedOnLegalHold to BaseSnapshotSummary.\n   The Boolean parameter specifies whether the snapshot is placed under a\n   Legal Hold.\n * Added new endpoint `GET /ods_configuration`.\n   Returns the current configuration of on-demand snapshot handling.\n * Added new endpoint `PUT /ods_configuration`.\n   Update the configuration of on-demand snapshot handling.\n * Added two new models `OdsConfigurationSummary`,  `OdsPolicyOnPause` and a new\n   enum `SchedulingType`.\n * Added `odsPolicyOnPause` field in `OdsConfigurationSummary` to include the\n   policy followed by the on-demand snapshots, during an effective pause.\n * Added new enum field `schedulingType` in `OdsPolicyOnPause` to support\n   deferring the on-demand snapshots during an effective pause.\n * Added optional query parameter `show_snapshots_legal_hold_status` to\n   `GET /archive/location` endpoint, indicating if `isLegalHoldSnapshotPresent`.\n   field should be populated in response.\n * Renamed `MsSql` ManagedVolumeApplicationTag to `Mssql`.\n * Added storage array volume group asynchronous request status endpoint\n   `GET /storage/array_volume_group/request/{id}`. Request statuses for\n   storage array volume groups which previously used\n   `/storage/array/request/{id}` must now use this new endpoint.\n * Added forceFull parameter to the properties of patch volume group object\n   to permit forcing a full snapshot for a specified volume group.\n * Added `isDcaAccountInstance` field to `AwsEc2InstanceSummary` to indicate\n   whether the EC2 instance belongs to a DCA account. This impacts the endpoints\n   `GET /aws/ec2_instance` and `GET /aws/ec2_instance/{id}`.\n * Added `encryptionKeyId` as an optional field in CreateCloudInstanceRequest\n   definition used in the on-demand API conversion API `/cloud_on/aws/instance`.\n   to support KMS encryption for CloudOn conversion in AWS.\n * Added new endpoint `GET /job/{id}/child_job_instance`.\n   Returns the child job instances (if any) spawned by the given parent job\n   instance. This endpoint requires a support token to access.\n * Updated `ArchivalLocationSummary` returned by `GET /archive/location`.\n   endpoint to include the `isConsolidationEnabled` field, to indicate\n   if consolidation is enabled for the given archival location.\n * Changed `encryptionPassword` parameter to optional in\n   `NfsLocationCreationDefinition` to support creating NFS archival location\n   without encryption via `POST /archive/nfs`.\n * Added an optional parameter `disabledEncryption` to\n   `NfsLocationCreationDefinition` with a default value of false, to enable or\n   disable encryption via `POST /archive/nfs`.\n * Added a new model `ValidationResponse` and REST API endpoints\n   `/cloud_on/validate/instantiate_on_cloud` and\n   `/cloud_on/validate/cloud_image_conversion` for validation of cloud\n   conversion.\n * Added `sortBy` and `sortOrder` parameters to `GET /hyperv/vm/snapshot/mount`.\n   to allow  sorting of Hyper-V mounts.\n   Added the enum `HypervVirtualMachineMountListSortAttribute`, defining which\n   properties of Hyper-V mounts are sortable.\n * Added an optional field `shouldApplyToExistingSnapshots` in\n   `SlaDomainAssignmentInfo` to apply the new SLA configuration to existing\n   snapshots of protected objects.\n * Added a new optional field `isOracleHost` to `HostRegister` in\n   `POST /host/bulk` and `HostUpdate` in `PATCH /host/bulk` to indicate if we\n   should discover Oracle information during registration and host refresh.\n * Added a new model `NutanixVirtualDiskSummary` that is returned by\n   `GET /nutanix/vm/{id}` to include the disks information for a Nutanix\n   virtual machine.\n * Added mandatory field `pendingSnapshot` to `SystemStorageStats`, which is\n   returned by `GET /stats/system_storage`.\n * Added optional isIsilonChangelistEnabled in the NasBaseConfig and NasConfig.\n   NasBaseConfig is returned as part of HostSummary, which is returned by the\n   `Get /host/envoy` and `Get /host` endpoints. NasConfig is used by\n   HostRegister and HostUpdate. The HostRegister is used by the\n   `Post /host/bulk` endpoint and the HostUpdate is used by the\n   `PATCH /host/bulk` endpoint.\n * Added a new model `HostShareParameters`. This model has two fields,\n   isNetAppSnapDiffEnabled and isIsilonChangelistEnabled. The\n   isNetAppSnapDiffEnabled is a Boolean value that specifies whether the\n   SnapDiff feature of NetApp NAS is used to back up the NAS share. The\n   isIsilonChangelistEnabled is a Boolean value that specifies whether\n   the Changelist feature of Isilon NAS is used to back up the NAS share.\n * Added optional field `HostShareParameters` in `HostFilesetShareSummary`,\n   `HostFilesetShareDetail` and `HostShareDetail`. The HostShareDetail impacts\n   the endpoints `Get /host/share` and `Post /host/share`. The\n   `HostFilesetShareDetail` impacts the endpoint `Get /host_fileset/share/{id}`.\n   . The HostFilesetShareSummary impacts the endpoint\n   `Get /host_fileset/share`.\n * Added `isInVmc` in `GET /vcd/vapp/{id}`, and `PATCH /vcd/vapp/{id}`.\n   to return whether the virtual machine is in a VMC setup.\n * Added new endpoint `GET /vmware/hierarchy/{id}/export`. Returns the \n   VmwareHierarchyInfo object with the given ID. \n * Added optional field `platformDetails` to `PlatformInfo`, which is returned\n   by `GET /cluster/{id}/platforminfo`.\n * Added the optional field `shouldForceFull` to `MssqlDbUpdate` object,\n   which is referred by `MssqlDbUpdateId`, which is referred as the\n   body parameter of `PATCH /mssql/db/bulk`.\n * Added new value `RangeInTime` to `RecoveryPointType` enum, which is used in\n  the `ReportTableRequest` object for the POST `/report/{id}/table` and POST \n  `/report/data_source/table` endpoints.\n * Added new field `isOracleHost` to HostDetail\n   returned by `GET /host/{id}`.\n * Renamed `Mssql` ManagedVolumeApplicationTag back to `MsSql`.\n\n ### Changes to Internal API in Rubrik version 5.1.0\n ## Breaking changes:\n * Changed response type of percentInCompliance and percentOutOfCompliance\n   in ComplianceSummary to double.\n * Renamed new enum field `MissedSnapshots` to `MissedLocalSnapshots`.\n   and `LastSnapshot` to `LatestLocalSnapshot`, in the\n   following properties:\n   measure property in ChartSummary, column property in TableSummary,\n   and sortBy property in ReportTableRequest.\n * Renamed effectiveThroughput to throughput in EventSeriesMonitoredJobSummary.\n * Renamed realThroughput to throughput in EventSeriesSummary.\n * Updated response of GET /event_series/{id} to remove effectiveThroughput.\n * Renamed paths `/storage/array/volume/group` to `/storage/array_volume_group`.\n * Renamed the field cassandraSetup in ReplaceNodeStatus to metadataSetup\n * Renamed the field cassandraSetup in RecommisionNodeStatus to metadataSetup\n * Renamed the field cassandraSetup in AddNodesStatus to metadataSetup\n * Renamed the field cassandraSetup in ClusterConfigStatus to metadataSetup\n * Renamed the field removeCassandra in RemoveNodeStatus to removeMetadatastore\n   for the GET /cluster/{id}/remove_node endpoint.\n * Moved the `GET /blackout_window` endpoint from internal to V1.\n * Moved the `PATCH /blackout_window` endpoint from internal to V1.\n * Removed endpoint POST /report/global_object endpoint.\n   /report/data_source/table can be used to get the same information.\n * Made accessKey optional in ObjectStoreLocationDetail as accessKey is not\n   defined in Cross Account Role Based locations. Also made accessKey required\n   again in ObjectStoreLocationDefinition.\n * Removed `progressPercentage` from `EventSeriesMonitoredJobSummary` object.\n * Removed endpoint `POST cluster-id-security-password-strength` since it is\n   no longer used at bootstrap.\n * Moved the GET `/mssql/hierarchy/{id}/descendants` and\n   GET `/mssql/hierarchy/{id}/children` endpoints from internal to v1.\n\n ## Feature Additions/improvements:\n * Added optional field `shouldSkipScheduleRecoverArchivedMetadataJob` to\n   the body parameter of `POST /archive/object_store/reader/connect`, to\n   determine whether to schedule the archival recovery job.\n   When the value is 'false,' the recovery job is scheduled normally.\n   When the value is 'true,' the recovery job is not scheduled.\n   The default behavior is to schedule the recovery job.\n * Added mandatory field `cdp` to SystemStorageStats.\n * Added optional field `agentStatus` to NutanixHierarchyObjectSummary.\n   The field indicates whether a Rubrik backup agent is registered to the\n   Nutanix object.\n * Added optional field `shouldUseAgent` to `RestoreFilesJobConfig`.\n   in `POST /vmware/vm/snapshot/{id}/restore_files` to specify\n   whether to use Rubrik Backup Service to restore files. Default value is true.\n * GET /managed_object/bulk/summary and GET\n   /managed_object/{managed_id}/summary no longer include archived objects\n   with no unexpired snapshots in their results.\n * Added new required Boolean field `isDbLocalToTheCluster` to\n   `OracleDbSummary` and `OracleDbDetail`.\n * Added optional field `awsAccountId` to ObjectStoreLocationSummary.\n * Added optional field `shouldRecoverSnappableMetadataOnly` to all the\n   reader location connect definitions.\n * Added new enum value `ArchivalComplianceStatus` to the following properties:\n   attribute property in ChartSummary and column property in TableSummary\n * Added new enum fields `ArchivalInComplianceCount`,\n   `ArchivalNonComplianceCount` and `MissedArchivalSnapshots` to the\n   following properties:\n   measure property in ChartSummary, column property in TableSummary,\n   and sortBy property in ReportTableRequest.\n * GET /managed_object/bulk/summary and GET\n   /managed_object/{managed_id}/summary will always include the correct relic\n   status for hosts and their descendants.\n * Added field `isLocked` to PrincipalSummary.\n * Added optional query parameter `snappableStatus` to /vmware/data_center and\n   /vmware/host. This parameter enables a user to fetch the set of protectable\n   objects from the list of objects visible to that user.\n * Added optional field `archivalComplianceStatus` to RequestFilters\n * Added optional field `archivalComplianceStatus` to FilterSummary\n * Added optional field `alias` to HostSummary, HostRegister, and HostUpdate\n   schemas. This field will allow the user to specify an alias for each host\n   which can be used for search.\n * Added optional field `subnet` to ManagedVolumeExportConfig\n * Added optional field `status` to oracle/hierarchy/{id}/children\n * Added optional field `status` to oracle/hierarchy/{id}/descendants\n * Added optional field `status` to hyperv/hierarchy/{id}/children\n * Added optional field `status` to hyperv/hierarchy/{id}/descendants\n * Added optional field `numNoSla` to ProtectedObjectsCount\n * Added optional field `numDoNotProtect` to ProtectedObjectsCount\n * Added optional field `limit`, `offset`, `sort_by`, `sort_order` to\n   /node/stats\n * Added optional field encryptionAtRestPassword to configure password-based\n   encryption for an edge instance.\n * Added new endpoint GET /report/data_source/{data_source_name}/csv.\n * Added new endpoint POST /report-24_hour_complianace_summary.\n * Added new endpoint POST /report/data-source/{data_source_name} to get\n   columns directly from report data source.\n * Added optional field compliance24HourStatus to RequestFilters object.\n * Added the `port` optional field to QstarLocationDefinition. The `port` field\n   enables a user to specify the server port when adding a new location or\n   editing an existing location.\n * Added optional field archivalTieringSpec to ArchivalSpec and ArchivalSpecV2\n   to support archival tiering. This enables the user to configure either\n   Instant Tiering or Smart Tiering (with a corresponding minimum accessible\n   duration) on an SLA domain with archival configured to an Azure archival\n   location.\n * Updated endpoints /vcd/vapp, /oracle/db and /aws/ec2_instance\n   to have a new optional query paramter, indicating if backup task information\n   should be included.\n * Added optional field logConfig to SlaDomainSummaryV2, SlaDomainDefinitionV2\n   and SlaDomainPatchDefintionV2 to support CDP (ctrlc). The parameters\n   distinguish SLAs with CDP enabled from SLAs with CDP disabled, and enable\n   users to specify log retention time. The field also provides an optional\n   frequency parameter whhich can be used by Oracle and SQL Server log backups.\n * Added optional field logRetentionLimit to ReplicationSpec to support\n   CDP replication. The field gives the retention limit for logs at the\n   specified location.\n * Moved the `GET /vmware/compute_cluster` endpoint from internal to V1.\n * Moved the `GET /vmware/compute_cluster/{id}` endpoint from internal to V1.\n * Changed the existing `PATCH mssql/db/bulk` endpoint to return an\n   unprotectable reason as a string in the `unprotectableReason` field instead\n   of a JSON struct.\n * Added optional field `kmsMasterKeyId` and changed the existing field\n   `pemFileContent` to optional field in `DcaLocationDefinition`.\n * Added new optional field `enableHardlinkSupport` to FilesetSummary and\n   FilesetCreate in `POST /fileset`, \"GET /fileset\" and \"PATCH /fileset/{id}\"\n   endpoints to enable recognition and deduplication of hardlinks in\n   fileset backup.\n * Added optional query parameter to `GET /archive/location` endpoint,\n   indicating if `isRetentionLockedSnapshotProtectedPresent` field should\n   be populated in response.\n * Added continuous data protection state for each VMware virtual machine\n * Added new endpoint `PUT /polaris/archive/proxy_setting`.\n * Added new endpoint `GET /polaris/archive/proxy_setting/{id}`.\n * Added new endpoint `DELETE /polaris/archive/proxy_setting/{id}`.\n * Added new endpoint `PUT /polaris/archive/aws_compute_setting`.\n * Added new endpoint `GET /polaris/archive/aws_compute_setting/{id}`.\n * Added new endpoint `DELETE /polaris/archive/aws_compute_setting/{id}`.\n * Added new endpoint `PUT /polaris/archive/azure_compute_setting`.\n * Added new endpoint `GET /polaris/archive/azure_compute_setting/{id}`.\n * Added new endpoint `DELETE /polaris/archive/azure_compute_setting/{id}`.\n * Added new endpoint `PUT /polaris/archive/aws_iam_location`.\n * Added new endpoint `GET /polaris/archive/aws_iam_location/{id}`.\n * Added new endpoint `PUT /polaris/archive/azure_oauth_location`.\n * Added new endpoint `GET /polaris/archive/azure_oauth_location/{id}`.\n * Added new endpoint `PUT /polaris/archive/aws_iam_customer_account`.\n * Added new endpoint `GET /polaris/archive/aws_iam_customer/{id}`.\n * Added new endpoint `DELETE /polaris/archive/aws_iam_customer/{id}`.\n * Added new endpoint `PUT /polaris/archive/azure_oauth_customer`.\n * Added new endpoint `GET /polaris/archive/azure_oauth_customer/{id}`.\n * Added new endpoint `DELETE /polaris/archive/azure_oauth_customer/{id}`.\n * Updated `ArchivalLocationSummary` returned by `GET /archive/location`.\n   endpoint to include `currentState` field, to indicate whether the archival\n   location is connected or temporarily disconnected.\n * Updated `ArchivalLocationSummary` returned by `GET /archive/location`.\n   endpoint to include `isComputeEnabled` field, to indicate whether the\n   archival location has cloud compute enabled.\n * Added optional field `cloudStorageTier` to `BaseSnapshotSummary`, to indicate\n   the current storage tier of the archived copy of a snapshot.\n * Added endpoint `PUT /polaris/archive/aws_iam_location/reader_connect`.\n   to connect as a reader to an IAM based AWS archival location.\n * Added endpoint `PUT /polaris/archive/azure_oauth_location/reader_connect`.\n   to connect as a reader to an OAuth based Azure archival location.\n * Added endpoint `POST polaris/archive/location/{id}/reader/promote`.\n   to promote the current cluster to be the owner of a specified IAM based AWS\n   archival location that is currently connected as a reader location.\n * Added endpoint `POST polaris/archive/location/{id}/reader/refresh`.\n   to sync the current reader cluster with the contents on the IAM based AWS\n   archival location.\n * Added effectiveSlaDomainName and effectiveSlaDomainSourceId fields\n   to `GET /vmware/vcenter/{id}/tag_category` response object.\n * Added effectiveSlaDomainName and effectiveSlaDomainSourceId fields\n   to `GET /vmware/vcenter/{id}/tag` response object.\n * Added continuous data protection status for reporting.\n * Added optional field `localCdpStatus` to the following components:\n   ChartSummary, TableSummary, ReportTableRequest, RequestFilters and\n   FilterSummary.\n * Added `ReportSnapshotIndexState` and `ReportObjectIndexType` to\n   `/internal_report_models/internal/definitions/enums/internal_report.yml`.\n * Added optional field `latestSnapshotIndexState` and `objectIndexType` to\n   the following components:\n   TableSummary, ReportTableRequest, RequestFilters and FilterSummary.\n * Added 24 hour continuous data protection healthy percentage for reporting.\n * Added optional field `PercentLocal24HourCdpHealthy` to the following\n   components: TableSummary, ReportTableRequest.\n * Added optional field `replicas` to MssqlHierarchyObjectSummary.\n * Added optional field `hosts` to MssqlHierarchyObjectSummary.\n * Added continuous data protection local log storage size and local throughput\n   consumption for reporting.\n * Added optional fields `localCdpThroughput` and `localCdpLogStorage` to the\n   following components: ChartSummary, TableSummary and ReportTableRequest.\n * Added optional field requestExclusionFilters to ReportTableRequest.\n * Added an optional field to ManagedVolumeSummary to retrieve the associated\n   subnet.\n * Added optional field isEffectiveSlaDomainRetentionLocked to Snappable.\n   The parameter depicts if the effective SLA domain for the snappable is\n   a Retention Lock SLA Domain.\n * Updated the set of possible continuous data protection statuses for each\n   VmwareVirtualMachine.\n * Added the optional field isEffectiveSlaDomainRetentionLocked to\n   FilesetSummary. The field is a Boolean that specifies whether the effective\n   SLA Domain of a fileset is retention locked.\n * Added optional field iConfiguredSlaDomainRetentionLocked to SlaAssignable.\n   The parameter depicts if the configured SLA domain for the object is a\n   Retention Lock SLA Domain.\n * Updated `ArchivalLocationSummary` returned by `GET /archive/location`.\n   endpoint to include the `isTieringSupported` field, to indicate\n   whether a given archival location supports tiering.\n * Added continuous data protection replication status for reporting.\n * Added CdpReplicationStatus as an optional field to the TableSummary and\n   ReportTableRequest components.\n * Added optional CdpReplicationStatus field to RequestFilters and\n   FiltersSummary.\n * Added optional field isEffectiveSlaDomainRetentionLocked to\n   SearchItemSummary. The Boolean parameter specifies whether the effective\n   SLA Domain for the search item is a Retention Lock SLA Domain.\n * Updated `OracleMountSummary` returned by GET /oracle/db/mount\n   endpoint to include the isInstantRecovered field, to indicate\n   whether the mount was created during an Instant Recovery or Live Mount.\n * Added optional field isEffectiveSlaDomainRetentionLocked to\n   ManagedObjectSummary. The Boolean parameter specifies whether the effective\n   SLA Domain for the search item is a Retention Lock SLA Domain.\n * Added optional field `isRetentionSlaDomainRetentionLocked` to\n   UnmanagedSnapshotSummary. The parameter indicates that the retention SLA\n   Domain associated with the snapshot is a Retention Lock SLA Domain.\n * Added optional field `isSlaRetentionLocked` to EventSeriesSummary.\n   The parameter indicates that the SLA Domain associated with the event\n   series is a Retention Lock SLA Domain.\n * Updated `ArchivalLocationSummary` returned by `GET /archive/location`.\n   endpoint to include the `isConsolidationEnabled` field, to indicate\n   if consolidation is enabled for the given archival location.\n * Added the `hasUnavailableDisks` field to `NodeStatus` to indicate whether a\n   node has unavailable (failed or missing) disks. This change affects the\n   endpoints `GET /cluster/{id}/node`, `GET /node`, `GET /node/{id}`, `GET\n   /node/stats`, and `GET /node/{id}/stats`.\n * Added optional NAS vendor type to the HostShareDetail\n   This change affectes the endpoints `Get /host/share`, `Post /host/share` and\n   `Get /host/share/{id}`.\n * Added optional isSnapdiffEnabled in the NasBaseConfig and NasConfig\n   NasBaseConfig is returned as part of HostSummary, which is returned by the\n   `Get /host/envoy` and `Get /host` endpoints. NasConfig is used by\n   HostRegister and HostUpdate. The HostRegister field is used by the\n   `Post /host/bulk` endpoint and the HostUpdate is field used by the\n   `PATCH /host/bulk` endpoint.\n * Added optional snapdiffUsed in the FilesetSnapshotSummary\n   The FilesetSnapshotSummary is used by FilesetDetail and\n   FilesetSnapshotDetail. This change affects the endpoints `Post\n   /fileset/bulk`, `Get /host_fileset/share/{id}` and\n   `Get /fileset/snapshot/{id}`.\n\n ### Changes to Internal API in Rubrik version 5.0.4\n ## Feature Additions/improvements:\n * Added objectState to FilterSummary which is part of body parameter of\n   PATCH/report/{id}\n * Added objectState to RequestFilters which is part of body parameter of\n   POST /report/data_source/table\n\n ### Changes to Internal API in Rubrik version 5.0.3\n ## Breaking changes:\n * Removed fields 'virtualMedia' and 'ssh' from IpmiAccess and\n   IpmiAccessUpdate.\n\n ## Feature Additions/improvements:\n * Added a new optional field 'oracleQueryUser' to HostRegister, HostUpdate\n   and HostDetail objects, for setting the Oracle username for account with\n   query privileges on the host. This applies to the following endpoints:\n   `POST /host/bulk`, `PATCH /host/{id}`, and `GET /host/{id}`.\n * Added a field `affectedNodeIds` to the `SystemStatus` object. This object is\n   returned by `GET /cluster/{id}/system_status`.\n * Made `nodeId` a required field of the `DiskStatus` object. This object, or\n   an object containing this object, is returned by the following endpoints:\n   `GET /cluster/{id}/disk`, `PATCH /cluster/{id}/disk/{disk_id}`, and\n   `GET /node/{id}`.\n\n ### Changes to Internal API in Rubrik version 5.0.2\n ## Feature Additions/improvements:\n * Added an optional fields `subnet` to `ManagedVolumeSummary` to retrieve the associated\n   subnet.\n * Added `tablespaces` field in `OracleDbSnapshotSummary` to include the list\n   of tablespaces in the Oracle database snapshot.\n * Added new endpoint `POST /hierarchy/bulk_sla_conflicts`.\n * Added optional field `limit`, `offset`, `sort_by`, `sort_order` to\n   `GET /node/stats`.\n * Added optional field `numNoSla` to `ProtectedObjectsCount`.\n * Added optional field `numDoNotProtect` to `ProtectedObjectsCount`.\n * Introduced optional field `logicalSize` to `VirtualMachineDetail`. This\n   field gives the sum of logical sizes of all the disks in the virtual\n   machine.\n * Added optional fields `nodeIds`, `slaId`, `numberOfRetries`, and\n   `isFirstFullSnapshot` to the response of `GET /event_series/{id}`.\n * Added `SapHanaLog` tag in `applicationTag` field of `ManagedVolumeConfig`.\n   for SAP HANA log managed volumes.\n * Added required field `dbSnapshotSummaries` in `OracleRecoverableRange` to include\n   the list of database snapshots in each Oracle recoverable range.\n * Added field `isOnline` to MssqlDbSummary and changed `hasPermissions` to\n   required field.\n * Added `DbTransactionLog` tag, in applicationTag field of\n   `ManagedVolumeConfig`, for generic log managed volumes. ApplicationTag has\n   to be specified in the request field of POST /managed_volume.\n\n ### Changes to Internal API in Rubrik version 5.0.1\n ## Breaking changes:\n * Removed `GET/POST /smb/enable_security` endpoints.\n * Changed the `objectId` type in `EventSeriesMonitoredJobSummary` and\n   `EventSeriesSummary` to a user-visible ID instead of a simple ID.\n * Updated endpoint `POST /smb/domain` to accept a list of domain controllers.\n * Removed endpoint `POST /report/global_object`.\n * Added optional field `kmsMasterKeyId` and changed the existing field\n   `pemFileContent` to optional field in `DcaLocationDefinition`.\n * Removed `progressPercentage` from `EventSeriesMonitoredJobSummary` object.\n\n ## Feature Additions/improvements:\n * Updated `ArchivalLocationSummary` returned by `GET /archive/location`.\n   endpoint to include `currentState` field, to indicate whether the archival\n   location is connected or temporarily disconnected.\n * Added optional field `subnet` to ManagedVolumeExportConfig.\n * Added the`PUT /smb/config` endpoint to manage SMB configuration.\n * Added the following two endpoints.\n   - `GET /stats/per_vm_storage`.\n   - `GET /stats/per_vm_storage/{vm_id}`.\n * Added optional field `isStickySmbService` to the response of\n   `GET /smb/domain` and `POST /smb/domain`.\n * Added new endpoint `GET /report/data_source/{data_source_name}/csv`.\n * Added new endpoint `POST /report_24_hour_complianace_summary`.\n * Added new endpoint `POST /report/data-source/{data_source_name}` to get\n   columns directly from report data source.\n * Added new report API endpoints:\n   - `GET /report/summary/physical_storage_time_series`.\n   - `GET /report/summary/average_local_growth_per_day`.\n * Added `GET /node/stats` which returns stats for all nodes.\n * Added `GET /cluster/{id}/security/password/zxcvbn` to return\n   the enabled or disabled status of ZXCVBN validation for new passwords.\n * Added `POST /cluster/{id}/security/password/zxcvbn` to toggle\n   ZXCVBN validation for new passwords.\n\n ### Changes to Internal API in Rubrik version 5.0.0\n ## Breaking changes:\n * Removed `/user_notification` endpoints.\n * Added `rawName` field in `ArchivalLocationSummary`, which contains the\n   raw name of the archival location.\n * Removed `shareType` from config field in PATCH /managedvolume request.\n * Changed `/cluster/me/ntp_server` endpoint to accept symmetric keys\n   and the corresponding hashing algorithm.\n * Removed `/job/type/prune_job_instances` endpoint.\n * Removed `/kmip/configuration` endpoint.\n * Removed `/session/api_token` endpoint.\n * Added `subnet` field in `ManagedVolumeConfig`, which specifies an outgoing\n   VLAN interface for a Rubrik node. This is a required value when creating a\n   managed volume on a Rubrik node that has multiple VLAN interfaces.\n * Removed the `VolumeGroupVolumeSummary`, and replaced it with\n   `HostVolumeSummary`.\n * Removed `volumeIdsIncludedInSnapshots` from `VolumeGroupDetail`.\n * Added new optional fields `mssqlCbtEnabled`, `mssqlCbtEffectiveStatus`,\n   `mssqlCbtDriverInstalled`, `hostVfdEnabled` and `hostVfdDriverState` to\n   GET /host/{id} response.\n * Responses for `/cluster/{id}/dns_nameserver` and\n   `/cluster/{id}/dns_search_domain` changed to be array of strings.\n * Added new required field `language` in `UserPreferencesInfo` for\n   GET /user/{id}/preferences and PATCH /user/{id}/preferences\n * Added new field `missedSnapshotTimeUnits` in `MissedSnapshot`.\n * Removed `localStorage` and `archiveStorage` from `UnmanagedSnapshotSummary`.\n * Moved the `Turn on or off a given AWS cloud instance` endpoint from PATCH of\n   `/cloud_on/aws/instance` to PATCH of `/cloud_on/aws/instance/{id}/cloud_vm`.\n   Also removed the `id` field from the definition of `CloudInstanceUpdate`.\n * Moved the `Turn on or off a given Azure cloud instance` endpoint from PATCH\n   of `/cloud_on/azure/instance` to PATCH of\n   `/cloud_on/azure/instance/{id}/cloud_vm`. Also removed the `id` field from\n   the definition of `CloudInstanceUpdate`.\n * Moved the `Delete a given AWS cloud instance` endpoint from DELETE of\n   `/cloud_on/aws/instance/{id}` to DELETE of\n   `/cloud_on/aws/instance/{id}/cloud_vm`.\n * Moved the `Delete a given Azure cloud instance` endpoint from DELETE of\n   `/cloud_on/azure/instance/{id}` to DELETE of\n   `/cloud_on/azure/instance/{id}/cloud_vm`.\n * Modified the existing endpoint DELETE `/cloud_on/aws/instance/{id}` to\n   remove entry of a given AWS cloud instance instead of terminating the\n   instance.\n * Modified the existing endpoint DELETE `/cloud_on/azure/instance/{id}` to\n   remove entry of a given Azure cloud instance instead of terminating the\n   instance.\n * Removed `/job/type/job-schedule_gc_job_start_time_now` endpoint. Use\n   endpoint POST `/job/type/garbageCollection` to schedule a GC job to\n   run now.\n * Removed `config` parameter from `/job/type/garbageCollection`.\n * Added optional parameter `jobInstanceId` to `EventSummary`.\n * Added `jobInstanceId` as a new optional query parameter for\n   GET /event_series/{id}/status endpoint.\n * Modified the endpoint GET /event_series/status to a POST and changed the\n   input parameter to a request body of type `EventSeriesDetail`.\n * Modified the endpoint PATCH /replication/target/{id} to take a request body\n   of type ReplicationTargetUpdate instead of ReplicationTargetDefinition.\n * Added Discovery EventType.\n * Added `name` and deprecated `hostname` in `HostSummary` and `HostDetail`.\n   response.\n * Added `isDeleted` and deprecated `isArchived` in MssqlDbReplica response.\n * Removed `GET /stats/cloud_storage` endpoint.\n * Removed DELETE /oracle/db/{id} endpoint to delete an Oracle database.\n * By default, a volume group is not associated with any volumes at creation\n   time. This default is a change from the 4.2 implementation, where newly\n   created volume groups contain all of the host volumes. On 5.0 clusters,\n   use the `GET /host/{id}/volume` endpoint to query all host volumes.\n\n ## Feature Additions/improvements:\n * Added new endpoint POST/report/data-source/{data_source_name} to get columns\n   directly from report data source.\n * Added optional field compliance24HourStatus to RequestFilters object.\n * Added GET /event/event_count-by-status to get job counts based on job status.\n * Added GET /event/event_count-by-job-type to get job counts based on job type.\n * Added GET /event_series endpoint to get all event series information in the\n   past 24 hours.\n * Added `oracleDatabase` to ManagedObjectDescendantCounts.\n * Introduced `POST /session/realm/{name}` endpoint to generate session\n   tokens in the LDAP display name of {name}.\n * Added optional `storageClass` field to `ObjectStoreReaderConnectDefinition`.\n   to store `storageClass` field for the newly connected reader location.\n * Added optional `encryptionType` field to `ObjectStoreLocationSummary` to\n   return encryption type used for an object store archival location.\n * Added a new endpoint POST /oracle/db/download/{snapshot_id} to download\n   a particular snapshot (and corresponding logs) for Oracle.\n * Added optional `ownerId` and `reference` fields to\n   `/managed_volume/{id}/begin_snapshot`.\n * Added new endpoints regarding references to Managed Volumes, which track\n   the processes writing to the Managed Volume.\n   - GET `/managed_volume/{id}/snapshot/{snapshot_id}/reference/{reference_id}`.\n     PUT `/managed_volume/{id}/snapshot/{snapshot_id}/reference/{reference_id}`.\n     PATCH\n     `/managed_volume/{id}/snapshot/{snapshot_id}/reference/{reference_id}`.\n     DELETE\n     `/managed_volume/{id}/snapshot/{snapshot_id}/reference/{reference_id}`.\n     are the endpoints for viewing, adding, editing and deleting a Managed\n     Volume snapshot reference respectively.\n * Added optional `apiToken` and `apiEndpoint` fields to NasConfig to support\n   Pure FlashBlade devices.\n * Added optional `smbValidIps`, `smbDomainName` and `smbValidUsers` fields\n   to `VolumeGroupMountSnapshotJobConfig` to support secure SMB.\n * Added optional `smbDomainName`, `smbValidIps`, `smbValidUsers` fields to\n   ManagedVolumeExportConfig to support secure SMB.\n * Added a new optional field `oracleSysDbaUser` to /host/{id} POST endpoint\n   during register host for setting the Oracle username for account with sysdba\n   privileges on this host.\n * Added a new endpoint DELETE /smb/domain/{domain_name} to delete the\n   SMB Domain.\n * Added a new endpoint POST /smb/domain/{domain_name}/join to configure\n   SMB Domain.\n * Added a new optional filed `oracleSysDbaUser` to /host/{id} endpoint for\n   changing the Oracle username for account with sysdba privileges on this\n   host.\n * Added a new endpoint POST /smb/enable_security to enable Live Mount\n   security\n * Made the `numChannels` field in ManagedVolumeConfig optional.\n * Added `applicationTag` field to ManagedVolumeConfig to specify workload\n   type for a managed volume.\n * Added Maintenance EventType\n * Added POST `/report/global_object` endpoint to directly query table data\n   from GlobalObject based on ReportTableRequest\n * Added new API endpoint GET `/diagnostic/snappable/{id}` returns\n   diagnostic information of all backup tasks of a data source.\n * Added new API endpoint GET `/diagnostic/snappable/{id}/latest` returns\n   diagnostic information of the most recent backup task of a data source.\n * Added `shareType` field to ManagedVolumeSummary and ManagedVolumeDetail.\n * Added oracle instant recovery API to trigger instant recovery of a\n   database\n * Added RAC, Oracle host and Oracle database fields to the the oracle\n   hierarchy API\n * Added a new endpoint GET /smb/domain to get a list of discovered\n   SMB domains in the environment.\n * Added a new endpoint GET /notification_setting to get all Notification\n   Settings.\n * Added a new endpoint POST /notification_setting to create a new\n   Notification Setting.\n * Added a new endpoint GET /notification_setting/{id} to get a Notification\n   Setting specified by the input id.\n * Added a new endpoint PATCH /notification_setting/{id} to update the values\n   for a specified Notification Setting.\n * Added a new endpoint DELTE /notification_setting/{id} to delete a\n   specified Notification Setting.\n * Introduced `POST /oracle/db/snapshot/{id}/export/tablespace` endpoint to\n   trigger the export of a single tablespace in an Oracle database.\n * Added a new optional field `shouldRestoreFilesOnly` to POST\n   /oracle/db/snapshot/{id}/export endpoint, used when exporting an Oracle\n   database, to specify whether the user requires a full recovery of the\n   database or a restoration of the database files.\n * Added /oracle/hierarchy/{id}/children endpoint to get children of\n   object in Oracle hierarchy\n * Added /oracle/hierarchy/{id}/descendants endpoint to get descendants of\n   object in Oracle hierarchy\n * Added a new endpoint POST /fileset/{id}/unprotect, which can be used to\n   unprotect a fileset and specify a retention policy to apply to existing\n   snapshots.\n * Added a new optional field `existingSnapshotRetention` to POST\n   /sla_domain/{id}/assign, used when unprotecting an object, to specify whether\n   to retain existing snapshots according to the current SLA domain, keep\n   existing snapshots forever, or expire all snapshots immediately. If not\n   specified, this field will default to the existing behavior of keeping\n   snapshots forever.\n * Introduced `GET /kmip/client` endpoint to get the stored KMIP client\n   configuration.\n * Introduced `PUT /kmip/client` endpoint to set the KMIP client configuration.\n * Introduced `GET /kmip/server` endpoint to get stored KMIP server\n   information.\n * Introduced `PUT /kmip/server` endpoint to add a a KMIP server.\n * Introduced `DELETE /kmip/server` endpoint to remove a a KMIP server.\n * Introduced `POST /session` endpoint to generate session tokens.\n * Added a new optional field `mfaServerId` to /user endpoint for\n   associating a configured MFA server.\n * Added REST support for Oracle RAC, Oracle Host.\n   Updated the detail and summary for Oracle Database.\n * Added support to run on-demand backup jobs, export snapshots, live\n   mount for Oracle Database.\n * Introduced `POST /mfa/rsa/server` endpoint to\n   create a new RSA server configuration for MFA integration.\n * Introduced `GET /mfa/rsa/server` endpoint to\n   get a list of RSA server configured for MFA integration.\n * Introduced `PATCH /mfa/rsa/server/{id}` endpoint to\n   modify RSA server configuration.\n * Introduced `GET /mfa/rsa/server/{id}` endpoint to\n   get RSA server configuration.\n * Introduced `POST /mfa/initialize` to initialize an attempt\n   to perform Multifactor authentication for a user.\n * Introduced `POST /mfa/session` to perform Multifactor\n   authentication for a user.\n * Introduced `POST /session/api_token` to create an API Token.\n * Added a new optional field `isArrayEnabled` to `FilesetTemplateCreate`.\n   for creation of storage array-enabled fileset templates. We also include\n   this new field in `FilesetTemplateDetail`.\n * Added a new optional field `arraySpec` to `FilesetCreate` for\n   creation of storage array-enabled filesets. We also include\n   this new field in `FilesetSummary` and `FilesetDetail`.\n * Introduced `GET /cluster/{id}/is_azure_cloud_only` to query if the cluster\n   supports only Azure public cloud.\n * Introduced `POST /unmanaged_object/assign_retention_sla` to set Retention\n   SLA of unmanaged objects.\n * Introduced `POST /unmanaged_object/snapshot/assign_sla` to set Retention\n   SLA of unmanaged snapshots.\n * Introduced `POST /mssql/db/bulk/snapshot/{id}` to take an on-demand snapshot\n   of multiple SQL Server databases. The result of this asynchronous request\n   can be obtained from `GET /mssql/db/bulk/snapshot/{id}`.\n * Added a new field unprotectable_reasons to GET /mssql/db/{id} and\n   GET /mssql/instance/{id}. This field keeps track of the reasons that a\n   SQL Server database or instance cannot be protected by Rubrik.\n * Introduced a new `GET /cluster/me/login_banner` and\n   `PUT /cluster/me/login_banner` endpoints to get and set the banner\n   that displays after each successful login.\n * Introduced a new `GET /cluster/me/security_classification` and\n   `PUT /cluster/me/security_classification` endpoints to get and set\n   the security classification banner for the cluster. The cluster UI\n   displays the banner in the specified color.\n * Introduced `GET /cluster/{id}/security/rksupport_cred` to provide\n   the status of the rksupport credentials.\n * Introduced  `POST /cluster/{id}/security/rksupport_cred` to update\n   the cluster-wide credentials for the specified cluster.\n * Introduced `POST /vmware/vm/snapshot/{id}/mount_disks` to attach VMDKs\n   from a mount snapshot to an existing virtual machine\n * Introduced new `GET /host/{id}/volume` endpoint to query the HostVolume\n   from the host.\n * Added the `HostVolumeSummary`, which is the response of the endpoint\n   `GET /host/{id}/volume` and a part of `VolumeGroupDetail`.\n * Introduced a new `GET /volume_group/host_layout/{snapshot_id}` and\n   `GET /volume_group/{host_id}/host_layout` to get the Windows host layout\n   of all disks and volumes.\n * Added `WindowsHostLayout` which is the response of\n   `GET /volume_group/host_layout/{snapshot_id}` and\n   `GET /volume_group/{host_id}/host_layout`.\n * Added support for Blueprint.\n * Added new fields `retentionSlaDomainId` and `retentionSlaDomainName` to\n   UnmanagedObjectSummary object, which is returned from a\n   `GET /unmanaged_object` call.\n * Removed `unmanagedSnapshotCount` and added new fields `autoSnapshotCount`.\n   and `manualSnapshotCount` to UnmanagedObjectSummary object, which is\n   returned from a `GET /unmanaged_object` call.\n * Added new fields `retentionSlaDomainId` and `retentionSlaDomainName` to\n   UnmanagedSnapshotSummary object, which is returned from a\n   `GET /unmanaged_object/{id}/snapshot` call.\n * Added a new field `hasAttachingDisk` to `GET /vmware/vm/snapshot/mount` and\n   `GET /vmware/vm/snapshot/mount/{id}` that indicates to the user whether\n   this is an attaching disk mount job.\n * Added a new field `attachingDiskCount` to `GET /vmware/vm/snapshot/mount`.\n   and `GET /vmware/vm/snapshot/mount/{id}` that indicate to the user how many\n   disks are attached.\n * Added field `RetentionSlaDomainName` to sort_by of a\n   `GET * /unmanaged_object/{id}/snapshot` call.\n * Added field `excludedDiskIds` to NutanixVmDetail which is returned from a\n   `GET /nutanix/vm/{id}` to exclude certain disks from backup. Also added\n   field to NutanixVmPatch via `PATCH /nutanix/vm/{id}` to allow the field\n   to be updated.\n * Introduced the `PATCH /aws/ec2_instance/indexing_state` endpoint for\n   enabling/disabling indexing per EC2 instance.\n * Added new optional fields `organizationId` and `organizationName` to\n   `/host/{id}` and `/host` endpoints to get the organization a host is\n   assigned to due to Envoy.\n * Introduced a new `GET /host/envoy` endpoint. Acts similar to queryHost but\n   also includes Envoy organization info if Envoy is enabled.\n * Added a new endpoint `GET /vmware/vcenter/{id}/tag_category` to get a list of\n   Tag Categories associated with a vCenter.\n * Added a new endpoint `Get /vmware/vcenter/tag_category/{tag_category_id}` to\n   get a specific Tag Category associated with a vCenter.\n * Added a new endpoint `GET /vmware/vcenter/{id}/tag` to get a list of Tags\n   associated with a vCenter. The optional category_id parameter allow the\n   response to be filtered by Tag Category.\n * Added a new endpoint `GET /vmware/vcenter/tag/{tag_id}` to get a\n   specific Tag associated with a vCenter.\n * Introduced `GET /cluster/{id}/global_manager_connectivity` to\n   retrieve a set of URLs that are pingable from the CDM cluster.\n * Added optional field `instanceName` in `ManagedObjectProperties`.\n * Added new endpoint GET `/cloud_on/aws/app_image/{id}` to retrieve a specified\n   AWS AppBlueprint image.\n * Added new endpoint DELETE `/cloud_on/aws/app_image/{id}` to delete the\n   given AWS AppBlueprint image.\n * Added new endpoint GET `/cloud_on/azure/app_image/{id}` to retrieve a\n   specified Azure AppBlueprint image.\n * Added new endpoint DELETE `/cloud_on/azure/app_image/{id}` to delete the\n   given Azure AppBlueprint image.\n * Added organization endpoint for Oracle.\n * Added new endpoint GET `/cloud_on/aws/app_image` to retrieve all\n   AWS AppBlueprint images.\n * Added new endpoints `GET /stats/cloud_storage/physical`, `GET\n   /stats/cloud_storage/ingested` and `GET /stats/cloud_storage/logical` which\n   return respective stats aggregated across all archival locations\n * Added a new endpoint `POST /vmware/standalone_host/datastore` to get a list\n   of datastore names for a given ESXi host.\n * Added a new optional field `apiEndpoint` to `NasBaseConfig`.\n\n ### Changes to Internal API in Rubrik version 4.2\n ## Breaking changes:\n * Introduced a new `GET /cluster/{id}/ipv6` endpoint for getting all IPv6\n   addresses configured on a specific or all network interfaces.\n * Introduced a new `PATCH /cluster/{id}/ipv6` endpoint for configuring IPv6\n   addresses on a specific network interface for each nodes in cluster.\n * Introduced a new `GET /cluster/{id}/trial_edge` for getting whether the\n   cluster is a trial edge.\n * Moved the /auth_domain/ endpoint from internal APIs to the v1 APIs.\n * Deprecated `POST /archive/nfs/reconnect` endpoint. Use\n   `POST /archive/nfs/reader/connect` instead to connect as a reader to an\n   existing NFS archival location.\n * Deprecated `POST /archive/object_store/reconnect` endpoint. Use\n   `POST /archive/object_store/reader/connect` instead to connect as a reader to\n   an existing object store location.\n * Deprecated `POST /archive/qstar/reconnect` endpoint. Use\n   `POST /archive/qstar/reader/connect` instead to connect as a reader to an\n   existing QStar archival location.\n * Deprecated `POST /archive/dca/reconnect` endpoint. Use\n   `POST /archive/dca/reader/connect` instead to connect as a reader to an\n   existing DCA archival location.\n * Removed `POST /hyperv/vm/snapshot/{id}/restore_file` endpoint. Use\n   `POST /hyperv/vm/snapshot/{id}/restore_files` instead to support\n   multi-files restore for Hyper-V vm.\n * Removed `POST /nutanix/vm/snapshot/{id}/restore_file` endpoint. Use\n   `POST /nutainx/vm/snapshot/{id}/restore_files` instead to support\n   multi-files restore for Nutanix vm.\n * Removed `search_timezone_offset` parameter from\n   `GET /unmanaged_object/{id}/snapshot` endpoint. The endpoint will now\n   use configured timezone on the cluster.\n * Renamed the field `id` in `UserDefinition` to `username` for `POST /user`.\n   endpoint.\n * Removed the `/mssql/db/sla/{id}/availability_group_conflicts` endpoint.\n * Removed the `/mssql/db/sla/{id}/assign` endpoint.\n * Added support for Envoy VMs for Organization.\n * Modified the `DELETE /storage/array/{id}` endpoint so that it now triggers\n   an asynchronous deletion job, responds with an async request object, and\n   archives the storage array's hierarchy.\n * Added `numStorageArrayVolumeGroupsArchived` to `DataLocationUsage` which\n   is the response of the `GET /stats/data_location/usage` endpoint.\n * Modified `POST /storage/array` endpoint so that it now triggers an\n   asynchronous refresh job, and responds with an async request object.\n * Modified the `GET /storage/array/{id}` and `DELETE /storage/array/{id}`.\n   endpoints so that the `id` field now corresponds to the managed ID\n   instead of the simple ID. The `managed ID` is the ID assigned to the\n   storage array object by the Rubrik REST API server.\n * Moved /throttle endpoint to /backup_throttle.\n * Introduced a new `EmailSubscriptionUpdate` object for the request of the\n   `PATCH /report/email_subscription/{subscription_id}` endpoint.\n * Introduced a new `ReportSubscriptionOwner` object for the response of\n   `GET /report/email_subscription/{subscription_id}` and\n   `GET /report/{id}/email_subscription` endpoints.\n * Added the envoyStatus field to the response of the GET /organization\n   endpoint.\n * Added new `attachments` field to the `POST /report/{id}/email_subscription`.\n   and `PATCH /report/email_subscription/{subscription_id}` endpoints.\n * Removed fields `length` and `isLog` in response of\n   `/mssql/db/{id}/restore_files`.\n * Moved the `/cluster/decommissionNode` endpoint to\n   `/cluster/decommissionNodes`. The `DecommissionNodeConfig` object is renamed\n   as `DecommissionNodesConfig` and now takes in a list of strings which\n   correspond to the IDs of the nodes that are to be decommissioned.\n * Moved the `POST /vmware/vm/{id}/register_agent` endpoint from internal\n   APIs to the v1 APIs.\n * Added a required field for environment in AzureComputeSummary to support\n   Azure Gov Cloud.\n * Remove `POST internal/vmware/vm/snapshot/{id}/mount` endpoint. Use public\n   API of `POST v1/vmware/vm/snapshot/{id}/mount`.\n * The input field OperatingSystemType value `Linux` is replaced by `UnixLike`.\n   in FilesetTemplateCreateDefinition, used by POST /fileset-template, and\n   in FilesetTemplatePatchDefinition, used by PATCH /fileset_template/{id}.\n * The input field operating_system_type value `Linux` is replaced by `UnixLike`.\n   in GET /host-fileset and GET /host-count.\n * Added `snmpAgentPort` field to SnmpConfig object.\n\n ## Feature Additions/improvements:\n * Introduced the `GET /node_management/default_gateway` and `POST\n   /node_management/default_gateway` endpoint to get and set default gateway.\n * Introduced the `GET cloud_on/aws/instance_type_list` and `GET\n   cloud_on/azure/instance_type_list` endpoint to fetch list of instance types\n   for aws and azures.\n * Introduced the `GET /aws/account/{id}/subnet` endpoint to fetch an\n   information summary for each of the subnets available in an AWS account.\n * Introduced the `GET /aws/account/{id}/security_group` endpoint to fetch an\n   information summary for each of the security groups belonging to a particular\n   virtual network in an AWS account.\n * Moved definitions `Subnet` and `SecurityGroup` of `definitions/cloud_on.yml`.\n   to `definitions/cloud_common.yml` so that both the CloudOn and CloudNative\n   features can use them.\n * Introduced the `GET /host/{id}/diagnose` endpoint to support target host\n   diagnosis features. Network connectivity (machine/agent ping) implemented\n   in the current version.\n * Added vCD endpoints to support vCloud Director. The following endpoints\n   have been added to the vcdCluster object:\n   - `POST /vcd/cluster` to add a new vCD cluster object.\n * Added support for CRUD operations on vCloud Director cluster objects.\n   - POST /vcd/cluster, PATCH /vcd/cluster/{id}, DELETE /vcd/cluster/{id},\n     POST /vcd/cluster/{id}/refresh are the endpoints for adding, editing,\n     deleting and refreshing a vCD cluster object respectively.\n * Introduced endpoint `GET /search/snapshot_search` to search files in a\n   given snapshot. The search supports prefix search only.\n * Introduced the new `POST /storage/array/{id}/refresh` endpoint to\n   create a new refresh job to update the Storage Array metadata.\n * Introduced the new `GET /storage/array/request/{id}` endpoint to\n   get status of a storage array-related asynchronous request.\n * Introduced the new `POST /storage/array/volume/group` endpoint\n   to add a new storage array volume group.\n * Introduced the new `GET /storage/array/volume/group/{id}` endpoint\n   to get details of a storage array volume group.\n * Introduced the new `DELETE /storage/array/volume/group/{id}` endpoint\n   to remove a storage array volume group.\n * Introduced the new `GET /storage/array/hierarchy/{id}` endpoint\n   to get a summary of an object in the storage array hierarchy.\n * Introduced the new `GET /storage/array/hierarchy/{id}/children` endpoint\n   to get the children of an object in the storage array hierarchy.\n * Introduced the new `GET /storage/array/hierarchy/{id}/descendants` endpoint\n   to get the descendants of an object in the storage array hierarchy.\n * Introduced the new `GET /storage/array/volume` endpoint to get\n   summary information of all storage array volumes.\n * Introduced the new `GET /storage/array/volume/{id}` endpoint to get\n   details of a storage array volume.\n * Introduced the new `POST /storage/array/volume/group/{id}/snapshot`.\n   endpoint to create a new on-demand backup job for a storage array\n   volume group.\n * Introduced the new `PATCH /storage/array/volume/group/{id}` endpoint to\n   update the properties of a storage array volume group object.\n * Introduced the new `GET /storage/array/volume/group` endpoint to\n   get all storage array volume groups subject to specified filters.\n * Introduced endpoint `POST /archive/location/{id}/owner/pause` to pause\n   archiving to a given archival location that is owned by the current cluster.\n * Introduced endpoint `POST /archive/location/{id}/owner/resume` to resume\n   archiving to a given archival location that is owned by the current cluster.\n * Introduced endpoint `POST /archive/location/{id}/reader/promote` to promote\n   the current cluster to be the owner of a specified archival location that is\n   currently connected as a reader location.\n * Introduced endpoint `POST /archive/location/{id}/reader/refresh` to sync the\n   current reader cluster with the contents on the archival location. This pulls\n   in any changes made by the owner cluster to the archival location since the\n   last time the current cluster was synced.\n * Introduced endpoint `POST /archive/dca/reader/connect` to connect as a reader\n   to a DCA archival location.\n * Introduced endpoint `POST /archive/nfs/reader/connect` to connect as a reader\n   to an NFS archival location.\n * Introduced endpoint `POST /archive/object_store/reader/connect` to connect as\n   a reader to an object store location.\n * Introduced endpoint `POST /archive/dca/qstar/connect` to connect as a reader\n   to a QStar archival location.\n * Updated `ArchivalLocationSummary` returned by `GET /archive/location`.\n   endpoint to include `ownershipStatus` field, to indicate whether the current\n   cluster is connected to the archival location as an owner (active or paused),\n   as a reader, or if the archival location is deleted.\n * Added the `ca_certs` field to `StorageArrayDefinition` to allow admins\n   to specify certificates used for validation when making network\n   requests to the storage array API service. This effects endpoints\n   `POST /storage/array`, `GET /storage/array/{id}`, and\n   `PUT /storage/array/{id}`.\n * Introduced the `POST /vmware/vm/snapshot/{id}/download_files` endpoint to\n   download multiple files/folders from a given vm snapshot. The URL to\n   download the zip file including the files will be presented to the users.\n * Introduced the `POST /fileset/snapshot/{id}/download_files` endpoint to\n   download multiple files/folders from a given fileset snapshot. The URL to\n   download the zip file including the specific files/folders will be presented\n   to the users.\n * Introduced the `POST /nutanix/vm/snapshot/{id}/download_files` endpoint to\n   download multiple files/folders from a given nutanix snapshot. The URL to\n   download the zip file including the specific files/folders will be presented\n   to the users.\n * Removed the `POST /nutanix/vm/snapshot/{id}/download_file` endpoint as\n   downloading a single file/folder from the nutanix backup is just a special\n   case of downloading multiple files/folders.\n * Introduced the `POST /hyperv/snapshot/{id}/download_files` endpoint to\n   download multiple files/folders from a given Hyper-V snapshot. The URL to\n   download the zip file including the specific files/folders will be presented\n   to the users.\n * Introduced the POST /managed_volume/snapshot/{id}/download_files endpoint\n   to download multiple files and/or folders from a given managed volume\n   snapshot. This endpoint returns the URL to download the ZIP file that\n   contains the specified files and/or folders.\n * Introduced the new `GET /storage/array/volume/group/{id}/search` endpoint to\n   search storage array volume group for a file.\n * Introduced the new `GET /storage/array/volume/group/snapshot/{id}`.\n   endpoint to retrieve details of a storage array volume group snapshot.\n * Introduced the new `DELETE /storage/array/volume/group/snapshot/{id}`.\n   endpoint to remove a storage array volume group snapshot.\n * Introduced the new `DELETE /storage/array/volume/group/{id}` endpoint\n   to delete all snapshots of a storage array volume group.\n * Introduced the new `POST /storage/array/volume/group/{id}/download`.\n   endpoint to download a storage array volume group snapshot from archival.\n * Introduced new `GET/storage/array/volume/group/snapshot/{id}/restore_files`.\n   endpoint to restore files from snapshot of a storage array volume group.\n * Added storage volume endpoints for AWS cloud native workload protection.\n   Endpoints added:\n   - GET /aws/ec2_instance/{id}/storage_volume/ to retrieve\n     all storage volumes details attached to an ec2 instance object.\n   - GET /aws/ec2_instance/{ec2_instance_id}/storage_volume/{id} to retrieve\n     details of a storage volume attached to an ec2 instance object.\n   - POST /aws/ec2_intance/snapshot/{id}/export to export the snapshot of\n     an ec2 instance object to a new ec2 instance object.\n * Introduced the new `POST /storage/array/volume/group/{id}/download_file`.\n   endpoint to download a file from an archived storage array volume group\n   snapshot.\n * Introduced the new `GET /storage/array/volume/group/{id}/missed_snapshot`.\n   endpoint to get details about all missed snapshots of a storage array volume\n   group.\n * Introduced the `GET /network_throttle` endpoint for retrieving the list of\n   network throttles.\n * Introduced the `PATCH /network_throttle/{id}` endpoint for updating\n   network throttles.\n * Introduced the new `GET /storage/array/host/{id}` endpoint to get details\n   about all storage array volumes connected to a host.\n * Introduced the `GET /organization/{id}/storage/array` endpoint for getting\n   information for authorized storage array resources in an organization.\n * Introduced the `GET /organization/{id}/storage/array/volume_group/metric`.\n   endpoint for getting storage array volume groups metrics in an\n   organization.\n * Introduced the new POST /vmware/vm/snapshot/mount/{id}/rollback endpoint to\n   rollback the datastore used by a virtual machine, after an Instant Recovery\n   that used the preserve MOID setting. This endpoint `rolls back` the\n   recovered virtual machine's datastore from the Rubrik cluster to the\n   original datastore.\n * Added `owner` and `status` fields to the `EmailSubscriptionSummary`.\n   object used in responses for many `/report/{id}/email_subscription`.\n   and `/report/email_subscription/{subscription_id}` endpoints.\n * Added `availableSpace` and `readerLocationSummary` fields to the\n   `NfsLocationDetail` object used in responses for `/archive/nfs` and\n   `/archive/nfs/{id}` endpoints.\n * Added `availableSpace` and `readerLocationSummary` fields to the\n   `QstarLocationSummary` object used in responses for the `/archive/qstar`.\n   endpoint.\n * Added `availableSpace` and `readerLocationSummary` fields to the\n   `QstarLocationDetail` object used in responses for the `/archive/qstar/{id}`.\n   endpoint.\n * Added `readerLocationSummary` field to the `ObjectStoreLocationDetail`.\n   object used in responses for the `/archive/object_store` and\n   `/archive/object_store/{id}` endpoints.\n * Added `readerLocationSummary` field to the `DcaLocationDetail` object\n   used in responses for the `/archive/dca` and `/archive/dca/{id}` endpoints.\n * Added a new field `guestOsType` to `HypervVirtualMachineDetail`.\n   object used in response of `GET /hyperv/vm/{id}`.\n * Added a new field `guestOsType` to `VirtualMachineDetail`.\n   object referred by `VappVmDetail`.\n * Added new field `fileType` in response of `/mssql/db/{id}/restore_files`.\n * Added an optional field `agentStatus` to `VirtualMachineSummary` object used\n   in response of `GET /vmware/vm` endpoint. This allows user to check the\n   Rubrik Backup Service connection status of the corresponding VMware VM.\n * Introduced the new `POST /fileset/snapshot/{id}/export_files` endpoint to\n   export multiple files or directories to destination host.\n * Introduced the new `GET /vmware/config/esx_subnets` endpoint to get the\n   the preferred subnets to reach ESX hosts.\n * Introduced the new `PATCH /vmware/config/reset_esx_subnets` endpoint to\n   reset the preferred subnets to reach ESX hosts.\n * Changed the `PATCH /vmware/config/reset_esx_subnets` endpoint to\n   `PATCH /vmware/config/set_esx_subnets`.\n * Removed the `needsInspection` field from the NodeStatus object returned in\n   the `/cluster/{id}/node` and `/node` endpoints.\n * Introduced the new `PATCH /auth_domain/{id}` endpoint to update the Active\n   Directory configuration parameters.\n * Introduced the new `GET /cluster/{id}/auto_removed_node` endpoint to\n   query for unacknowledged automatic node removals by the Rubrik cluster.\n * Introduced the new\n   `DELETE /cluster/{id}/auto_removed_node/{node_id}/acknowledge` endpoint to\n   acknowledge an automatic node removal.\n * Introduced the new `GET /cluster/{id}/system_status` endpoint to retrieve\n   information about the status of the Rubrik cluster.\n * Changed the `POST /cloud_on/azure/subscription` endpoint to to take\n   the parameter `AzureSubscriptionRequest` instead of\n   `AzureSubscriptionCredential` in body.\n * Changed the `POST /cloud_on/azure/storage_account` endpoint to to take\n   the parameter `AzureStorageAccountRequest` instead of\n   `AzureStorageAccountCredential` in body.\n * Changed the `POST /cloud_on/azure/resource_group` endpoint to take\n   the parameter `AzureResourceGroupRequest` instead of\n   `AzureResourceGroupCredential` in body.\n * Added a `reportTemplate` field to the response of both the\n   `GET /report/{id}/table` and `GET /report/{id}/chart` endpoints.\n\n ### Changes to Internal API in Rubrik version 4.1\n ## Changes to support instance from image\n * POST /aws/instance and /azure/instance was supported only from a Rubrik\n   snapshot. Now it is changed to support instantiation from Rubrik snapshot as\n   well as pre-existing image. Rest end point is same, we just changed the\n   CreateCloudInstanceRequest object type.\n * Add a new field `ignoreErrors` to POST /vmware/vm/snapshot/{id}/restore_files\n   that will let job restore ignore file errors during restore job.\n ## Breaking changes:\n * None is removed as a Nutanix snapshot consistency mandate so it is no\n   longer valid in GET /nutanix/vm, GET /nutanix/vm/{id}, and\n   PATCH /nutanix/vm/{id}.\n * computeSecurityGroupId is replaced by the object defaultComputeNetworkConfig\n   in ObjectStoreLocationSummary ,ObjectStoreUpdateDefinition and\n   ObjectStoreReconnectDefinition which are used by\n   GET /archive/object_store/{id}, PATCH /archive/object_store/{id} and\n   POST /archive/object_store/reconnect respectively.\n * The PUT /throttle endpoint was changed to provide configuration for\n   Hyper-V adaptive throttling. Three parameters were added:\n   hypervHostIoLatencyThreshold, hypervHostCpuUtilizationThreshold, and\n   hypervVmCpuUtilizationThreshold. To differentiate between the multiple\n   hypervisors, the existing configuration parameters for VMware were renamed\n   VmwareVmIoLatencyThreshold, VmwareDatastoreIoLatencyThreshold and\n   VmwareCpuUtilizationThreshold. These changes also required modifications\n   and additions to the GET /throttle endpoint.\n * For `POST /cluster/{id}/node` endpoint, it gets now `AddNodesConfig` in body\n   instead of `Map_NodeConfig` directly.\n * For `POST /node_management/replace_node` endpoint, added the `ipmiPassword`.\n   field to the `ReplaceNodeConfig` object.\n * For `POST /stats/system_storage` endpoint, added the miscellaneous, liveMount\n   and snapshot field to `SystemStorageStats` object.\n * For `POST /principal_search`, removed `managedId` field from the\n   `PrincipalSummary` object and changed the `id` field of the\n   `PrincipalSummary` object to correspond to the managed id instead of the\n   simple id.\n * For `GET /cluster/{id}/timezone` and `PATCH /cluster/{id}/timezone`, the\n   functionality has merged into `GET /cluster/{id}` and `PATCH /cluster/{id}`.\n   in v1.\n * Removed the `GET /cluster/{id}/decommissionNodeStatus` endpoint.\n   Decommission status is now available through queries of the `jobId` that is\n   returned by a decommission request. Queries can be performed at the\n   `GET /job/{id}` endpoint.\n * For `GET /api/internal/managed_volume/?name=<name>`, the name match is now\n   exact instead of infix\n * Updated the list of available attribute and measure values for the `chart0`.\n   and `chart1` parameters for the `PATCH /report/{id}` endpoint.\n * Updated the list of available column values for the `table` parameter for the\n   `PATCH /report/{id}` endpoint.\n * Updated the `FolderHierarchy` response object to include\n   `effectiveSlaDomainId`, `effectiveSlaDomainName`,\n   `effectiveSlaSourceObjectId`, and `effectiveSlaSourceObjectName`.\n\n ## Feature Additions/improvements:\n * Added the field `pendingSnapshotCount` to ManagedVolumeSummary and\n   ManagedVolumeDetail objects used in responses for endpoints\n   `GET /managed_volume`, `POST /managed_volume`, `GET /managed_volume/{id}`,\n   `PATCH /managed_volume/{id}`, `GET /organization/{id}/managed_volume`.\n * Introduced the `GET /managed_volume/snapshot/export/{id}` endpoint\n   to retrieve details of a specific managed volume snapshot export.\n * Added the `name` filter for GET requests on the /replication/target endpoint.\n   This filter allows users to filter results based on the name of a\n   replication target.\n * Added the `name` filter for GET requests on the /archive/location endpoint.\n   This filter allows users to filter results based on the name of an\n   archival location.\n * Added new fields `replicas` and `availabilityGroupId` on GET /mssql\n   and GET /mssql/{id}. If a database is an availability database,\n   it will have some number of replicas, which are copies of the database\n   running on different instances. Otherwise, there will only be one\n   replica, which represents the single copy of the database. The field\n   `availabilityGroupId` will be set only for availability databases\n   and points to the availability group of the database. Also deprecated\n   several fields on these endpoints, as they should now be accessed via\n   the `replicas` field.\n * Added `Cluster` notification type.\n * Added optional `organizationId` parameter to to the grant/revoke and get\n  authorization endpoints. This parameter can be used to\n   grant/revoke/get authorizations with respect to a specific Organization.\n * Added endpoint to get/set whether the Rubrik Backup Service is automatically\n   deployed to a guest OS.\n * Added cloudInstantiationSpec field to Hyper-V VM endpoint for configuring\n   automatic cloud conversion\n * Introduced a new end point /cluster/{id}/platforminfo to GET information\n   about the platform the current software is running on\n * Introduced the `GET /organization` and `GET /organization/{id}` endpoints\n   for retrieving the list of organizations and a single organization.\n * Introduced the `POST /organization` endpoint for creating organizations,\n   the `PATCH /organization/{id}` endpoint for updating organizations and the\n   `DELETE /organization/{id}` endpoint for deleting organizations.\n * Introduced the `GET /organization/{id}/stats/storage_growth_timeseries`.\n   endpoint and the `GET /organization/{id}/stats/total_storage_usage` for\n   getting Physical Storage Growth over Time and Total Physical Storage Usage\n   on a per Organization basis.\n * Introduced a number of endpoints of the format\n   `GET /organization/{id}/<resource-type>` for retrieving all the resources of\n   the corresponding type in a given organization.\n * Introduced a number of endpoints of the format\n   `GET /organization/{id}/<resource-type>/metric` for retrieving the protection\n   counts of the resources of the corresponding type in a given organization.\n * Added the `reportTemplate` filter for GET requests on the /report endpoint.\n   This allows queried reports to be filtered and sorted by report template.\n * Introduced the `POST /cluster/{id}/security/password/strength` endpoint\n   for assessing the strength of passwords during bootstrap through rkcli.\n * Added a new `ipv6` field in the response of the `GET /cluster/{id}/discover`.\n   endpoint.\n * Added relatedIds field for EventSummary object to give more context about\n   the event.\n * Added operatingSystemType field for NutanixSummary object. This field\n   represents the type of operating system on the Nutanix virtual machine.\n\n ### Changes to Internal API in Rubrik version 4.0\n ## Breaking changes:\n * For `GET /unmanaged_object` endpoint, replaced the `Fileset` of object_type\n   filter with more specific object types: `WindowsFileset`, `LinuxFileset` and\n   `ShareFileset`. Also added filter value for additional unmanaged objects\n   we now support.\n * For /mssql/db/{id}/compatible_instance added recoveryType as mandatory\n   query parameter\n\n ## Feature Additions/improvements:\n * Added QStar end points to support it as an archival location. The location\n   is always encrypted and an encryption password must be set while adding the\n   location. End points added:\n   - `DELETE /archive/qstar` to clean up the data in the bucket in the QStar\n     archival location.\n   - `GET /archive/qstar` to retrieve a summary of all QStar archival locations.\n   - `POST /archive/qstar` to add a QStar archival location.\n   - `POST /archive/qstar/reconnect` to reconnect to a specific QStar archival\n     location.\n   - `POST /archive/qstar/remove_bucket` to remove buckets matching a prefix\n      from QStar archival location.\n   - `GET /archive/qstar/{id}` to retrieve a summary information from a specific\n     QStar archival location.\n   - `PATCH /archive/qstar/{id}` to update a specific QStar archival location.\n * Added the `name` filter for GET requests on the /archive/location endpoint.\n   This filter allows users to filter results based on the name of an\n   archival location.\n * Introduced an optional parameter `encryptionPassword` for the\n   `/data_location/nfs` `POST` endpoint. This password is used for\n   deriving the master key for encrypting the NFS archival location.\n * Introduced /managed\\_volume, /managed\\_volume/snapshot/export/{id},\n   and other child endpoints for creating, deleting, and updating\n   Managed Volumes and its exports and snapshots.\n * Added support for Hyper-V.\n * Add new /hierarchy endpoint to support universal hierarchy view.\n * Added support for Nutanix.\n * Moved and merged vCenter refresh status and delete status from independent\n   internal endpoints to a single status field in v1 vCenter detail.\n * Added endpoint to get/set whether the Rubrik Backup Service is automatically\n   deployed to a guest OS.\n * Introduced an optional parameter `minTolerableNodeFailures` for the\n   `/cluster/decommissionNode` `POST` endpoint. This parameter specifies the\n   minimum fault tolerance to node failures that must exist when a node is\n   decommissioned.\n * Added `nodeId` to `AsyncRequestStatus` to improve debugging job failures.\n\n ### Changes to Internal API in Rubrik version 3.2.0\n ## Breaking changes:\n * Introduced endpoint /host/share/id/search to search for\n   files on the network share.\n * Introduced endpoints /host/share and /host/share/id to\n   support native network shares under /host endpoint.\n * For /unmanaged_object endpoints, change sort_attr to sort_by\n   sort_attr used to accept a comma separated list of column names to sort.\n   Now sort_by only accepts a single column name.\n * For /unmanaged_object endpoints, removed the need for object type when\n   deleting unmanaged objects and its snapshots.\n\n ## Feature Additions/improvements:\n * Added internal local_<component> end points. These are used for\n   handling operations on per-node auto-scaling config values.\n   Please see src/spec/local-config/comments for details.\n * For the response of /mssql/db/{id}/restore_files, added two more fields\n   for each file object. They are the original file name and file length\n   of the file to be restore.\n * Introduced a new end point /cluster/{id}/is_registered to GET registration\n   status. With this change, we can query if the cluster is registered in the\n   Rubrik customer database.\n * Introduced a new end point /cluster/{id}/registration_details to POST\n   registration details. Customers are expected to get the registration details\n   from the support portal. On successful submission of registration details\n   with a valid registration id, the cluster will mark itself as registered.\n * For the /mssql/instance/{id} end point, added fields configuredSlaDomainId,\n   configuredSlaDomainName, logBackupFrequencyInSeconds, logRetentionHours,\n   and copyOnly.\n * Introduced optional parameter keepMacAddresses to\n   POST /vmware/vm/snapshot/{id}/mount, /vmware/vm/snapshot/{id}/export, and\n   /vmware/vm/snapshot/{id}/instant_recovery endpints.\n   This allows new VMs to have the same MAC address as their source VMs.\n\n ## Bug fixes:\n * Made path parameter required in GET /browse. Previously, an error was\n   thrown when path was not passed in. This solves that bug.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "config",
			"item": [
				{
					"name": "local cerebro",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Cerebro configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_cerebro",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_cerebro"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Cerebro configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_cerebro",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_cerebro"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Cerebro configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_cerebro",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_cerebro"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Cerebro configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_cerebro",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_cerebro"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "usersettable crystal",
					"item": [
						{
							"name": "REQUIRES ADMIN TOKEN -  Get the global UserSettableCrystal configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/usersettable_crystal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"usersettable_crystal"
									]
								},
								"description": "REQUIRES ADMIN TOKEN - Get the global UserSettableCrystal configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/usersettable_crystal",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"usersettable_crystal"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES ADMIN TOKEN - Update the global UserSettableCrystal configuration. An admin token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/usersettable_crystal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"usersettable_crystal"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global UserSettableCrystal configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/usersettable_crystal",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"usersettable_crystal"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local cloud",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Cloud configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_cloud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_cloud"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Cloud configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_cloud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_cloud"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Cloud configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_cloud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_cloud"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Cloud configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_cloud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_cloud"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local jarvis",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Jarvis configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_jarvis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_jarvis"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Jarvis configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_jarvis",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_jarvis"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Jarvis configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_jarvis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_jarvis"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Jarvis configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_jarvis",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_jarvis"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local lambda",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Lambda configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_lambda",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_lambda"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Lambda configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_lambda",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_lambda"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Lambda configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_lambda",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_lambda"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Lambda configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_lambda",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_lambda"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local mssql",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Mssql configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_mssql",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_mssql"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Mssql configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_mssql",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_mssql"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Mssql configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_mssql",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_mssql"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Mssql configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_mssql",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_mssql"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "atlas",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Atlas configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/atlas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"atlas"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Atlas configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/atlas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"atlas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Atlas configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/atlas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"atlas"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Atlas configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/atlas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"atlas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "mssql",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Mssql configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/mssql",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"mssql"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Mssql configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/mssql",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"mssql"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Mssql configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/mssql",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"mssql"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Mssql configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/mssql",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"mssql"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "shield",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Shield configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/shield",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"shield"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Shield configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/shield",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"shield"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Shield configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/shield",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"shield"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Shield configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/shield",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"shield"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "storage Array",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Storagearray configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/storageArray",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"storageArray"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Storagearray configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/storageArray",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"storageArray"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Storagearray configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/storageArray",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"storageArray"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Storagearray configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/storageArray",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"storageArray"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "lambda",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Lambda configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/lambda",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"lambda"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Lambda configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lambda",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lambda"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Lambda configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/lambda",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"lambda"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Lambda configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lambda",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lambda"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "aws",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Aws configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"aws"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Aws configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/aws",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"aws"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Aws configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"aws"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Aws configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/aws",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"aws"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "galactus",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Galactus configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/galactus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"galactus"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Galactus configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/galactus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"galactus"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Galactus configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/galactus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"galactus"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Galactus configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/galactus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"galactus"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "quicksilver",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Quicksilver configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/quicksilver",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"quicksilver"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Quicksilver configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/quicksilver",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"quicksilver"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Quicksilver configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/quicksilver",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"quicksilver"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Quicksilver configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/quicksilver",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"quicksilver"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local blobstore",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Blobstore configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_blobstore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_blobstore"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Blobstore configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_blobstore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_blobstore"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Blobstore configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_blobstore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_blobstore"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Blobstore configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_blobstore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_blobstore"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "usersettable cerebro",
					"item": [
						{
							"name": "REQUIRES ADMIN TOKEN -  Get the global UserSettableCerebro configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/usersettable_cerebro",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"usersettable_cerebro"
									]
								},
								"description": "REQUIRES ADMIN TOKEN - Get the global UserSettableCerebro configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/usersettable_cerebro",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"usersettable_cerebro"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES ADMIN TOKEN - Update the global UserSettableCerebro configuration. An admin token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/usersettable_cerebro",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"usersettable_cerebro"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global UserSettableCerebro configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/usersettable_cerebro",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"usersettable_cerebro"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local replication",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Replication configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_replication",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_replication"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Replication configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_replication",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_replication"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Replication configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_replication",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_replication"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Replication configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_replication",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_replication"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local managed Volume",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Managedvolume configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_managedVolume",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_managedVolume"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Managedvolume configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_managedVolume",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_managedVolume"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Managedvolume configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_managedVolume",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_managedVolume"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Managedvolume configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_managedVolume",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_managedVolume"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local atlas",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Atlas configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_atlas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_atlas"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Atlas configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_atlas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_atlas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Atlas configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_atlas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_atlas"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Atlas configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_atlas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_atlas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "replication",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Replication configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/replication",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"replication"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Replication configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/replication",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"replication"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Replication configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/replication",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"replication"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Replication configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/replication",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"replication"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local hawkeye",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Hawkeye configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_hawkeye",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_hawkeye"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Hawkeye configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_hawkeye",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_hawkeye"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Hawkeye configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_hawkeye",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_hawkeye"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Hawkeye configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_hawkeye",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_hawkeye"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "app Blueprint",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Appblueprint configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/appBlueprint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"appBlueprint"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Appblueprint configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/appBlueprint",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"appBlueprint"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Appblueprint configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/appBlueprint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"appBlueprint"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Appblueprint configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/appBlueprint",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"appBlueprint"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local storm",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Storm configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_storm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_storm"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Storm configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_storm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_storm"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Storm configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_storm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_storm"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Storm configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_storm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_storm"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local forge",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Forge configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_forge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_forge"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Forge configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_forge",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_forge"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Forge configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_forge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_forge"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Forge configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_forge",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_forge"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "usersettable shield",
					"item": [
						{
							"name": "REQUIRES ADMIN TOKEN -  Get the global UserSettableShield configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/usersettable_shield",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"usersettable_shield"
									]
								},
								"description": "REQUIRES ADMIN TOKEN - Get the global UserSettableShield configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/usersettable_shield",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"usersettable_shield"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES ADMIN TOKEN - Update the global UserSettableShield configuration. An admin token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/usersettable_shield",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"usersettable_shield"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global UserSettableShield configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/usersettable_shield",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"usersettable_shield"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "qstar",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Qstar configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/qstar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"qstar"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Qstar configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/qstar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"qstar"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Qstar configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/qstar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"qstar"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Qstar configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/qstar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"qstar"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "job Io Priority",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Jobiopriority configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/jobIoPriority",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"jobIoPriority"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Jobiopriority configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/jobIoPriority",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"jobIoPriority"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Jobiopriority configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/jobIoPriority",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"jobIoPriority"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Jobiopriority configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/jobIoPriority",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"jobIoPriority"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "envision",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Envision configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/envision",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"envision"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Envision configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/envision",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"envision"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Envision configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/envision",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"envision"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Envision configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/envision",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"envision"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local thor",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Thor configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_thor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_thor"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Thor configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_thor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_thor"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Thor configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_thor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_thor"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Thor configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_thor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_thor"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local fileset",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Fileset configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_fileset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_fileset"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Fileset configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_fileset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_fileset"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Fileset configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_fileset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_fileset"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Fileset configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_fileset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_fileset"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "vcd",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Vcd configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/vcd",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"vcd"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Vcd configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/vcd",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"vcd"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Vcd configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/vcd",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"vcd"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Vcd configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/vcd",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"vcd"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "sparksettable crystal",
					"item": [
						{
							"name": "REQUIRES SPARK TOKEN -  Get the global SparkSettableCrystal configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/sparksettable_crystal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"sparksettable_crystal"
									]
								},
								"description": "REQUIRES SPARK TOKEN - Get the global SparkSettableCrystal configuration. A spark token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/sparksettable_crystal",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"sparksettable_crystal"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SPARK TOKEN - Update the global SparkSettableCrystal configuration. A spark token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/sparksettable_crystal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"sparksettable_crystal"
									]
								},
								"description": "REQUIRES SPARK TOKEN - Update the global SparkSettableCrystal configuration. A spark token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/sparksettable_crystal",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"sparksettable_crystal"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "azure",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Azure configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"azure"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Azure configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/azure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"azure"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Azure configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"azure"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Azure configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/azure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"azure"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "storm",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Storm configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/storm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"storm"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Storm configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/storm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"storm"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Storm configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/storm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"storm"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Storm configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/storm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"storm"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "hyperv",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Hyperv configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/hyperv",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"hyperv"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Hyperv configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/hyperv",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"hyperv"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Hyperv configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/hyperv",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"hyperv"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Hyperv configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/hyperv",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"hyperv"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "sparksettable lambda",
					"item": [
						{
							"name": "REQUIRES SPARK TOKEN -  Get the global SparkSettableLambda configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/sparksettable_lambda",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"sparksettable_lambda"
									]
								},
								"description": "REQUIRES SPARK TOKEN - Get the global SparkSettableLambda configuration. A spark token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/sparksettable_lambda",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"sparksettable_lambda"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SPARK TOKEN - Update the global SparkSettableLambda configuration. A spark token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/sparksettable_lambda",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"sparksettable_lambda"
									]
								},
								"description": "REQUIRES SPARK TOKEN - Update the global SparkSettableLambda configuration. A spark token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/sparksettable_lambda",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"sparksettable_lambda"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "app Framework",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Appframework configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/appFramework",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"appFramework"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Appframework configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/appFramework",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"appFramework"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Appframework configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/appFramework",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"appFramework"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Appframework configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/appFramework",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"appFramework"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "jarvis",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Jarvis configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/jarvis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"jarvis"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Jarvis configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/jarvis",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"jarvis"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Jarvis configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/jarvis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"jarvis"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Jarvis configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/jarvis",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"jarvis"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "kvsnapshot",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Kvsnapshot configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/kvsnapshot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"kvsnapshot"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Kvsnapshot configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/kvsnapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"kvsnapshot"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Kvsnapshot configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/kvsnapshot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"kvsnapshot"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Kvsnapshot configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/kvsnapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"kvsnapshot"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "infinity",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Infinity configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/infinity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"infinity"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Infinity configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/infinity",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"infinity"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Infinity configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/infinity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"infinity"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Infinity configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/infinity",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"infinity"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local cdp",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Cdp configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_cdp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_cdp"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Cdp configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_cdp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_cdp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Cdp configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_cdp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_cdp"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Cdp configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_cdp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_cdp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "vsphere",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Vsphere configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/vsphere",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"vsphere"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Vsphere configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/vsphere",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"vsphere"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Vsphere configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/vsphere",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"vsphere"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Vsphere configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/vsphere",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"vsphere"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local infinity",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Infinity configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_infinity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_infinity"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Infinity configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_infinity",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_infinity"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Infinity configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_infinity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_infinity"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Infinity configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_infinity",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_infinity"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local akka",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Akka configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_akka",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_akka"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Akka configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_akka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_akka"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Akka configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_akka",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_akka"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Akka configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_akka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_akka"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local shield",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Shield configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_shield",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_shield"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Shield configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_shield",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_shield"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Shield configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_shield",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_shield"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Shield configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_shield",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_shield"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "volume Group",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Volumegroup configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/volumeGroup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"volumeGroup"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Volumegroup configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/volumeGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"volumeGroup"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Volumegroup configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/volumeGroup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"volumeGroup"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Volumegroup configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/volumeGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"volumeGroup"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "polaris",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Polaris configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/polaris",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"polaris"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Polaris configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/polaris",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"polaris"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Polaris configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/polaris",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"polaris"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Polaris configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/polaris",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"polaris"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "crystal",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Crystal configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/crystal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"crystal"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Crystal configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/crystal",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"crystal"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Crystal configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/crystal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"crystal"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Crystal configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/crystal",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"crystal"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local envision",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Envision configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_envision",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_envision"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Envision configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_envision",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_envision"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Envision configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_envision",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_envision"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Envision configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_envision",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_envision"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "callisto",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Callisto configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/callisto",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"callisto"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Callisto configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/callisto",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"callisto"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Callisto configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/callisto",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"callisto"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Callisto configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/callisto",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"callisto"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "snapshot",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Snapshot configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/snapshot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"snapshot"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Snapshot configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"snapshot"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Snapshot configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/snapshot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"snapshot"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Snapshot configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"snapshot"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local quicksilver",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Quicksilver configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_quicksilver",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_quicksilver"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Quicksilver configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_quicksilver",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_quicksilver"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Quicksilver configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_quicksilver",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_quicksilver"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Quicksilver configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_quicksilver",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_quicksilver"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "nutanix",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Nutanix configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/nutanix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"nutanix"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Nutanix configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/nutanix",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"nutanix"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Nutanix configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/nutanix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"nutanix"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Nutanix configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/nutanix",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"nutanix"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "sparksettable polaris",
					"item": [
						{
							"name": "REQUIRES SPARK TOKEN -  Get the global SparkSettablePolaris configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/sparksettable_polaris",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"sparksettable_polaris"
									]
								},
								"description": "REQUIRES SPARK TOKEN - Get the global SparkSettablePolaris configuration. A spark token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/sparksettable_polaris",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"sparksettable_polaris"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SPARK TOKEN - Update the global SparkSettablePolaris configuration. A spark token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/sparksettable_polaris",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"sparksettable_polaris"
									]
								},
								"description": "REQUIRES SPARK TOKEN - Update the global SparkSettablePolaris configuration. A spark token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/sparksettable_polaris",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"sparksettable_polaris"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "nfs",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Nfs configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/nfs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"nfs"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Nfs configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/nfs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"nfs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Nfs configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/nfs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"nfs"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Nfs configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/nfs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"nfs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local vmware",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Vmware configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_vmware",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_vmware"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Vmware configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_vmware",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_vmware"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Vmware configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_vmware",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_vmware"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Vmware configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_vmware",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_vmware"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local remote Cluster",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Remotecluster configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_remoteCluster",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_remoteCluster"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Remotecluster configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_remoteCluster",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_remoteCluster"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Remotecluster configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_remoteCluster",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_remoteCluster"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Remotecluster configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_remoteCluster",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_remoteCluster"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "fileset",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Fileset configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/fileset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"fileset"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Fileset configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/fileset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"fileset"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Fileset configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/fileset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"fileset"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Fileset configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/fileset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"fileset"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "envoy",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Envoy configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/envoy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"envoy"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Envoy configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/envoy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"envoy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Envoy configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/envoy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"envoy"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Envoy configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/envoy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"envoy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cerebro",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Cerebro configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/cerebro",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"cerebro"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Cerebro configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/cerebro",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"cerebro"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Cerebro configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/cerebro",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"cerebro"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Cerebro configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/cerebro",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"cerebro"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "managed Volume",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Managedvolume configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/managedVolume",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"managedVolume"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Managedvolume configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/managedVolume",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"managedVolume"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Managedvolume configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/managedVolume",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"managedVolume"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Managedvolume configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/managedVolume",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"managedVolume"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "oracle",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Oracle configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/oracle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"oracle"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Oracle configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/oracle",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"oracle"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Oracle configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/oracle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"oracle"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Oracle configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/oracle",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"oracle"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "akka",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Akka configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/akka",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"akka"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Akka configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/akka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"akka"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Akka configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/akka",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"akka"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Akka configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/akka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"akka"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local galactus",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Galactus configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_galactus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_galactus"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Galactus configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_galactus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_galactus"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Galactus configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_galactus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_galactus"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Galactus configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_galactus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_galactus"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "forge",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Forge configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/forge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"forge"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Forge configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/forge",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"forge"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Forge configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/forge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"forge"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Forge configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/forge",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"forge"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "thor",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Thor configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/thor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"thor"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Thor configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/thor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"thor"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Thor configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/thor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"thor"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Thor configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/thor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"thor"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "gcp",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Gcp configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"gcp"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Gcp configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/gcp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"gcp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Gcp configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"gcp"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Gcp configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/gcp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"gcp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "hawkeye",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Hawkeye configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/hawkeye",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"hawkeye"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Hawkeye configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/hawkeye",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"hawkeye"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Hawkeye configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/hawkeye",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"hawkeye"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Hawkeye configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/hawkeye",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"hawkeye"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cloud",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Cloud configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/cloud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"cloud"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Cloud configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/cloud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"cloud"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Cloud configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/cloud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"cloud"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Cloud configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/cloud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"cloud"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "dlc",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Dlc configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/dlc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"dlc"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Dlc configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/dlc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"dlc"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Dlc configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/dlc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"dlc"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Dlc configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/dlc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"dlc"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cdp",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Cdp configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/cdp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"cdp"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Cdp configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/cdp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"cdp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Cdp configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/cdp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"cdp"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Cdp configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/cdp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"cdp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "blobstore",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the global Blobstore configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/blobstore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"blobstore"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the global Blobstore configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/blobstore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"blobstore"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the global Blobstore configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/blobstore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"blobstore"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the global Blobstore configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "global configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/blobstore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"blobstore"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "local callisto",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN -  Get the local Callisto configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_callisto",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_callisto"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Get the local Callisto configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_callisto",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_callisto"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Update the local Callisto configuration. A support token is required for this operation.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/config/local_callisto",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"config",
										"local_callisto"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Update the local Callisto configuration. A support token is required for this operation."
							},
							"response": [
								{
									"name": "local configuration",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/local_callisto",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"local_callisto"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "polaris",
			"item": [
				{
					"name": "replication",
					"item": [
						{
							"name": "source",
							"item": [
								{
									"name": "replicate app/{snappable id}",
									"item": [
										{
											"name": "Replicate snapshots for the snappable of the specified ID.",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/source/replicate_app/:snappable_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"source",
														"replicate_app",
														":snappable_id"
													],
													"variable": [
														{
															"key": "snappable_id",
															"value": "schema type not provided",
															"description": "(Required) Snappable ID of which we are replicating snapshots."
														}
													]
												},
												"description": "Replicate snapshots for the snappable of the specified ID. The ID is the snappable ID and the snappable can be an AppBlueprint with its children EC2 instances."
											},
											"response": [
												{
													"name": "Polaris replication pull replicate succefully scheduled.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/polaris/replication/source/replicate_app/:snappable_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"polaris",
																"replication",
																"source",
																"replicate_app",
																":snappable_id"
															],
															"variable": [
																{
																	"key": "snappable_id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Cancels the replication job which is currently running for the snappable specified by ID.",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/source/replicate_app/:snappable_id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"source",
														"replicate_app",
														":snappable_id",
														"cancel"
													],
													"variable": [
														{
															"key": "snappable_id",
															"value": "schema type not provided",
															"description": "(Required) Snappable ID of which we are replicating snapshots."
														}
													]
												},
												"description": "Cancels the replication job which is currently running for the snappable specified by ID. The ID is the snappable ID and the snappable should be an AppBlueprint with its child EC2 instances."
											},
											"response": [
												{
													"name": "Polaris replication pull replicate succefully canceled.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/polaris/replication/source/replicate_app/:snappable_id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"polaris",
																"replication",
																"source",
																"replicate_app",
																":snappable_id",
																"cancel"
															],
															"variable": [
																{
																	"key": "snappable_id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "Remove the Polaris account as a replication source.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/source/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"source",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) Managed ID of the Polaris replication source."
														}
													]
												},
												"description": "Remove the Polaris account as a replication source for this cluster."
											},
											"response": [
												{
													"name": "Successfully removed the Polaris replication source.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/polaris/replication/source/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"polaris",
																"replication",
																"source",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get metadata summary replicated from this Polaris source.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/source/:id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"source",
														":id",
														"metadata"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) Managed ID of the Polaris replication source."
														}
													]
												},
												"description": "Get a summary of remote metadata that exists on this cluster which has the Polaris source identified by this Polaris Id as the primary cluster, so that the Polaris side can prepare the metadata package for the later source refresh job."
											},
											"response": [
												{
													"name": "Get summary of all replicated snappables from this Polaris source.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/polaris/replication/source/:id/metadata",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"polaris",
																"replication",
																"source",
																":id",
																"metadata"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Schedules a Polaris replication source refresh.",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/source/:id/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"source",
														":id",
														"refresh"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) Managed ID of the Polaris replication source."
														}
													]
												},
												"description": "Triggers a replication source refresh from remote Polaris site to this cluster. This CDM cluster should go to the post URL and fetch the metadata package prepared by Polaris. Provide the managed ID of the Polaris replication source, and customer object store credentials where the metadata is stored."
											},
											"response": [
												{
													"name": "Polaris metadata refresh successfully scheduled.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/polaris/replication/source/:id/refresh",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"polaris",
																"replication",
																"source",
																":id",
																"refresh"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Configure a Polaris account as a replication source.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/replication/source",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"replication",
												"source"
											]
										},
										"description": "Configure a Polaris account as a replication source to this cluster. Provide Polaris ID (account database name), which is a global unique ID that representing this Polaris account, account ID and account name."
									},
									"response": [
										{
											"name": "Polaris source successfully added.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/source",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"source"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request fails",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/source",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"source"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Polaris replication job status",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/replication/source/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"replication",
												"source",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an asynchronous job. Should be a composite ID of both the job ID and the instance ID"
												}
											]
										},
										"description": "Retrieve the details of a specified asynchronous Polaris replication job."
									},
									"response": [
										{
											"name": "Status of a Polaris replication asynchronous job",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/source/request/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"source",
														"request",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Replicate snapshots for the snappable of the specified ID.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/replication/source/replicate/:snappable_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"replication",
												"source",
												"replicate",
												":snappable_id"
											],
											"variable": [
												{
													"key": "snappable_id",
													"value": "schema type not provided",
													"description": "(Required) Snappable ID of which we are replicating snapshots."
												}
											]
										},
										"description": "Replicate snapshots for the snappable of the specified ID. The ID is the snappable ID and the snappable can be an EC2 instance."
									},
									"response": [
										{
											"name": "Polaris replication pull replicate succefully scheduled.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/source/replicate/:snappable_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"source",
														"replicate",
														":snappable_id"
													],
													"variable": [
														{
															"key": "snappable_id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "location/{id}",
							"item": [
								{
									"name": "Configure a disabled replication location",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/replication/location/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"replication",
												"location",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of the replication location"
												}
											]
										},
										"description": "Provide the cluster uuid and name of replication cluster to configure a disabled replication location. WARNING: This will be a no-op if there already exists a replication location with same cluster uuid and is enabled as source or target."
									},
									"response": [
										{
											"name": "Replication location with uuid <peerClusterUuid> added as a disabled location.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/location/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"location",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request fails",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/location/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"location",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Enable a previously disabled replication location as target",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/replication/location/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"replication",
												"location",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of the replication location"
												}
											]
										},
										"description": "Provide the cluster uuid, name and nodes information of replication location to enable as replication target. Network setup must be either 'NAT' or 'Private Network'. WARNING: This will be a no-op if the replication location is already enabled as target."
									},
									"response": [
										{
											"name": "Returned if the request fails",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/location/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"location",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Replication target with uuid <targetClusterUuid> successfully enabled (if it was required).",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/replication/location/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"replication",
														"location",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "failover",
					"item": [
						{
							"name": "recovery spec",
							"item": [
								{
									"name": "Validites the recovery spec of the Blueprint",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/failover/recovery_spec/:id/validate?source_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"failover",
												"recovery_spec",
												":id",
												"validate"
											],
											"query": [
												{
													"key": "source_id",
													"value": "",
													"description": "(Required) The global unique ID that representing a source."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Polaris ID of the Blueprint."
												}
											]
										},
										"description": "Validates the status of the recovery spec. If the status is invalid, returns a set of error messages corresponding to the errors and the possible fixes by the user if any. This endpoint is reserved for Polaris."
									},
									"response": [
										{
											"name": "Returned if the query was successful.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/recovery_spec/:id/validate?source_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"recovery_spec",
														":id",
														"validate"
													],
													"query": [
														{
															"key": "source_id",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Upserts snappable recovery specs for snappables",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/failover/recovery_spec/upsert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"failover",
												"recovery_spec",
												"upsert"
											]
										},
										"description": "Upserts snappable recovery specs of the snappables specifed in the body. Returns error if upsert validation fails."
									},
									"response": [
										{
											"name": "Snappable recovery specs successfully upserted.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/recovery_spec/upsert",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"recovery_spec",
														"upsert"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "image/{id}",
							"item": [
								{
									"name": "Pins Blueprint cloud machine image during failover",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/failover/image/:id/pin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"failover",
												"image",
												":id",
												"pin"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to the Blueprint cloud machine image."
												}
											]
										},
										"description": "Pin the Blueprint cloud machine image while the failover is running so that it doesn't get deleted during failover."
									},
									"response": [
										{
											"name": "Image successfully pinned.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/image/:id/pin",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"image",
														":id",
														"pin"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Unpins Blueprint cloud machine image after failover",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/failover/image/:id/unpin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"failover",
												"image",
												":id",
												"unpin"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to the Blueprint cloud machine image."
												}
											]
										},
										"description": "Unpin the Blueprint cloud machine image after the failover has completed."
									},
									"response": [
										{
											"name": "Image successfully unpinned.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/image/:id/unpin",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"image",
														":id",
														"unpin"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "target/{id}",
							"item": [
								{
									"name": "Start a failover to this location",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/failover/target/:id/start",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"failover",
												"target",
												":id",
												"start"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of the failover operation"
												}
											]
										},
										"description": "Provide the details required to fail over a Blueprint to the current location."
									},
									"response": [
										{
											"name": "Returned if the request fails",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/target/:id/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"target",
														":id",
														"start"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failover job succefully scheduled.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/target/:id/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"target",
														":id",
														"start"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Resume a paused failover to this location",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/failover/target/:id/resume",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"failover",
												"target",
												":id",
												"resume"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of the failover operation"
												}
											]
										},
										"description": "Provide the details required to resume a paused failover of a Blueprint to the current location."
									},
									"response": [
										{
											"name": "Returned if the request fails",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/target/:id/resume",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"target",
														":id",
														"resume"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failover job succefully scheduled.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/target/:id/resume",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"target",
														":id",
														"resume"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Cancel a paused failover to this location",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/failover/target/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"failover",
												"target",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of the failover operation"
												}
											]
										},
										"description": "Provide the details required to cancel a paused failover of a Blueprint to the current location."
									},
									"response": [
										{
											"name": "Returned if the request fails",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/target/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"target",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cancel failover job succefully scheduled.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/target/:id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"target",
														":id",
														"cancel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "End a successful test failover to this location",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/failover/target/:id/test_failover_end",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"failover",
												"target",
												":id",
												"test_failover_end"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of the failover operation"
												}
											]
										},
										"description": "Provide the details required to terminate a successful test failover of a Blueprint to the current location."
									},
									"response": [
										{
											"name": "End test failover job succefully scheduled.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/target/:id/test_failover_end",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"target",
														":id",
														"test_failover_end"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request fails",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/failover/target/:id/test_failover_end",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"failover",
														"target",
														":id",
														"test_failover_end"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Returns a string representing the status of the failover",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/failover/:id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"failover",
										":id",
										"status"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the failover."
										}
									]
								},
								"description": "Returns a string representing the status of the failover. This will be used by Polaris to resolve inconsistencies between state on Polaris and CDM to avoid getting trapped in unrecoverable states. This endpoint is reserved for Polaris."
							},
							"response": [
								{
									"name": "Returned if the query was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/failover/:id/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"failover",
												":id",
												"status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Starts the failover process in the source cluster",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/failover/source/:id/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"failover",
										"source",
										":id",
										"start"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Blueprint."
										}
									]
								},
								"description": "It will start the failover process in the source cluster. It will shutdown the VMs in the vCenter and will take a snapshot. For the failover to cloud, it will also convert the snapshot."
							},
							"response": [
								{
									"name": "Status of the job.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/failover/source/:id/start",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"failover",
												"source",
												":id",
												"start"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get failover job status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/failover/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"failover",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to an asynchronous job."
										}
									]
								},
								"description": "Retrieve the details of a specified asynchronous job for a failover request."
							},
							"response": [
								{
									"name": "Status of a failover asynchronous job",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/failover/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"failover",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "export thrift",
					"item": [
						{
							"name": "Export information about a given metadata type in Thrift form",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/export_thrift",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"export_thrift"
									]
								},
								"description": "Trigger an asynchronous job that uploads a file with metadata information about the given metadata type in serialized Thrift format."
							},
							"response": [
								{
									"name": "Status of an asynchronous job to get object information.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/export_thrift",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"export_thrift"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get asynchronous request details for an export Thrift metadata job",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/export_thrift/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"export_thrift",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an asynchronous export thrift metadata request."
										}
									]
								},
								"description": "Get the details of an asynchronous request that runs an export Thrift metadata job."
							},
							"response": [
								{
									"name": "Status of an asynchronous export thrift metadata job.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/export_thrift/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"export_thrift",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "app blueprint",
					"item": [
						{
							"name": "snapshot/{id}",
							"item": [
								{
									"name": "Delete Blueprint snapshot",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/snapshot/:id?location=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												"snapshot",
												":id"
											],
											"query": [
												{
													"key": "location",
													"value": "",
													"description": "(Required) Location of the snapshot to delete. Use _local_ to delete only the local copy of the snapshot. Use _all_ to delete the snapshot locally, on a replication target, and at an archival location. (This can only be one of all,local)"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a snapshot object."
												}
											]
										},
										"description": "Designate a Blueprint snapshot as expired and available for garbage collection. The snapshot must be an on-demand snapshot or a snapshot from a Blueprint that is not assigned to an SLA Domain."
									},
									"response": [
										{
											"name": "Snapshot successfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/snapshot/:id?location=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														"snapshot",
														":id"
													],
													"query": [
														{
															"key": "location",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download snapshot from archive",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/snapshot/:id/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												"snapshot",
												":id",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Provides a method for retrieving a snapshot that is not locally available from an archival location."
									},
									"response": [
										{
											"name": "Status for the download request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/snapshot/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														"snapshot",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Export Blueprint snapshot.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/snapshot/:id/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												"snapshot",
												":id",
												"export"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to the Blueprint snapshot object."
												}
											]
										},
										"description": "Export the specified Blueprint snapshot into a new Blueprint or an existing Blueprint."
									},
									"response": [
										{
											"name": "Accepted request for asynchronous job to export a Blueprint snapshot.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/snapshot/:id/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														"snapshot",
														":id",
														"export"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Instant Recovery of Blueprint virtual machines",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/snapshot/:id/instant_recover",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												"snapshot",
												":id",
												"instant_recover"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to the Blueprint snapshot object."
												}
											]
										},
										"description": "Use Instant Recovery to recover specified Blueprint virtual machines."
									},
									"response": [
										{
											"name": "Request status for async Instant Recovery job for virtual machines in a Blueprint snapshot.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/snapshot/:id/instant_recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														"snapshot",
														":id",
														"instant_recover"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Live mount Blueprint snapshot.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/snapshot/:id/mount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												"snapshot",
												":id",
												"mount"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to the Blueprint snapshot object."
												}
											]
										},
										"description": "Live mount the specified Blueprint snapshot as a new Blueprint."
									},
									"response": [
										{
											"name": "Accepted request for asynchronous job to live mount a Blueprint snapshot.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/snapshot/:id/mount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														"snapshot",
														":id",
														"mount"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "cloud on",
							"item": [
								{
									"name": "aws/app image",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Delete a given AWS app cloud image",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/polaris/app_blueprint/cloud_on/aws/app_image/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"polaris",
																"app_blueprint",
																"cloud_on",
																"aws",
																"app_image",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of an AWS app cloud image"
																}
															]
														},
														"description": "Delete a given AWS app cloud image."
													},
													"response": [
														{
															"name": "Status for the AWS app cloud image deletion request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/polaris/app_blueprint/cloud_on/aws/app_image/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"polaris",
																		"app_blueprint",
																		"cloud_on",
																		"aws",
																		"app_image",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get AWS app cloud image details",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/polaris/app_blueprint/cloud_on/aws/app_image/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"polaris",
																"app_blueprint",
																"cloud_on",
																"aws",
																"app_image",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of an AWS app cloud image"
																}
															]
														},
														"description": "Retrieve the details for a specified AWS app cloud image."
													},
													"response": [
														{
															"name": "Returns details about the AWS app cloud image.",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/polaris/app_blueprint/cloud_on/aws/app_image/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"polaris",
																		"app_blueprint",
																		"cloud_on",
																		"aws",
																		"app_image",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Create an AppBlueprint image on AWS",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/cloud_on/aws/app_image?snapshot_id=&location_id=&should_create_when_archived=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														"cloud_on",
														"aws",
														"app_image"
													],
													"query": [
														{
															"key": "snapshot_id",
															"value": "",
															"description": "(Required) ID of an AppBlueprint snapshot."
														},
														{
															"key": "location_id",
															"value": "",
															"description": "(Required) ID of data location to create the image on."
														},
														{
															"key": "should_create_when_archived",
															"value": "",
															"description": "A Boolean value that determines whether to create image when the snappable specified by the snapshot_id is archived. When the value is 'true', the image will be created when the snappable is archived. When the value is 'false', the image will not be created when then snappable is archived.\n"
														}
													]
												},
												"description": "Create an AppBlueprint image at a specified AWS location using a specified snapshot."
											},
											"response": [
												{
													"name": "Status for the AWS image creation request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/polaris/app_blueprint/cloud_on/aws/app_image?snapshot_id=&location_id=&should_create_when_archived=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"polaris",
																"app_blueprint",
																"cloud_on",
																"aws",
																"app_image"
															],
															"query": [
																{
																	"key": "snapshot_id",
																	"value": ""
																},
																{
																	"key": "location_id",
																	"value": ""
																},
																{
																	"key": "should_create_when_archived",
																	"value": ""
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Query for AppBlueprint cloud images",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/cloud_on/aws/app_image?snappable_id=&location_id=&offset=&limit=&snappable_name=&sort_by=&sort_order=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														"cloud_on",
														"aws",
														"app_image"
													],
													"query": [
														{
															"key": "snappable_id",
															"value": "",
															"description": "Filters AWS AppBlueprint cloud images by snappable ID."
														},
														{
															"key": "location_id",
															"value": "",
															"description": "Filters AWS AppBlueprint cloud images by location ID."
														},
														{
															"key": "offset",
															"value": "",
															"description": "Ignore the specified number of matches from the beginning of the list."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Retrieve only the specified number of records. Default returns all available records.\n"
														},
														{
															"key": "snappable_name",
															"value": "",
															"description": "Limit results to records for those sources with a name that matches the specified query string.\n"
														},
														{
															"key": "sort_by",
															"value": "",
															"description": "Sort the result by given attribute. (This can only be one of AppBlueprintName,LocationName,SnapshotTime,CreationTime)"
														},
														{
															"key": "sort_order",
															"value": "",
															"description": "The sort order. Defaults to asc if not specified (This can only be one of asc,desc)"
														}
													]
												},
												"description": "Retrieve a list of the available AppBlueprint cloud images."
											},
											"response": [
												{
													"name": "Returns summary information for all AWS AppBlueprint cloud images.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/polaris/app_blueprint/cloud_on/aws/app_image?snappable_id=&location_id=&offset=&limit=&snappable_name=&sort_by=&sort_order=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"polaris",
																"app_blueprint",
																"cloud_on",
																"aws",
																"app_image"
															],
															"query": [
																{
																	"key": "snappable_id",
																	"value": ""
																},
																{
																	"key": "location_id",
																	"value": ""
																},
																{
																	"key": "offset",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																},
																{
																	"key": "snappable_name",
																	"value": ""
																},
																{
																	"key": "sort_by",
																	"value": ""
																},
																{
																	"key": "sort_order",
																	"value": ""
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get Blueprint cloud on job status",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/cloud_on/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												"cloud_on",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an asynchronous job."
												}
											]
										},
										"description": "Retrieve the details of a specified asynchronous job for a Blueprint."
									},
									"response": [
										{
											"name": "Status of a Blueprint asynchronous job.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/cloud_on/request/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														"cloud_on",
														"request",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "snapshot",
									"item": [
										{
											"name": "Create an on-demand snapshot for a Blueprint",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Blueprint object."
														}
													]
												},
												"description": "Start an asynchronous job to create an on-demand snapshot for a specified Blueprint object."
											},
											"response": [
												{
													"name": "Status of async job for an on-demand snapshot of a Blueprint.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/polaris/app_blueprint/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"polaris",
																"app_blueprint",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete all snapshots of Blueprint",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Blueprint object."
														}
													]
												},
												"description": "Delete all snapshots for a specified Blueprint object."
											},
											"response": [
												{
													"name": "Snapshots successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/polaris/app_blueprint/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"polaris",
																"app_blueprint",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Delete a Blueprint object",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a Blueprint object."
												}
											]
										},
										"description": "Delete a Blueprint object."
									},
									"response": [
										{
											"name": "Blueprint successfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a Blueprint object",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a Blueprint object."
												}
											]
										},
										"description": "Make changes to the parameters of a specified Blueprint object."
									},
									"response": [
										{
											"name": "Details of an updated Blueprint object.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Search for a file from a Blueprint",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/:id/search?path=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												":id",
												"search"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) The path query. Use either a path prefix or a filename prefix."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Blueprint."
												}
											]
										},
										"description": "Aggregated search for a file through snapshots of all workloads that are presently part of the Blueprint. Specify the file by full path prefix or filename prefix."
									},
									"response": [
										{
											"name": "File search results.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/polaris/app_blueprint/:id/search?path=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"polaris",
														"app_blueprint",
														":id",
														"search"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Create a new Blueprint object.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/app_blueprint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"app_blueprint"
									]
								},
								"description": "Create a new Blueprint object."
							},
							"response": [
								{
									"name": "Details of an updated Blueprint object.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Blueprint job status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/app_blueprint/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"app_blueprint",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to an asynchronous job."
										}
									]
								},
								"description": "Retrieve the details of a specified asynchronous job for a Blueprint."
							},
							"response": [
								{
									"name": "Status of a Blueprint asynchronous job.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Shut down a Blueprint before starting a production failover on Polaris.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/app_blueprint/shutdown/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"app_blueprint",
										"shutdown",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to the Blueprint object."
										}
									]
								},
								"description": "Polaris uses these APIs to power down the virtual machines in the Blueprint in reverse boot order. Polaris uses this endpoint during a production failover, before instantiating the virtual machine images in the cloud. This endpoint is reserved for Polaris."
							},
							"response": [
								{
									"name": "Blueprint virtual machines successfully powered off.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/shutdown/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												"shutdown",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deprecate a Blueprint at the end of successful production failover.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/app_blueprint/deprecate/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"app_blueprint",
										"deprecate",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to the Blueprint object."
										}
									]
								},
								"description": "During production failover, after all of the virtual machine images have been successfully instantiated in the cloud, archive the Blueprint and prefix the virtual machine names with \"Deprecated \" on the vCenter. This endpoint is reserved for Polaris after a successful production failover of the Blueprint."
							},
							"response": [
								{
									"name": "Blueprint successfully deprecated.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/app_blueprint/deprecate/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"app_blueprint",
												"deprecate",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "snapshot",
					"item": [
						{
							"name": "Get information about snapshots in a given time range",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/snapshot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"snapshot"
									]
								},
								"description": "Get information about snapshots in a given time range"
							},
							"response": [
								{
									"name": "Status of an asynchronous job to get snapshot information.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"snapshot"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get asynchronous request details for a get snapshots job",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/snapshot/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"snapshot",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an asynchronous get snapshots request."
										}
									]
								},
								"description": "Get the details of an asynchronous request that runs a get snapshots job."
							},
							"response": [
								{
									"name": "Status of an asynchronous get snapshots job.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/snapshot/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"snapshot",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "nas/{id}/security descriptor",
					"item": [
						{
							"name": "Retrieves security descriptor of a specific file or folder",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/nas/:id/security_descriptor?path=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"nas",
										":id",
										"security_descriptor"
									],
									"query": [
										{
											"key": "path",
											"value": "",
											"description": "(Required) Path for which security descriptor needs to be retrieved."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the network share to get security descriptor for"
										}
									]
								},
								"description": "Retrieves security descriptor of the specified file or folder. Permissions are retrieved in SDDL format."
							},
							"response": [
								{
									"name": "File or folder security descriptor",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/nas/:id/security_descriptor?path=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"nas",
												":id",
												"security_descriptor"
											],
											"query": [
												{
													"key": "path",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates security descriptor for a file or folder under NAS share",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/nas/:id/security_descriptor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"nas",
										":id",
										"security_descriptor"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the network share to set security descriptor for"
										}
									]
								},
								"description": "Updates security descriptor for a specific file or folder under NAS share. Security descriptor should be in SDDL format. The specified file or folder must exist under the network share."
							},
							"response": [
								{
									"name": "Returns file or folder security descriptor, after it is updated.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/nas/:id/security_descriptor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"nas",
												":id",
												"security_descriptor"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "export info",
					"item": [
						{
							"name": "Export information about a given object type",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/export_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"export_info"
									]
								},
								"description": "Trigger an asynchronous job that uploads a file with metadata information about the given object type."
							},
							"response": [
								{
									"name": "Status of an asynchronous job to get object information.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/export_info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"export_info"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get asynchronous request details for an export info job",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/export_info/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"export_info",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an asynchronous export info request."
										}
									]
								},
								"description": "Get the details of an asynchronous request that runs an export info job."
							},
							"response": [
								{
									"name": "Status of an asynchronous export info job.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/polaris/export_info/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"polaris",
												"export_info",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Update a Polaris managed object storage archival location",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/polaris/archive/object_store/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"polaris",
								"archive",
								"object_store",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) Polaris Managed ID of the archival location."
								}
							]
						},
						"description": "Update the properties of an Polaris managed object storage location. To update the bucket count, specify a value equal to or greater than the existing bucket count.\n"
					},
					"response": [
						{
							"name": "Returns the successfully updated archival location object.",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/archive/object_store/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"archive",
										"object_store",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get entries from report_job_instance table",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/polaris/report/report_job_instance?start_date=&end_date=&limit=&day_limit=&grace_period=&after_id=&should_include_extra_data=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"polaris",
								"report",
								"report_job_instance"
							],
							"query": [
								{
									"key": "start_date",
									"value": "",
									"description": "(Required) The start date of the report job instance."
								},
								{
									"key": "end_date",
									"value": "",
									"description": "The end date of the report job instance."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Maximum number of entries in the response."
								},
								{
									"key": "day_limit",
									"value": "",
									"description": "The maximum number of days to query."
								},
								{
									"key": "grace_period",
									"value": "",
									"description": "The grace period allowed (in seconds) for the time difference between nodes."
								},
								{
									"key": "after_id",
									"value": "",
									"description": "Filter the report task entries after this ID."
								},
								{
									"key": "should_include_extra_data",
									"value": "",
									"description": "A Boolean value that determines whether or not the response should include the object instance, SLA domain, and data location information."
								}
							]
						},
						"description": "Get report job instance entries from the report job instance table."
					},
					"response": [
						{
							"name": "Report job instance entries.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/polaris/report/report_job_instance?start_date=&end_date=&limit=&day_limit=&grace_period=&after_id=&should_include_extra_data=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"polaris",
										"report",
										"report_job_instance"
									],
									"query": [
										{
											"key": "start_date",
											"value": ""
										},
										{
											"key": "end_date",
											"value": ""
										},
										{
											"key": "limit",
											"value": ""
										},
										{
											"key": "day_limit",
											"value": ""
										},
										{
											"key": "grace_period",
											"value": ""
										},
										{
											"key": "after_id",
											"value": ""
										},
										{
											"key": "should_include_extra_data",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "organization",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "mssql",
							"item": [
								{
									"name": "Get information for authorized SQL Server resources in an organization.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/mssql",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"mssql"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized SQL Server resources of an organization. Information for a SQL Server resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get SQL Server resources",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/mssql",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"mssql"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get mssql database metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/mssql/db/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"mssql",
												"db",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specify the organization id"
												}
											]
										},
										"description": "Retrieve the total object count, total protected object and no sla object count"
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/mssql/db/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"mssql",
														"db",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "nutanix",
							"item": [
								{
									"name": "Get information for authorized Nutanix resources in an organization.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/nutanix",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"nutanix"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized Nutanix resources of an organization. Information for a Nutanix resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get Nutanix resources",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/nutanix",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"nutanix"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get nutanix vm metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/nutanix/vm/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"nutanix",
												"vm",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve the total object count, total protected object and no sla object count"
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/nutanix/vm/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"nutanix",
														"vm",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "vcd",
							"item": [
								{
									"name": "Get information for authorized vCD resources in an organization.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/vcd",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"vcd"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized vCD resources of an organization. Information for a vCD resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get vCD resources",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/vcd",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"vcd"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get vCD vApp metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/vcd/vapp/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"vcd",
												"vapp",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve the total object count, total protected object and no sla object count"
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/vcd/vapp/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"vcd",
														"vapp",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "managed volume",
							"item": [
								{
									"name": "Get information for authorized Managed Volumes in an organization.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/managed_volume",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"managed_volume"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized Managed Volumes of an organization. Information for a Managed Volume is only included when the organization has an explicit authorization for the Managed Volume. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get Managed Volumes",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/managed_volume",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"managed_volume"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get managed volume metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/managed_volume/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"managed_volume",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specify the organization id"
												}
											]
										},
										"description": "Retrieve the total object count, total protected object and no sla object count"
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/managed_volume/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"managed_volume",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "vmware",
							"item": [
								{
									"name": "Get information for authorized VMware resources in an organization.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/vmware",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"vmware"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized VMware resources of an organization. Information for a Vmware resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get VMware resources",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/vmware",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"vmware"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get vmware vm metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/vmware/vm/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"vmware",
												"vm",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve the total object count, total protected object and no sla object count"
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/vmware/vm/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"vmware",
														"vm",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "envoy",
							"item": [
								{
									"name": "{envoy id}",
									"item": [
										{
											"name": "Remove Rubrik Envoy",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/envoy/:envoy_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"envoy",
														":envoy_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to an organization object."
														},
														{
															"key": "envoy_id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Rubrik Envoy object."
														}
													]
												},
												"description": "Remove a Rubrik Envoy object from an organization and delete the object from the Rubrik cluster."
											},
											"response": [
												{
													"name": "Successfully deleted the specified Rubrik Envoy object.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/organization/:id/envoy/:envoy_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organization",
																":id",
																"envoy",
																":envoy_id"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "envoy_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get a Rubrik Envoy object",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/envoy/:envoy_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"envoy",
														":envoy_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to an organization object."
														},
														{
															"key": "envoy_id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Rubrik Envoy object."
														}
													]
												},
												"description": "Retrieve the details of a specified Rubrik Envoy object."
											},
											"response": [
												{
													"name": "Details for a specified Rubrik Envoy object.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/organization/:id/envoy/:envoy_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organization",
																":id",
																"envoy",
																":envoy_id"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "envoy_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update Rubrik Envoy",
											"request": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/envoy/:envoy_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"envoy",
														":envoy_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to an organization object."
														},
														{
															"key": "envoy_id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Rubrik Envoy object."
														}
													]
												},
												"description": "Change one or more of the properties of a specified Rubrik Envoy object."
											},
											"response": [
												{
													"name": "Details for a Rubrik Envoy object",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/organization/:id/envoy/:envoy_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organization",
																":id",
																"envoy",
																":envoy_id"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "envoy_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Create a Rubrik Envoy object",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/envoy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"envoy"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an organization object."
												}
											]
										},
										"description": "Create a Rubrik Envoy object for a specified organization and specify the properties to assign to the Rubrik Envoy object."
									},
									"response": [
										{
											"name": "Successfully created a Rubrik Envoy object.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/envoy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"envoy"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Rubrik Envoy list for an organization",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/envoy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"envoy"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an organization object."
												}
											]
										},
										"description": "Retrieve a list of all of the Rubrik Envoy objects that are assigned to a specified organization."
									},
									"response": [
										{
											"name": "List of Rubrik Envoy objects that are assigned to a specified organization",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/envoy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"envoy"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "windows",
							"item": [
								{
									"name": "Get information for authorized Windows hosts in an organization.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/windows",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"windows"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized Windows hosts of an organization. Information for a Windows host is only included when the organization has an explicit authorization for the host. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get Windows hosts",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/windows",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"windows"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Window fileset metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/windows/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"windows",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specify the organization id"
												}
											]
										},
										"description": "Retrieve the total object count and total protected object count"
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/windows/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"windows",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "aws",
							"item": [
								{
									"name": "Get information for authorized AWS resources in an organization.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/aws",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"aws"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized AWS resources of an organization. Information for a AWS resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get AWS resources",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/aws",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"aws"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get AWS EC2 instance metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/aws/ec2_instance/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"aws",
												"ec2_instance",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve the total object count, total protected object and no sla object count"
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/aws/ec2_instance/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"aws",
														"ec2_instance",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "hyperv",
							"item": [
								{
									"name": "Get information for authorized Hyper-v resources in an organization.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/hyperv",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"hyperv"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized Hyper-v resources of an organization. Information for a Hyper-v resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get Hyper-V resources",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/hyperv",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"hyperv"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get hyperv vm metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/hyperv/vm/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"hyperv",
												"vm",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve the total object count, total protected object and no sla object count"
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/hyperv/vm/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"hyperv",
														"vm",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "linux",
							"item": [
								{
									"name": "Get information for authorized Linux hosts in an organization.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/linux",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"linux"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized Linux hosts of an organization. Information for a Linux host is only included when the organization has an explicit authorization for the host. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get Linux hosts",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/linux",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"linux"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get linux fileset metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/linux/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"linux",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve the total object count and total protected object count"
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/linux/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"linux",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "storage/array",
							"item": [
								{
									"name": "Get information for authorized storage array resources in an organization.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/storage/array",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"storage",
												"array"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized storage array resources of an organization. Information for a storage array resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get storage array resources",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/storage/array",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"storage",
														"array"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get storage array volume group metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/storage/array/volume_group/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"storage",
												"array",
												"volume_group",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve the total object count, total protected object and no sla object count"
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/storage/array/volume_group/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"storage",
														"array",
														"volume_group",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "oracle",
							"item": [
								{
									"name": "Get information for authorized Oracle resources in an organization",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/oracle",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"oracle"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized Oracle resources of an organization. Information for a Oracle resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get Oracle resources",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/oracle",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"oracle"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Oracle database metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/oracle/db/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"oracle",
												"db",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Returns the total number of objects, the total number of protected objects, and the total number of unprotected objects."
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/oracle/db/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"oracle",
														"db",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "nas",
							"item": [
								{
									"name": "Get information for authorized NAS shares in an organization.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/nas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"nas"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve summary information for the explicitly authorized NAS shares of an organization. Information for a NAS share is only included when the organization has an explicit authorization for the share. This endpoint returns an empty list for the default global organization."
									},
									"response": [
										{
											"name": "Get NAS shares",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/nas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"nas"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get nas share metrics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/nas/share/metric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"nas",
												"share",
												"metric"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specify the organization id"
												}
											]
										},
										"description": "Retrieve the total object count, total protected object and no sla object count"
									},
									"response": [
										{
											"name": "Returns an object with metrics",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/nas/share/metric",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"nas",
														"share",
														"metric"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "replication",
							"item": [
								{
									"name": "Get replication targets associated with this organization",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/replication/target",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"replication",
												"target"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve the total list of replication targets that have been granted to this organization."
									},
									"response": [
										{
											"name": "Returns a list of Replication Targets that have been assigned to this organization.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/replication/target",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"replication",
														"target"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get replication targets associated with this organization",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/replication/source",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"replication",
												"source"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Specifies the ID of an organization."
												}
											]
										},
										"description": "Retrieve the total list of replication targets that have been granted to this organization."
									},
									"response": [
										{
											"name": "Returns a list of Replication Sources that have been assigned to this organization.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organization/:id/replication/source",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organization",
														":id",
														"replication",
														"source"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete an Organization",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an Organization object."
										}
									]
								},
								"description": "Delete a specified Organization object."
							},
							"response": [
								{
									"name": "Delete the specified Organization object",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to delete a specified Organization object",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Organization Details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an Organization object."
										}
									]
								},
								"description": "Retrieve the details of a specified Organization object."
							},
							"response": [
								{
									"name": "Details of a specified Organization object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update an Organization",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an Organization object."
										}
									]
								},
								"description": "Make changes to the parameters of a specified Organization object."
							},
							"response": [
								{
									"name": "Detailed information for the updated organization.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get archival locations associated with this organization",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization/:id/archive/location",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										":id",
										"archive",
										"location"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) Specifies the ID of an organization."
										}
									]
								},
								"description": "Retrieve the total list of archive locations that have been granted to this organization."
							},
							"response": [
								{
									"name": "Returns a list of Archive Locations that have been assigned to this organization.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/archive/location",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"archive",
												"location"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get sla domains associated with this organization",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization/:id/sla_domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										":id",
										"sla_domain"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) Specifies the ID of an organization."
										}
									]
								},
								"description": "Retrieve the total list of sla domains that have been granted to this organization."
							},
							"response": [
								{
									"name": "Returns a list of SLA Domains that have been assigned to this organization.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/sla_domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"sla_domain"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get information for authorized users and groups in an organization.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization/:id/users_and_groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										":id",
										"users_and_groups"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) Specifies the ID of an organization."
										}
									]
								},
								"description": "Retrieve summary information for the explicitly authorized users and groups of an organization. Information for a user or a group is only included when the user or group has an explicit authorization. This endpoint returns an empty list for the default global organization."
							},
							"response": [
								{
									"name": "Get Users and Groups",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/users_and_groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"users_and_groups"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the Total Storage Usage for an Organization",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization/:id/stats/total_storage_usage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										":id",
										"stats",
										"total_storage_usage"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an Organization object."
										}
									]
								},
								"description": "Retrieve the Total Storage Usage (bytes) for the Organization specified by id"
							},
							"response": [
								{
									"name": "Returns an object with attribute physical and logical, each representing the respective stat information.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organization/:id/stats/total_storage_usage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organization",
												":id",
												"stats",
												"total_storage_usage"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create new Organization",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organization",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organization"
							]
						},
						"description": "Create a new Organization object with the specified resource parameters."
					},
					"response": [
						{
							"name": "Details of new Organization object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get list of all Organizations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organization?name=&sort_by=&sort_order=&is_global=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organization"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Search by Organization Name"
								},
								{
									"key": "sort_by",
									"value": "",
									"description": "Attribute to sort the list of Organizations on (This can only be one of name,resourceCount,userCount,organizationAdmin)"
								},
								{
									"key": "sort_order",
									"value": "",
									"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
								},
								{
									"key": "is_global",
									"value": "",
									"description": "Filter the query results based on whether the organizations are the Global Organization."
								}
							]
						}
					},
					"response": [
						{
							"name": "Get page of Organizations",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization?name=&sort_by=&sort_order=&is_global=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization"
									],
									"query": [
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "sort_by",
											"value": ""
										},
										{
											"key": "sort_order",
											"value": ""
										},
										{
											"key": "is_global",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Rubrik Envoy userInfo for the envoy vm",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organization/envoy/user_info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organization",
								"envoy",
								"user_info"
							]
						},
						"description": "Retrieve a Rubrik Envoy vm userInfo that is used to log in the envoy vm."
					},
					"response": [
						{
							"name": "Rubrik Envoy userInfo that is used to log in the envoy vm.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization/envoy/user_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										"envoy",
										"user_info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get storage growth of an Organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organization/stats/storage_growth_timeseries?id=&range=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organization",
								"stats",
								"storage_growth_timeseries"
							],
							"query": [
								{
									"key": "id",
									"value": "",
									"description": "(Required) ID of an Organization object."
								},
								{
									"key": "range",
									"value": "",
									"description": "Range for timeseries. eg: -1h, -1min, -30d etc. Default value is -1h."
								}
							]
						},
						"description": "Retrieve the storage growth of an Organization object as a time series analysis that uses bytes as the unit of measurement."
					},
					"response": [
						{
							"name": "Returns a list of TimeStat.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organization/stats/storage_growth_timeseries?id=&range=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization",
										"stats",
										"storage_growth_timeseries"
									],
									"query": [
										{
											"key": "id",
											"value": ""
										},
										{
											"key": "range",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "unmanaged object",
			"item": [
				{
					"name": "{id}/snapshot",
					"item": [
						{
							"name": "(DEPRECATED) Get summary of all the unmanaged snapshots for a given object",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/unmanaged_object/:id/snapshot?limit=&offset=&search_value=&unmanaged_snapshot_type=&before_date=&after_date=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"unmanaged_object",
										":id",
										"snapshot"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "search_value",
											"value": "",
											"description": "Search snapshot by Date and Time."
										},
										{
											"key": "unmanaged_snapshot_type",
											"value": "",
											"description": "Filter by Unmanaged Snapshot Type. Valid attributes are OnDemand, Retrieved, Relic, and Unprotected (This can only be one of OnDemand,Retrieved,Relic,Unprotected)"
										},
										{
											"key": "before_date",
											"value": "",
											"description": "Filter all the snapshots before a date."
										},
										{
											"key": "after_date",
											"value": "",
											"description": "Filter all the snapshots after a date."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Sort by given attribute. (This can only be one of SnapshotDateAndTime,UnmanagedSnapshotType,LocalStorage,ArchiveStorage,RetentionSlaDomainName)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "The sort order. Defaults to asc if not specified. (This can only be one of asc,desc)"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of a object."
										}
									]
								},
								"description": "Get summary of all the unmanaged snapshots for the object specified by ID. This endpoint will be removed in CDM v5.3 in favor of `GET /v1/unmanaged_object/{id}/snapshot`."
							},
							"response": [
								{
									"name": "Get page summary about umanaged snapshots for a given object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/unmanaged_object/:id/snapshot?limit=&offset=&search_value=&unmanaged_snapshot_type=&before_date=&after_date=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"unmanaged_object",
												":id",
												"snapshot"
											],
											"query": [
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "search_value",
													"value": ""
												},
												{
													"key": "unmanaged_snapshot_type",
													"value": ""
												},
												{
													"key": "before_date",
													"value": ""
												},
												{
													"key": "after_date",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "(DEPRECATED)Bulk delete specified unmanaged snapshots for the given object. Must specify object type as well.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/unmanaged_object/:id/snapshot/bulk_delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"unmanaged_object",
										":id",
										"snapshot",
										"bulk_delete"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the object."
										}
									]
								},
								"description": "Bulk delete unmanaged snapshots specified by snapshotIds for the given object. API returning success does not gurantee that the snapshot will be expired."
							},
							"response": [
								{
									"name": "OK on success, success doesn't imply all snapshots will be deleted",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/unmanaged_object/:id/snapshot/bulk_delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"unmanaged_object",
												":id",
												"snapshot",
												"bulk_delete"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if delete API fails",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/unmanaged_object/:id/snapshot/bulk_delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"unmanaged_object",
												":id",
												"snapshot",
												"bulk_delete"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "snapshot",
					"item": [
						{
							"name": "Assign on-demand/unmanaged snapshots to a SLA Domain for managing retention synchronously.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/unmanaged_object/snapshot/assign_sla",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"unmanaged_object",
										"snapshot",
										"assign_sla"
									]
								},
								"description": "Assign on-demand/unmanaged snapshots to the specified SLA Domain for managing retention."
							},
							"response": [
								{
									"name": "Assigned on-demand/unmanaged snapshots to the specified SLA Domain for retention.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/unmanaged_object/snapshot/assign_sla",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"unmanaged_object",
												"snapshot",
												"assign_sla"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "(DEPRECATED)Bulk delete all unmanaged snapshots for the given objects",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/unmanaged_object/snapshot/bulk_delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"unmanaged_object",
										"snapshot",
										"bulk_delete"
									]
								},
								"description": "Bulk delete all unmanaged snapshots for the objects specified by objectId/objectType pairings. API returning success does not guarantee that the snapshots will be expired"
							},
							"response": [
								{
									"name": "Returned if delete API fails",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/unmanaged_object/snapshot/bulk_delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"unmanaged_object",
												"snapshot",
												"bulk_delete"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK on success, success doesn't imply all snapshots will be deleted",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/unmanaged_object/snapshot/bulk_delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"unmanaged_object",
												"snapshot",
												"bulk_delete"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "(DEPRECATED) Get summary of all the objects with unmanaged snapshots",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/unmanaged_object?limit=&after_id=&search_value=&unmanaged_status=&object_type=&sort_by=&sort_order=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"unmanaged_object"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"description": "Limit the number of matches returned."
								},
								{
									"key": "after_id",
									"value": "",
									"description": "First unmanaged object after which objects should be retrieved"
								},
								{
									"key": "search_value",
									"value": "",
									"description": "Search object by object name."
								},
								{
									"key": "unmanaged_status",
									"value": "",
									"description": "Filter by the type of the object. If not specified, will return all objects. Valid attributes are Protected, Relic and Unprotected (This can only be one of Protected,Relic,Unprotected,ReplicatedRelic,RemoteUnprotected)"
								},
								{
									"key": "object_type",
									"value": "",
									"description": "Filter by the type of the unmanaged object. (This can only be one of VirtualMachine,MssqlDatabase,LinuxFileset,WindowsFileset,ShareFileset,NutanixVirtualMachine,HypervVirtualMachine,ManagedVolume,Ec2Instance,StorageArrayVolumeGroup,VcdVapp,LinuxHost,WindowsHost,OracleDatabase,VolumeGroup,AppBlueprint)"
								},
								{
									"key": "sort_by",
									"value": "",
									"description": "Sort the result by given attribute. (This can only be one of Name,UnmanagedStatus,Location,UnmanagedSnapshotCount,LocalStorage,ArchiveStorage,RetentionSlaDomainName,ObjectType,SnapshotCount,AutoSnapshotCount,ManualSnapshotCount)"
								},
								{
									"key": "sort_order",
									"value": "",
									"description": "The sort order. Defaults to asc if not specified (This can only be one of asc,desc)"
								}
							]
						},
						"description": "Get summary of all the objects with unmanaged snapshots. This endpoint will be removed in CDM v5.3 in favor of `GET /v1/unmanaged_object`."
					},
					"response": [
						{
							"name": "Get page summary about objects with unmanaged snapshots",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/unmanaged_object?limit=&after_id=&search_value=&unmanaged_status=&object_type=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"unmanaged_object"
									],
									"query": [
										{
											"key": "limit",
											"value": ""
										},
										{
											"key": "after_id",
											"value": ""
										},
										{
											"key": "search_value",
											"value": ""
										},
										{
											"key": "unmanaged_status",
											"value": ""
										},
										{
											"key": "object_type",
											"value": ""
										},
										{
											"key": "sort_by",
											"value": ""
										},
										{
											"key": "sort_order",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Assign relic/unmanaged entities to a SLA Domain for managing retention synchronously.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/unmanaged_object/assign_retention_sla",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"unmanaged_object",
								"assign_retention_sla"
							]
						},
						"description": "Assign relic/unmanaged entities to the specified SLA Domain for managing retention. The assignment event runs synchronously."
					},
					"response": [
						{
							"name": "Assigned relic/unmanaged entities to the specified SLA Domain for retention.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/unmanaged_object/assign_retention_sla",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"unmanaged_object",
										"assign_retention_sla"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "authorization",
			"item": [
				{
					"name": "role",
					"item": [
						{
							"name": "Gets the current list of explicit authorizations for the admin role\n",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization/role/admin?principals=&organization_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"role",
										"admin"
									],
									"query": [
										{
											"key": "principals",
											"value": "",
											"description": "(Required) List of principals whose explicit authorizations to get"
										},
										{
											"key": "organization_id",
											"value": "",
											"description": "ID of the organization to query authorizations for. If empty, the organization will be inferred from the session."
										}
									]
								},
								"description": "Gets the current list of explicit authorizations for the admin role\n"
							},
							"response": [
								{
									"name": "Returns the list of explicit authorizations for each specified principal\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/admin?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"admin"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if an invalid ManagedId is given",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/admin?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"admin"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the current list of explicit authorizations for the end_user role\n",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization/role/end_user?principals=&organization_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"role",
										"end_user"
									],
									"query": [
										{
											"key": "principals",
											"value": "",
											"description": "(Required) List of principals whose explicit authorizations to get"
										},
										{
											"key": "organization_id",
											"value": "",
											"description": "ID of the organization to query authorizations for. If empty, the organization will be inferred from the session."
										}
									]
								},
								"description": "Gets the current list of explicit authorizations for the end_user role\n"
							},
							"response": [
								{
									"name": "Returns the list of explicit authorizations for each specified principal\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/end_user?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"end_user"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if an invalid ManagedId is given",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/end_user?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"end_user"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the current list of explicit authorizations for the compliance_officer role\n",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization/role/compliance_officer?principals=&organization_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"role",
										"compliance_officer"
									],
									"query": [
										{
											"key": "principals",
											"value": "",
											"description": "(Required) List of principals whose explicit authorizations to get"
										},
										{
											"key": "organization_id",
											"value": "",
											"description": "ID of the organization to query authorizations for. If empty, the organization will be inferred from the session."
										}
									]
								},
								"description": "Gets the current list of explicit authorizations for the compliance_officer role\n"
							},
							"response": [
								{
									"name": "Returns the list of explicit authorizations for each specified principal\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/compliance_officer?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"compliance_officer"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if an invalid ManagedId is given",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/compliance_officer?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"compliance_officer"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the current list of explicit authorizations for the infra_admin role\n",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization/role/infra_admin?principals=&organization_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"role",
										"infra_admin"
									],
									"query": [
										{
											"key": "principals",
											"value": "",
											"description": "(Required) List of principals whose explicit authorizations to get"
										},
										{
											"key": "organization_id",
											"value": "",
											"description": "ID of the organization to query authorizations for. If empty, the organization will be inferred from the session."
										}
									]
								},
								"description": "Gets the current list of explicit authorizations for the infra_admin role\n"
							},
							"response": [
								{
									"name": "Returned if an invalid ManagedId is given",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/infra_admin?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"infra_admin"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns the list of explicit authorizations for each specified principal\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/infra_admin?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"infra_admin"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the current list of explicit authorizations for the read_only_admin role\n",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization/role/read_only_admin?principals=&organization_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"role",
										"read_only_admin"
									],
									"query": [
										{
											"key": "principals",
											"value": "",
											"description": "(Required) List of principals whose explicit authorizations to get"
										},
										{
											"key": "organization_id",
											"value": "",
											"description": "ID of the organization to query authorizations for. If empty, the organization will be inferred from the session."
										}
									]
								},
								"description": "Gets the current list of explicit authorizations for the read_only_admin role\n"
							},
							"response": [
								{
									"name": "Returned if an invalid ManagedId is given",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/read_only_admin?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"read_only_admin"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns the list of explicit authorizations for each specified principal\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/read_only_admin?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"read_only_admin"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the current list of explicit authorizations for the organization role\n",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization/role/organization?principals=&organization_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"role",
										"organization"
									],
									"query": [
										{
											"key": "principals",
											"value": "",
											"description": "(Required) List of principals whose explicit authorizations to get"
										},
										{
											"key": "organization_id",
											"value": "",
											"description": "ID of the organization to query authorizations for. If empty, the organization will be inferred from the session."
										}
									]
								},
								"description": "Gets the current list of explicit authorizations for the organization role\n"
							},
							"response": [
								{
									"name": "Returned if an invalid ManagedId is given",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/organization?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"organization"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns the list of explicit authorizations for each specified principal\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/organization?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"organization"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the current list of explicit authorizations for the managed_volume_admin role\n",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization/role/managed_volume_admin?principals=&organization_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"role",
										"managed_volume_admin"
									],
									"query": [
										{
											"key": "principals",
											"value": "",
											"description": "(Required) List of principals whose explicit authorizations to get"
										},
										{
											"key": "organization_id",
											"value": "",
											"description": "ID of the organization to query authorizations for. If empty, the organization will be inferred from the session."
										}
									]
								},
								"description": "Gets the current list of explicit authorizations for the managed_volume_admin role\n"
							},
							"response": [
								{
									"name": "Returns the list of explicit authorizations for each specified principal\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/managed_volume_admin?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"managed_volume_admin"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if an invalid ManagedId is given",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/managed_volume_admin?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"managed_volume_admin"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the current list of explicit authorizations for the org_admin role\n",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization/role/org_admin?principals=&organization_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"role",
										"org_admin"
									],
									"query": [
										{
											"key": "principals",
											"value": "",
											"description": "(Required) List of principals whose explicit authorizations to get"
										},
										{
											"key": "organization_id",
											"value": "",
											"description": "ID of the organization to query authorizations for. If empty, the organization will be inferred from the session."
										}
									]
								},
								"description": "Gets the current list of explicit authorizations for the org_admin role\n"
							},
							"response": [
								{
									"name": "Returns the list of explicit authorizations for each specified principal\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/org_admin?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"org_admin"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if an invalid ManagedId is given",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/org_admin?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"org_admin"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the current list of explicit authorizations for the managed_volume_user role\n",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization/role/managed_volume_user?principals=&organization_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"role",
										"managed_volume_user"
									],
									"query": [
										{
											"key": "principals",
											"value": "",
											"description": "(Required) List of principals whose explicit authorizations to get"
										},
										{
											"key": "organization_id",
											"value": "",
											"description": "ID of the organization to query authorizations for. If empty, the organization will be inferred from the session."
										}
									]
								},
								"description": "Gets the current list of explicit authorizations for the managed_volume_user role\n"
							},
							"response": [
								{
									"name": "Returns the list of explicit authorizations for each specified principal\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/managed_volume_user?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"managed_volume_user"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if an invalid ManagedId is given",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/role/managed_volume_user?principals=&organization_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"role",
												"managed_volume_user"
											],
											"query": [
												{
													"key": "principals",
													"value": ""
												},
												{
													"key": "organization_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "effective",
					"item": [
						{
							"name": "Queries the current effective authorizations on the specified resources.\n",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization/effective/for_resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"effective",
										"for_resources"
									]
								},
								"description": "Queries the current principal's desired authorizations on the specified resources.\n"
							},
							"response": [
								{
									"name": "The list of effective authorizations for the desired principal on the specified resources.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/effective/for_resources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"effective",
												"for_resources"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if an invalid ManagedId is given.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/effective/for_resources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"effective",
												"for_resources"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Queries the current effective authorizations by role",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization/effective/roles?principal=&resource_types=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"effective",
										"roles"
									],
									"query": [
										{
											"key": "principal",
											"value": "",
											"description": "Optional principal whose authorizations to query; if not specified, the current authenticated user will be used.\n"
										},
										{
											"key": "resource_types",
											"value": "",
											"description": "Optional comma-separated list of resource types. If specified, only those roles and privileges are returned for which the principal has an authorization for at least one of the types in the list. Accepted values are:\n"
										}
									]
								},
								"description": "Queries the current effective authorizations by role."
							},
							"response": [
								{
									"name": "The list of roles and privileges for which the desired principal has effective authorizations.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/effective/roles?principal=&resource_types=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"effective",
												"roles"
											],
											"query": [
												{
													"key": "principal",
													"value": ""
												},
												{
													"key": "resource_types",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if an invalid ManagedId is given.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authorization/effective/roles?principal=&resource_types=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"effective",
												"roles"
											],
											"query": [
												{
													"key": "principal",
													"value": ""
												},
												{
													"key": "resource_types",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Queries the current list of explicit authorizations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authorization?principals=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization"
							],
							"query": [
								{
									"key": "principals",
									"value": "",
									"description": "(Required) List of principals whose authorizations to query."
								}
							]
						},
						"description": "Queries the current list of explicit authorizations by principal.\n"
					},
					"response": [
						{
							"name": "Returned if an invalid ManagedId is given.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization?principals=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization"
									],
									"query": [
										{
											"key": "principals",
											"value": ""
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returns the list of explicit authorizations for each specified principal.\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorization?principals=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization"
									],
									"query": [
										{
											"key": "principals",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "fileset template/bulk",
			"item": [
				{
					"name": "Create fileset templates.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/fileset_template/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"fileset_template",
								"bulk"
							]
						},
						"description": "Create fileset templates. The template is applied to the host.  Each template is a set of paths on the host.\n\nA template uses full paths and wildcards to define the objects to include, exclude, and exempt from exclusion.\n\nThe **_exceptions_** value specifies paths that should not be excluded from the fileset by the **_exclude_** value.\n\nSpecify an array of full path descriptions for each property **_include_**, **_exclude_**, and **_exceptions_**.\n\nAcceptable wildcard characters are\n+ **_\\*_** Single asterisk matches zero or more characters up to a path deliminator\n+ **_\\*\\*_** Double asterisk matches zero or more characters\n\nThe following rules apply to path descriptions\n+ Accepts UTF-8 characters\n+ Case sensitive\n+ Forward slash character **_/_** is the path deliminator\n+ Symbolic links must point to a subset of a non symbolic link path\n+ Paths that do not start with **_/_** are modified to start with **_\\*\\*/_**\n+ Paths that do not end with **_\\*_** are modified to end with **_/\\*\\*_**"
					},
					"response": [
						{
							"name": "Summary information for the created fileset templates.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fileset_template/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fileset_template",
										"bulk"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete fileset templates.",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/fileset_template/bulk?ids=&preserve_snapshots=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"fileset_template",
								"bulk"
							],
							"query": [
								{
									"key": "ids",
									"value": "",
									"description": "(Required) Provide an array with the ID of each fileset template to remove."
								},
								{
									"key": "preserve_snapshots",
									"value": "",
									"description": "Flag to indicate whether to convert snapshots of filesets of the deleted templates to relics or to delete them. Applies to all templates being deleted. Default is true."
								}
							]
						},
						"description": "Deletes specfied fileset templates. Detaches and retains all associated filesets as independent filesets with the existing values."
					},
					"response": [
						{
							"name": "Successfully removed all specified fileset templates.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fileset_template/bulk?ids=&preserve_snapshots=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fileset_template",
										"bulk"
									],
									"query": [
										{
											"key": "ids",
											"value": ""
										},
										{
											"key": "preserve_snapshots",
											"value": ""
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Fileset template deletion failed for at least one fileset template.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fileset_template/bulk?ids=&preserve_snapshots=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fileset_template",
										"bulk"
									],
									"query": [
										{
											"key": "ids",
											"value": ""
										},
										{
											"key": "preserve_snapshots",
											"value": ""
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Modify fileset templates.",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/fileset_template/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"fileset_template",
								"bulk"
							]
						},
						"description": "Modify the values of specified fileset templates."
					},
					"response": [
						{
							"name": "Detailed information for modified fileset templates.",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fileset_template/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fileset_template",
										"bulk"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "oracle",
			"item": [
				{
					"name": "host",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Oracle Host information",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/host/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"host",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an Oracle Host object."
												}
											]
										},
										"description": "Retrieve detailed information for a specified Oracle Host object."
									},
									"response": [
										{
											"name": "Successful query results",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/host/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"host",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update an Oracle Host",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/host/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"host",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an Oracle Host object."
												}
											]
										},
										"description": "Update properties of an Oracle Host object."
									},
									"response": [
										{
											"name": "Successfully updated an Oracle Host object",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/host/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"host",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get summary information for Oracle Host",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oracle/host?name=&sla_assignment=&primary_cluster_id=&limit=&offset=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oracle",
										"host"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter a response by making an infix comparison of the Oracle Host name in the response with the specified value."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Limit a response to the results that have the specified SLA Domain assignment type. (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Limit a response to the results that have the specified primary cluster value."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the summary information to a specified maximum number of matches. Optionally, use with offset to start the count at a specified point. Optionally, use with sort_by to perform sort on given attributes. Include sort_order to determine the ascending or descending direction of sort."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Starting position in the list of matches. The response includes the specified numbered entry and all higher numbered entries. Use with limit to retrieve the response as smaller groups of entries, for example for paging of results."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified. (This can only be one of effectiveSlaDomainName,name)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending. (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Retrieve an array containing summary information for the Oracle Host objects on the Rubrik cluster."
							},
							"response": [
								{
									"name": "Successful query results",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/host?name=&sla_assignment=&primary_cluster_id=&limit=&offset=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"host"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "db",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "export",
									"item": [
										{
											"name": "Export an Oracle database.",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id",
														"export"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the database to be exported."
														}
													]
												},
												"description": "Request an asynchronous job to export an Oracle database from a specified snapshot or timestamp."
											},
											"response": [
												{
													"name": "Request status for an async job to export an Oracle database from a specified snapshot or timestamp.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/oracle/db/:id/export",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"oracle",
																"db",
																":id",
																"export"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Export an Oracle tablespace",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id/export/tablespace",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id",
														"export",
														"tablespace"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the database containing the tablespace to export."
														}
													]
												},
												"description": "Request an asynchronous job to export an Oracle tablespace from a specified snapshot or timestamp."
											},
											"response": [
												{
													"name": "Request status for an async job to export an Oracle tablespace from a specified snapshot or timestamp.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/oracle/db/:id/export/tablespace",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"oracle",
																"db",
																":id",
																"export",
																"tablespace"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "snapshot",
									"item": [
										{
											"name": "On-demand backup of an Oracle database.",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to an Oracle database object."
														}
													]
												},
												"description": "Create an asynchronous job for an on-demand snapshot of an Oracle database. The response includes an ID for the asynchronous job request. To see the status of the request, poll /oracle/request/{id}."
											},
											"response": [
												{
													"name": "Request status for an async job to create an on-demand snapshot of an Oracle database",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/oracle/db/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"oracle",
																"db",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Oracle database snapshots.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to an Oracle database object."
														}
													]
												},
												"description": "Delete all snapshots for a specified Oracle database object. For the operation to succeed the referenced database must not be assigned to an SLA Domain."
											},
											"response": [
												{
													"name": "Successfully removed all snapshots for the specified Oracle database",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/oracle/db/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"oracle",
																"db",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get information about Oracle database snapshots.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id/snapshot?after_time=&before_time=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id",
														"snapshot"
													],
													"query": [
														{
															"key": "after_time",
															"value": "",
															"description": "Filter the matches in the response to include only the snapshots taken on or after the time specified by a date-time string. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
														},
														{
															"key": "before_time",
															"value": "",
															"description": "Filter the matches in the response to include only the snapshots taken on or after the time specified by a date-time string. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to an Oracle database object."
														}
													]
												},
												"description": "Retrieve summary information about the snapshots of a specified Oracle database object."
											},
											"response": [
												{
													"name": "Results from a database snapshots query.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/oracle/db/:id/snapshot?after_time=&before_time=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"oracle",
																"db",
																":id",
																"snapshot"
															],
															"query": [
																{
																	"key": "after_time",
																	"value": ""
																},
																{
																	"key": "before_time",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get Oracle database information",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an Oracle database object."
												}
											]
										},
										"description": "Retrieve detailed information for a specified Oracle database object."
									},
									"response": [
										{
											"name": "Successful query results",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update an Oracle database",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an Oracle database object."
												}
											]
										},
										"description": "Update properties of an Oracle database object."
									},
									"response": [
										{
											"name": "Successfully updated an Oracle database object",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get missed recoverable ranges of a Oracle database",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/:id/missed_recoverable_range?after_time=&before_time=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												":id",
												"missed_recoverable_range"
											],
											"query": [
												{
													"key": "after_time",
													"value": "",
													"description": "Filter the missed ranges to end after this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
												},
												{
													"key": "before_time",
													"value": "",
													"description": "Filter the missed ranges to start before this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Oracle database."
												}
											]
										},
										"description": "Retrieve a list of missed recoverable ranges for a Oracle database. For each run of one type of error, the first and last occurrence of the error are given."
									},
									"response": [
										{
											"name": "Returns the missed recoverable ranges for the Oracle database.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id/missed_recoverable_range?after_time=&before_time=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id",
														"missed_recoverable_range"
													],
													"query": [
														{
															"key": "after_time",
															"value": ""
														},
														{
															"key": "before_time",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Live Mount an Oracle database snapshot",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/:id/mount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												":id",
												"mount"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Oracle database"
												}
											]
										},
										"description": "Create an asynchronous job to Live Mount an Oracle database from a snapshot."
									},
									"response": [
										{
											"name": "Request status for an async job to Live Mount an Oracle database snapshot",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id/mount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id",
														"mount"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Instant recovery of a database.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/:id/recover",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												":id",
												"recover"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Oracle database"
												}
											]
										},
										"description": "Creates an instant recover request that restores a target database from the given snapshot."
									},
									"response": [
										{
											"name": "Status for the instant recover request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id/recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id",
														"recover"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "On-demand log backup for an Oracle database log.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/:id/log_backup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												":id",
												"log_backup"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an Oracle database object."
												}
											]
										},
										"description": "Create an asynchronous job for an on-demand backup of an Oracle database log. The response includes an ID for the asynchronous job request.  To see the status of the request, poll /oracle/request/{id}."
									},
									"response": [
										{
											"name": "Request status for an async job to create an on-demand backup of an Oracle database log",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id/log_backup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id",
														"log_backup"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get recoverable ranges of a Oracle database",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/:id/recoverable_range?after_time=&before_time=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												":id",
												"recoverable_range"
											],
											"query": [
												{
													"key": "after_time",
													"value": "",
													"description": "Filter ranges to end after this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678Z\"."
												},
												{
													"key": "before_time",
													"value": "",
													"description": "Filter ranges to start before this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Oracle database."
												}
											]
										},
										"description": "Retrieve the recoverable ranges for a specified Oracle database. A begin and/or end timestamp can be provided to retrieve only the ranges that fall within the window."
									},
									"response": [
										{
											"name": "Returns the recoverable ranges for the Oracle database.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id/recoverable_range?after_time=&before_time=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id",
														"recoverable_range"
													],
													"query": [
														{
															"key": "after_time",
															"value": ""
														},
														{
															"key": "before_time",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get missed snapshots for an Oracle database.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/:id/missed_snapshot?after_time=&before_time=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												":id",
												"missed_snapshot"
											],
											"query": [
												{
													"key": "after_time",
													"value": "",
													"description": "Filter the matches in the response to include only the snapshots taken on or after the time specified by a date-time string. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
												},
												{
													"key": "before_time",
													"value": "",
													"description": "Filter the matches in the response to include only the snapshots taken on or after the time specified by a date-time string. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an Oracle database object."
												}
											]
										},
										"description": "Retrieve summary information about the missed snapshots of an Oracle database."
									},
									"response": [
										{
											"name": "Information about missed snapshots for an Oracle database.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/:id/missed_snapshot?after_time=&before_time=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														":id",
														"missed_snapshot"
													],
													"query": [
														{
															"key": "after_time",
															"value": ""
														},
														{
															"key": "before_time",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "snapshot/{id}",
							"item": [
								{
									"name": "Delete a particular Oracle database snapshot.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/snapshot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												"snapshot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an Oracle database snapshot."
												}
											]
										},
										"description": "Given a particular snapshot id, delete the corresponding Oracle database snapshot."
									},
									"response": [
										{
											"name": "Successfully deleted the specified Oracle database snapshot and there is nothing to return.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/snapshot/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														"snapshot",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get information about a Oracle database snapshot.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/snapshot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												"snapshot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an Oracle database snapshot."
												}
											]
										},
										"description": "Retrieve detailed information about a specified Oracle database snapshot."
									},
									"response": [
										{
											"name": "Returns details about a specified Oracle database snapshot.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/snapshot/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														"snapshot",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "mount",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Delete an Oracle database Live Mount.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/mount/:id?force=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														"mount",
														":id"
													],
													"query": [
														{
															"key": "force",
															"value": "",
															"description": "Force unmount to remove metadata for the Live Mount of an Oracle database snapshot, even when the database cannot be contacted. Default value is 'false'."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Live Mount of an Oracle database snapshot."
														}
													]
												},
												"description": "Request an asynchronous job to delete a specified Live Mount of an Oracle database snapshot. Poll the job status by using /oracle/request/{id}."
											},
											"response": [
												{
													"name": "Request status for an async job to delete the Live Mount an Oracle database snapshot",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/oracle/db/mount/:id?force=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"oracle",
																"db",
																"mount",
																":id"
															],
															"query": [
																{
																	"key": "force",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get an Oracle database Live Mount",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/mount/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														"mount",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Live Mount of an Oracle database snapshot."
														}
													]
												},
												"description": "Retrieve detailed information about a specified Live Mount of an Oracle database snapshot."
											},
											"response": [
												{
													"name": "Information about a specified Live Mount of an Oracle database snapshot.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/oracle/db/mount/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"oracle",
																"db",
																"mount",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get all Oracle database Live Mounts",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/mount?source_database_id=&source_database_name=&mounted_database_name=&sort_by=&sort_order=&offset=&limit=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												"mount"
											],
											"query": [
												{
													"key": "source_database_id",
													"value": "",
													"description": "Filter the response to include only the Live Mounts for the source Oracle database with the specified ID."
												},
												{
													"key": "source_database_name",
													"value": "",
													"description": "Filter the response by making an infix comparison of the source Oracle database name values in the response with the specified value."
												},
												{
													"key": "mounted_database_name",
													"value": "",
													"description": "Filter the response by making an infix comparison of the Live Mount database name values in the response with the specified value. infix search."
												},
												{
													"key": "sort_by",
													"value": "",
													"description": "Specifies a Live Mount attribute to use in sorting the matches. Performs an ASCII sort of the values in the response using the specified attribute, in the order specified by sort_order. (This can only be one of SourceDatabaseName,MountedDatabaseName,CreationDate)"
												},
												{
													"key": "sort_order",
													"value": "",
													"description": "Sort order, either ascending or descending. Default is 'ascending'. (This can only be one of asc,desc)"
												},
												{
													"key": "offset",
													"value": "",
													"description": "Starting position in the list of matches. The response includes the specified numbered entry and all higher numbered entries. Use with limit to retrieve the response as smaller groups of entries, for example for paging of results."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Limit the summary information to a specified maximum number of matches. Optionally, use with offset to start the count at a specified point. Optionally, use with sort_by to perform sort on given attributes. Include sort_order to determine the ascending or descending direction of sort."
												}
											]
										},
										"description": "Retrieve a list containing summary information about all Oracle database Live Mounts."
									},
									"response": [
										{
											"name": "Summary information for all Live Mounts of Oracle database snapshots",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/db/mount?source_database_id=&source_database_name=&mounted_database_name=&sort_by=&sort_order=&offset=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"db",
														"mount"
													],
													"query": [
														{
															"key": "source_database_id",
															"value": ""
														},
														{
															"key": "source_database_name",
															"value": ""
														},
														{
															"key": "mounted_database_name",
															"value": ""
														},
														{
															"key": "sort_by",
															"value": ""
														},
														{
															"key": "sort_order",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get summary information for Oracle databases",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oracle/db?name=&sla_assignment=&effective_sla_domain_id=&primary_cluster_id=&is_relic=&is_live_mount=&limit=&offset=&sort_by=&sort_order=&include_backup_task_info=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oracle",
										"db"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter a response by making an infix comparison of the database name, SID and tablespaces in the response with the specified value."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Limit a response to the results that have the specified SLA Domain assignment type. (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by effective SLA Domain ID"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Limit a response to the results that have the specified primary cluster value."
										},
										{
											"key": "is_relic",
											"value": "",
											"description": "Limit a response to the results that have the specified isRelic value."
										},
										{
											"key": "is_live_mount",
											"value": "",
											"description": "Limit a response to the results that have the specified isLiveMount value."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the summary information to a specified maximum number of matches. Optionally, use with offset to start the count at a specified point. Optionally, use with sort_by to perform sort on given attributes. Include sort_order to determine the ascending or descending direction of sort."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Starting position in the list of matches. The response includes the specified numbered entry and all higher numbered entries. Use with limit to retrieve the response as smaller groups of entries, for example for paging of results."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified. (This can only be one of effectiveSlaDomainName,name)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending. (This can only be one of asc,desc)"
										},
										{
											"key": "include_backup_task_info",
											"value": "",
											"description": "Include backup task information in response"
										}
									]
								},
								"description": "Retrieve an array containing summary information for the Oracle database objects on the Rubrik cluster."
							},
							"response": [
								{
									"name": "Successful query results",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db?name=&sla_assignment=&effective_sla_domain_id=&primary_cluster_id=&is_relic=&is_live_mount=&limit=&offset=&sort_by=&sort_order=&include_backup_task_info=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "is_relic",
													"value": ""
												},
												{
													"key": "is_live_mount",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "include_backup_task_info",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Download Oracle snapshot from cloud",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oracle/db/download/:snapshot_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oracle",
										"db",
										"download",
										":snapshot_id"
									],
									"variable": [
										{
											"key": "snapshot_id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to an Oracle database snapshot."
										}
									]
								},
								"description": "Create an asynchronous job to download an Oracle database snapshot and associated logs using the snapshot ID. The response includes the ID of the asynchronous job request. To see the status of the request, poll /oracle/request/{id}."
							},
							"response": [
								{
									"name": "Status of an async job request for the download of an Oracle database snapshot.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/db/download/:snapshot_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"db",
												"download",
												":snapshot_id"
											],
											"variable": [
												{
													"key": "snapshot_id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "hierarchy/{id}",
					"item": [
						{
							"name": "Get summary of a hierarchy object",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oracle/hierarchy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oracle",
										"hierarchy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the hierarchy object"
										}
									]
								},
								"description": "Retrieve details for the specified hierarchy object."
							},
							"response": [
								{
									"name": "Details of the hierarchy object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/hierarchy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"hierarchy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of descendant objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oracle/hierarchy/:id/descendants?name=&effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&sla_assignment=&status=&sort_by=&sort_order=&snappable_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oracle",
										"hierarchy",
										":id",
										"descendants"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter a response by making an infix comparison of the Oracle RAC name or standalone host name, names of databases on the RAC or the host, database SIDs and database tablespaces in the response with the specified value."
										},
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain"
										},
										{
											"key": "object_type",
											"value": "",
											"description": "Filter by node object type (This can only be one of AppBlueprint,AwsAccount,CloudCompute,CloudComputeRegion,CloudNativeAuthzRoot,ComputeCluster,DataCenter,DataStore,Ec2Instance,Folder,Hdfs,HostFailoverCluster,HostRoot,HypervAuthzRoot,HypervCluster,HypervScvmm,HypervServer,HypervVirtualMachine,FailoverClusterApp,LinuxFileset,LinuxHost,LinuxHostAuthzRoot,ManagedVolume,ManagedVolumeAuthzRoot,ManagedVolumeRoot,MssqlAuthzRoot,MssqlDatabase,MssqlAvailabilityGroup,MssqlInstance,NasHost,NasHostAuthzRoot,NfsHostShare,NutanixAuthzRoot,NutanixCluster,NutanixVirtualMachine,OracleAuthzRoot,OracleDatabase,OracleHost,OracleRac,OracleRoot,ShareFileset,SlaDomain,SmbHostShare,StorageArray,StorageArrayVolume,StorageArrayVolumeGroup,Storm,User,vCenter,Vcd,VcdAuthzRoot,VcdCatalog,VcdOrg,VcdOrgVdc,VcdVapp,VcdVimServer,VirtualMachine,VmwareAuthzRoot,VmwareHost,VmwareResourcePool,VmwareStoragePolicy,VmwareTag,VmwareTagCategory,WindowsCluster,WindowsFileset,WindowsHost,WindowsHostAuthzRoot,WindowsVolumeGroup)"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "status",
											"value": "",
											"description": "Filter by status"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Attribute to sort the results on (This can only be one of effectiveSlaDomainName,name,descendentCount.cluster,descendentCount.host,descendentCount.db)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										},
										{
											"key": "snappable_status",
											"value": "",
											"description": "Determines whether to fetch Oracle hiererchy objects with additional privilege checks. (This can only be one of Protectable)"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the parent Oracle hierarchy object"
										}
									]
								},
								"description": "Retrieve the list of descendant objects for the specified parent"
							},
							"response": [
								{
									"name": "Summary list of descendant objects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/hierarchy/:id/descendants?name=&effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&sla_assignment=&status=&sort_by=&sort_order=&snappable_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"hierarchy",
												":id",
												"descendants"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "object_type",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "status",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "snappable_status",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of immediate descendant objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oracle/hierarchy/:id/children?name=&effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&sla_assignment=&status=&sort_by=&sort_order=&snappable_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oracle",
										"hierarchy",
										":id",
										"children"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter a response by making an infix comparison of the Oracle RAC name or standalone host name, names of databases on the RAC or the host, database SIDs and database tablespaces in the response with the specified value."
										},
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain"
										},
										{
											"key": "object_type",
											"value": "",
											"description": "Filter by node object type (This can only be one of AppBlueprint,AwsAccount,CloudCompute,CloudComputeRegion,CloudNativeAuthzRoot,ComputeCluster,DataCenter,DataStore,Ec2Instance,Folder,Hdfs,HostFailoverCluster,HostRoot,HypervAuthzRoot,HypervCluster,HypervScvmm,HypervServer,HypervVirtualMachine,FailoverClusterApp,LinuxFileset,LinuxHost,LinuxHostAuthzRoot,ManagedVolume,ManagedVolumeAuthzRoot,ManagedVolumeRoot,MssqlAuthzRoot,MssqlDatabase,MssqlAvailabilityGroup,MssqlInstance,NasHost,NasHostAuthzRoot,NfsHostShare,NutanixAuthzRoot,NutanixCluster,NutanixVirtualMachine,OracleAuthzRoot,OracleDatabase,OracleHost,OracleRac,OracleRoot,ShareFileset,SlaDomain,SmbHostShare,StorageArray,StorageArrayVolume,StorageArrayVolumeGroup,Storm,User,vCenter,Vcd,VcdAuthzRoot,VcdCatalog,VcdOrg,VcdOrgVdc,VcdVapp,VcdVimServer,VirtualMachine,VmwareAuthzRoot,VmwareHost,VmwareResourcePool,VmwareStoragePolicy,VmwareTag,VmwareTagCategory,WindowsCluster,WindowsFileset,WindowsHost,WindowsHostAuthzRoot,WindowsVolumeGroup)"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "status",
											"value": "",
											"description": "Filter by status"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Attribute to sort the results on (This can only be one of effectiveSlaDomainName,name,descendentCount.rac,descendentCount.oracleHost,descendentCount.db)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										},
										{
											"key": "snappable_status",
											"value": "",
											"description": "Determines whether to fetch Oracle hierarchy objects with additional privilege checks. (This can only be one of Protectable)"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the parent Oracle hierarchy object. To get top-level nodes, use **root** as the ID."
										}
									]
								},
								"description": "Retrieve the list of immediate descendant objects for the specified parent"
							},
							"response": [
								{
									"name": "Summary list of descendant objects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/hierarchy/:id/children?name=&effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&sla_assignment=&status=&sort_by=&sort_order=&snappable_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"hierarchy",
												":id",
												"children"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "object_type",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "status",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "snappable_status",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "rac",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Oracle RAC information",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/rac/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"rac",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an Oracle RAC object."
												}
											]
										},
										"description": "Retrieve detailed information for a specified Oracle RAC object."
									},
									"response": [
										{
											"name": "Successful query results",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/rac/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"rac",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update an Oracle RAC",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/rac/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"rac",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an Oracle RAC object."
												}
											]
										},
										"description": "Update properties of an Oracle RAC object."
									},
									"response": [
										{
											"name": "Successfully updated an Oracle RAC object",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/oracle/rac/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oracle",
														"rac",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get summary information for Oracle RAC",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oracle/rac?name=&sla_assignment=&primary_cluster_id=&limit=&offset=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oracle",
										"rac"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filter a response by making an infix comparison of the Oracle RAC name in the response with the specified value."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Limit a response to the results that have the specified SLA Domain assignment type. (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Limit a response to the results that have the specified primary cluster value."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the summary information to a specified maximum number of matches. Optionally, use with offset to start the count at a specified point. Optionally, use with sort_by to perform sort on given attributes. Include sort_order to determine the ascending or descending direction of sort."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Starting position in the list of matches. The response includes the specified numbered entry and all higher numbered entries. Use with limit to retrieve the response as smaller groups of entries, for example for paging of results."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified. (This can only be one of effectiveSlaDomainName,name)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending. (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Retrieve an array containing summary information for the Oracle RAC objects on the Rubrik cluster."
							},
							"response": [
								{
									"name": "Successful query results",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/oracle/rac?name=&sla_assignment=&primary_cluster_id=&limit=&offset=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oracle",
												"rac"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Oracle database async request details.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/oracle/request/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oracle",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the async request job."
								}
							]
						},
						"description": "Retrieve the task object for a specified Oracle database asynchronous request."
					},
					"response": [
						{
							"name": "Oracle database async request details.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/oracle/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oracle",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "cloud on",
			"item": [
				{
					"name": "azure",
					"item": [
						{
							"name": "image",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Delete a given Azure cloud image",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/azure/image/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"azure",
														"image",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the Azure cloud image"
														}
													]
												},
												"description": "Delete a given Azure cloud image."
											},
											"response": [
												{
													"name": "Status for the Azure image deletion request.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/azure/image/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"azure",
																"image",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get details about a given Azure cloud image",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/azure/image/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"azure",
														"image",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the Azure cloud image"
														}
													]
												},
												"description": "Get details about a given Azure cloud image."
											},
											"response": [
												{
													"name": "Returns details about the azure cloud image.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/azure/image/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"azure",
																"image",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Query for a list of a Azure cloud images",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/image?snappable_id=&location_id=&offset=&limit=&snappable_name=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"image"
											],
											"query": [
												{
													"key": "snappable_id",
													"value": "",
													"description": "Filters Azure cloud images by snappable ID"
												},
												{
													"key": "location_id",
													"value": "",
													"description": "Filters Azure cloud images by location ID"
												},
												{
													"key": "offset",
													"value": "",
													"description": "Ignore these many matches in the beginning."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Limit the number of matches returned. Default is to return all available records.\n"
												},
												{
													"key": "snappable_name",
													"value": "",
													"description": "Filters results to images with source snappable names containing the given query.\n"
												},
												{
													"key": "sort_by",
													"value": "",
													"description": "Sort the result by given attribute. (This can only be one of SourceVmName,LocationName,InstanceType,CreatedBy,Status,SnapshotTime,CreationTime)"
												},
												{
													"key": "sort_order",
													"value": "",
													"description": "The sort order. Defaults to asc if not specified (This can only be one of asc,desc)"
												}
											]
										},
										"description": "Query for a list of a Azure cloud images."
									},
									"response": [
										{
											"name": "Returns summary information for all azure cloud images.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/azure/image?snappable_id=&location_id=&offset=&limit=&snappable_name=&sort_by=&sort_order=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"azure",
														"image"
													],
													"query": [
														{
															"key": "snappable_id",
															"value": ""
														},
														{
															"key": "location_id",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														},
														{
															"key": "snappable_name",
															"value": ""
														},
														{
															"key": "sort_by",
															"value": ""
														},
														{
															"key": "sort_order",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "instance",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "cloud vm",
											"item": [
												{
													"name": "Terminate a given Azure cloud instance",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/azure/instance/:id/cloud_vm",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"azure",
																"instance",
																":id",
																"cloud_vm"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of the Azure cloud instance"
																}
															]
														},
														"description": "Terminates a given Azure instance on cloud. The instance status should be STOPPED for the termination to happen.\n"
													},
													"response": [
														{
															"name": "Status for the Azure instance deletion request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/cloud_on/azure/instance/:id/cloud_vm",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"cloud_on",
																		"azure",
																		"instance",
																		":id",
																		"cloud_vm"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Turn on or off a given Azure cloud instance",
													"request": {
														"method": "PATCH",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/azure/instance/:id/cloud_vm",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"azure",
																"instance",
																":id",
																"cloud_vm"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of the Azure cloud instance"
																}
															]
														},
														"description": "Turn on or off a given Azure cloud instance."
													},
													"response": [
														{
															"name": "Returns updated details about the Azure cloud instance.",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/cloud_on/azure/instance/:id/cloud_vm",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"cloud_on",
																		"azure",
																		"instance",
																		":id",
																		"cloud_vm"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get details about a given Azure cloud instance",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/azure/instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"azure",
														"instance",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the Azure cloud instance"
														}
													]
												},
												"description": "Get details about a given Azure cloud instance."
											},
											"response": [
												{
													"name": "Returns details about the Azure cloud instance.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/azure/instance/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"azure",
																"instance",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Remove entry of a given Azure cloud instance",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/azure/instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"azure",
														"instance",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the Azure cloud instance"
														}
													]
												},
												"description": "Remove entry of a given Azure cloud instance. This deletes the instance metadata from Rubrik but doesn't terminate the instance running on cloud. This is an irreversible operation.\n"
											},
											"response": [
												{
													"name": "Successfully stopped managing Azure cloud instance.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/azure/instance/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"azure",
																"instance",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "create an instance on Azure.\n",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/instance",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"instance"
											]
										},
										"description": "Create an instance at a specified location on Azure using a specified snapshot or cloud image. When a cloud image does not exist, one is created to use for the instantiation. For a cloud image, the imageId member is required. For a snapshot, the snapshotId and snappableId members are both required.\n"
									},
									"response": [
										{
											"name": "Status for the instantiation request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/azure/instance",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"azure",
														"instance"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Query for a list of a Azure cloud instances",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/instance?offset=&limit=&snappable_name=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"instance"
											],
											"query": [
												{
													"key": "offset",
													"value": "",
													"description": "Ignore these many matches in the beginning."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Limit the number of matches returned. Default is to return all available records.\n"
												},
												{
													"key": "snappable_name",
													"value": "",
													"description": "Filters results to instances with source snappable names containing the given query.\n"
												},
												{
													"key": "sort_by",
													"value": "",
													"description": "Sort the result by given attribute. (This can only be one of SourceVmName,LocationName,InstanceType,CreatedBy,Status,SnapshotTime,CreationTime)"
												},
												{
													"key": "sort_order",
													"value": "",
													"description": "The sort order. Defaults to asc if not specified (This can only be one of asc,desc)"
												}
											]
										},
										"description": "Query for a list of a Azure cloud instances."
									},
									"response": [
										{
											"name": "Returns summary information for all Azure cloud instances.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/azure/instance?offset=&limit=&snappable_name=&sort_by=&sort_order=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"azure",
														"instance"
													],
													"query": [
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														},
														{
															"key": "snappable_name",
															"value": ""
														},
														{
															"key": "sort_by",
															"value": ""
														},
														{
															"key": "sort_order",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all the storage accounts for an azure resource group",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/azure/storage_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"azure",
										"storage_account"
									]
								},
								"description": "Get all the storage accounts for an azure resource group\n"
							},
							"response": [
								{
									"name": "Returns a list of Azure storage account ID/name pairs. The ID is the unique identifier and the name is the display name.\n",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/storage_account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"storage_account"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get asynchronous request details for Azure-related jobs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/azure/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"azure",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an asynchronous request."
										}
									]
								},
								"description": "Get the details of an asynchronous request that involves Azure"
							},
							"response": [
								{
									"name": "Status of an asynchronous request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get all the subscriptions for an azure tenant",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/azure/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"azure",
										"subscription"
									]
								},
								"description": "Get all the subscriptions for an azure tenant accessible to a particular client app\n"
							},
							"response": [
								{
									"name": "Returns a list of Azure subscription ID/name pairs. The ID is the unique identifier and the name is the display name.\n",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"subscription"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a list of subnets queried by Azure location ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/azure/subnet?data_location_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"azure",
										"subnet"
									],
									"query": [
										{
											"key": "data_location_id",
											"value": "",
											"description": "(Required) data location ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns list of subnet IDs and respective Vnet IDs in Azure",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/subnet?data_location_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"subnet"
											],
											"query": [
												{
													"key": "data_location_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get all the regions in Azure",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/azure/region",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"azure",
										"region"
									]
								},
								"description": "Get all the regions in Azure\n"
							},
							"response": [
								{
									"name": "Returns list of id name pair with each element being azure region. Id is the unique identifier and name is displayable name.\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/region",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"region"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of all resource groups",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/azure/resource_group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"azure",
										"resource_group"
									]
								},
								"description": "Get list of all resource groups associated with given Azure storage account credentials\n"
							},
							"response": [
								{
									"name": "Returns the list of resource groups",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/resource_group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"resource_group"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a list of security group IDs queried by Azure location ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/azure/security_group?data_location_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"azure",
										"security_group"
									],
									"query": [
										{
											"key": "data_location_id",
											"value": "",
											"description": "(Required) Azure data location ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns a list of security group IDs recognizable by Azure",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/security_group?data_location_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"security_group"
											],
											"query": [
												{
													"key": "data_location_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the recommended instance type for a given snapshot",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/azure/recommended_instance_type?snapshot_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"azure",
										"recommended_instance_type"
									],
									"query": [
										{
											"key": "snapshot_id",
											"value": "",
											"description": "(Required) snapshot ID"
										}
									]
								},
								"description": "Get the recommended instance type for a given snapshot"
							},
							"response": [
								{
									"name": "Returns the recommended instance type",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/recommended_instance_type?snapshot_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"recommended_instance_type"
											],
											"query": [
												{
													"key": "snapshot_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of all instance types",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/azure/instance_type_list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"azure",
										"instance_type_list"
									]
								},
								"description": "Get list of all instance types"
							},
							"response": [
								{
									"name": "Returns the list of instance types",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/azure/instance_type_list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"azure",
												"instance_type_list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "validate",
					"item": [
						{
							"name": "Validate a snapshot for incremental conversion.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/validate/cloud_image_conversion?snapshot_id=&snappable_id=&cloud_provider=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"validate",
										"cloud_image_conversion"
									],
									"query": [
										{
											"key": "snapshot_id",
											"value": "",
											"description": "ID of the snapshot to validate."
										},
										{
											"key": "snappable_id",
											"value": "",
											"description": "ID of snappable to validate."
										},
										{
											"key": "cloud_provider",
											"value": "",
											"description": "(Required) Cloud provider (This can only be one of S3,Azure)"
										}
									]
								},
								"description": "Runs validation on a snapshot for conversion, while reading the VM details populated by indexing in database. Can return not-ready response if the snapshot has not been indexed yet. Can be run on both snapshots and snappables, and in case of snappables, the last indexed snapshot is validated.\n"
							},
							"response": [
								{
									"name": "Validation result.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/validate/cloud_image_conversion?snapshot_id=&snappable_id=&cloud_provider=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"validate",
												"cloud_image_conversion"
											],
											"query": [
												{
													"key": "snapshot_id",
													"value": ""
												},
												{
													"key": "snappable_id",
													"value": ""
												},
												{
													"key": "cloud_provider",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validate a snapshot for full conversion/instantiate job.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/validate/instantiate_on_cloud?snapshot_id=&snappable_id=&cloud_provider=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"validate",
										"instantiate_on_cloud"
									],
									"query": [
										{
											"key": "snapshot_id",
											"value": "",
											"description": "ID of the snapshot to validate."
										},
										{
											"key": "snappable_id",
											"value": "",
											"description": "ID of snappable to validate."
										},
										{
											"key": "cloud_provider",
											"value": "",
											"description": "(Required) Cloud provider (This can only be one of S3,Azure)"
										}
									]
								},
								"description": "Runs validation on a snapshot for conversion, while reading the VM details populated by indexing in database. Can return not-ready response if the snapshot has not been indexed yet. Can be run on both snapshots and snappables, and in case of snappables, the last indexed snapshot is validated.\n"
							},
							"response": [
								{
									"name": "Validation result.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/validate/instantiate_on_cloud?snapshot_id=&snappable_id=&cloud_provider=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"validate",
												"instantiate_on_cloud"
											],
											"query": [
												{
													"key": "snapshot_id",
													"value": ""
												},
												{
													"key": "snappable_id",
													"value": ""
												},
												{
													"key": "cloud_provider",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "aws",
					"item": [
						{
							"name": "instance",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "cloud vm",
											"item": [
												{
													"name": "Terminate a given AWS cloud instance",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/aws/instance/:id/cloud_vm",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"aws",
																"instance",
																":id",
																"cloud_vm"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of the AWS cloud instance"
																}
															]
														},
														"description": "Terminates a given AWS instance on cloud. The instance status should be STOPPED for the termination to happen.\n"
													},
													"response": [
														{
															"name": "Status for the AWS instance deletion request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/cloud_on/aws/instance/:id/cloud_vm",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"cloud_on",
																		"aws",
																		"instance",
																		":id",
																		"cloud_vm"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Turn on or off a given AWS cloud instance",
													"request": {
														"method": "PATCH",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/aws/instance/:id/cloud_vm",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"aws",
																"instance",
																":id",
																"cloud_vm"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of the AWS cloud instance"
																}
															]
														},
														"description": "Turn on or off a given AWS cloud instance."
													},
													"response": [
														{
															"name": "Returns updated details about the AWS cloud instance.",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/cloud_on/aws/instance/:id/cloud_vm",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"cloud_on",
																		"aws",
																		"instance",
																		":id",
																		"cloud_vm"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get details about a given AWS cloud instance",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/aws/instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"aws",
														"instance",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the AWS cloud instance"
														}
													]
												},
												"description": "Get details about a given AWS cloud instance."
											},
											"response": [
												{
													"name": "Returns details about the AWS cloud instance.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/aws/instance/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"aws",
																"instance",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Remove entry of a given AWS cloud instance",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/aws/instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"aws",
														"instance",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the AWS cloud instance"
														}
													]
												},
												"description": "Remove entry of a given AWS cloud instance. This deletes the instance metadata from Rubrik but doesn't terminate the instance running on cloud. This is an irreversible operation.\n"
											},
											"response": [
												{
													"name": "Successfully stopped managing AWS cloud instance.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/aws/instance/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"aws",
																"instance",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Create an instance on AWS.\n",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/aws/instance",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"aws",
												"instance"
											]
										},
										"description": "Create an instance at a specified location on AWS using a specified snapshot or cloud image. When a cloud image does not exist, one is created to use for the instantiation. For a cloud image, the imageId member is required. For a snapshot, the snapshotId and snappableId members are both required.\n"
									},
									"response": [
										{
											"name": "Status for the Aws instantiation request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/aws/instance",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"aws",
														"instance"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Query for a list of a AWS cloud instances",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/aws/instance?offset=&limit=&snappable_name=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"aws",
												"instance"
											],
											"query": [
												{
													"key": "offset",
													"value": "",
													"description": "Ignore these many matches in the beginning."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Limit the number of matches returned. Default is to return all available records.\n"
												},
												{
													"key": "snappable_name",
													"value": "",
													"description": "Filters results to instances with source snappable names containing the given query.\n"
												},
												{
													"key": "sort_by",
													"value": "",
													"description": "Sort the result by given attribute. (This can only be one of SourceVmName,LocationName,InstanceType,CreatedBy,Status,SnapshotTime,CreationTime)"
												},
												{
													"key": "sort_order",
													"value": "",
													"description": "The sort order. Defaults to asc if not specified (This can only be one of asc,desc)"
												}
											]
										},
										"description": "Query for a list of a AWS cloud instances."
									},
									"response": [
										{
											"name": "Returns summary information for Aws cloud instances.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/aws/instance?offset=&limit=&snappable_name=&sort_by=&sort_order=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"aws",
														"instance"
													],
													"query": [
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														},
														{
															"key": "snappable_name",
															"value": ""
														},
														{
															"key": "sort_by",
															"value": ""
														},
														{
															"key": "sort_order",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "image",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Delete a given AWS cloud image",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/aws/image/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"aws",
														"image",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the AWS image"
														}
													]
												},
												"description": "Delete a given AWS cloud image."
											},
											"response": [
												{
													"name": "Status for the AWS image deletion request.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/aws/image/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"aws",
																"image",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get details about a given AWS cloud image",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/aws/image/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"aws",
														"image",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the AWS cloud image"
														}
													]
												},
												"description": "Get details about a given AWS cloud image."
											},
											"response": [
												{
													"name": "Returns details about the AWS cloud image.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cloud_on/aws/image/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cloud_on",
																"aws",
																"image",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Query for a list of a AWS cloud images",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/aws/image?snappable_id=&location_id=&offset=&limit=&snappable_name=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"aws",
												"image"
											],
											"query": [
												{
													"key": "snappable_id",
													"value": "",
													"description": "Filters AWS cloud images by snappable ID"
												},
												{
													"key": "location_id",
													"value": "",
													"description": "Filters AWS cloud images by location ID"
												},
												{
													"key": "offset",
													"value": "",
													"description": "Ignore these many matches in the beginning."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Limit the number of matches returned. Default is to return all available records.\n"
												},
												{
													"key": "snappable_name",
													"value": "",
													"description": "Filters results to images with source snappable names containing the given query.\n"
												},
												{
													"key": "sort_by",
													"value": "",
													"description": "Sort the result by given attribute. (This can only be one of SourceVmName,LocationName,InstanceType,CreatedBy,Status,SnapshotTime,CreationTime)"
												},
												{
													"key": "sort_order",
													"value": "",
													"description": "The sort order. Defaults to asc if not specified (This can only be one of asc,desc)"
												}
											]
										},
										"description": "Query for a list of a AWS cloud images."
									},
									"response": [
										{
											"name": "Returns summary information for all AWS cloud images.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cloud_on/aws/image?snappable_id=&location_id=&offset=&limit=&snappable_name=&sort_by=&sort_order=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cloud_on",
														"aws",
														"image"
													],
													"query": [
														{
															"key": "snappable_id",
															"value": ""
														},
														{
															"key": "location_id",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														},
														{
															"key": "snappable_name",
															"value": ""
														},
														{
															"key": "sort_by",
															"value": ""
														},
														{
															"key": "sort_order",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get list of all instance types",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/aws/instance_type_list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"aws",
										"instance_type_list"
									]
								},
								"description": "Get list of all instance types"
							},
							"response": [
								{
									"name": "Returns the list of instance types",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/aws/instance_type_list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"aws",
												"instance_type_list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get asynchronous request details for Aws-related jobs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/aws/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"aws",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an asynchronous request."
										}
									]
								},
								"description": "Get the details of an asynchronous request that involves Aws"
							},
							"response": [
								{
									"name": "Status of an asynchronous request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/aws/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"aws",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the recommended instance type for a given snapshot",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/aws/recommended_instance_type?snapshot_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"aws",
										"recommended_instance_type"
									],
									"query": [
										{
											"key": "snapshot_id",
											"value": "",
											"description": "(Required) snapshot ID"
										}
									]
								},
								"description": "Get the recommended instance type for a given snapshot"
							},
							"response": [
								{
									"name": "Returns the recommended instance type",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/aws/recommended_instance_type?snapshot_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"aws",
												"recommended_instance_type"
											],
											"query": [
												{
													"key": "snapshot_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of security group IDs queried by Aws location and VPC IDs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/aws/security_group?data_location_id=&vpc_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"aws",
										"security_group"
									],
									"query": [
										{
											"key": "data_location_id",
											"value": "",
											"description": "(Required) Aws data location ID"
										},
										{
											"key": "vpc_id",
											"value": "",
											"description": "(Required) VPC ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns a list of security group IDs recognizable by Aws",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/aws/security_group?data_location_id=&vpc_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"aws",
												"security_group"
											],
											"query": [
												{
													"key": "data_location_id",
													"value": ""
												},
												{
													"key": "vpc_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a list of subnets queried by Aws location ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloud_on/aws/subnet?data_location_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloud_on",
										"aws",
										"subnet"
									],
									"query": [
										{
											"key": "data_location_id",
											"value": "",
											"description": "(Required) data location ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns list of subnet IDs and respective VPC IDs in AWS",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cloud_on/aws/subnet?data_location_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloud_on",
												"aws",
												"subnet"
											],
											"query": [
												{
													"key": "data_location_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "volume group",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "snapshot",
							"item": [
								{
									"name": "Create on-demand snapshot for Volume Group",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/:id/snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												":id",
												"snapshot"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Volume Group"
												}
											]
										},
										"description": "Create an on-demand snapshot for the given Volume Group ID"
									},
									"response": [
										{
											"name": "Status for the backup request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete all snapshots of Volume Group",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/:id/snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												":id",
												"snapshot"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Volume Group ID"
												}
											]
										},
										"description": "Delete all snapshots of a Volume Group"
									},
									"response": [
										{
											"name": "Snapshots successfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get list of snapshots of Volume Group",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/:id/snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												":id",
												"snapshot"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Volume Group"
												}
											]
										},
										"description": "Retrieve snapshot details for a Volume Group"
									},
									"response": [
										{
											"name": "Returns summary information for all snapshots.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get Volume Group details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/volume_group/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volume_group",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Volume Group."
										}
									]
								},
								"description": "Detailed view of a Volume Group"
							},
							"response": [
								{
									"name": "Return details about the Volume Group.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Patch Volume Group",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/volume_group/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volume_group",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of Volume Group"
										}
									]
								},
								"description": "Patch Volume Group with specified properties"
							},
							"response": [
								{
									"name": "Return details about Volume Group.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Search for file in Volume Group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/volume_group/:id/search?path=&limit=&cursor=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volume_group",
										":id",
										"search"
									],
									"query": [
										{
											"key": "path",
											"value": "",
											"description": "(Required) The path query. Either path prefix or filename prefix."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Maximum number of entries in the response."
										},
										{
											"key": "cursor",
											"value": "",
											"description": "Pagination cursor returned by the previous request."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Volume Group"
										}
									]
								},
								"description": "Search for a file within the Volume Group. Search via full path prefix or filename prefix."
							},
							"response": [
								{
									"name": "Search results",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/:id/search?path=&limit=&cursor=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												":id",
												"search"
											],
											"query": [
												{
													"key": "path",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "cursor",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get details about missed snapshots for a Volume Group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/volume_group/:id/missed_snapshot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volume_group",
										":id",
										"missed_snapshot"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Volume Group"
										}
									]
								},
								"description": "Retrieve the time of the day when the snapshots were missed specific to a Volume Group."
							},
							"response": [
								{
									"name": "Returns details about missed snapshots for a Volume Group.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/:id/missed_snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												":id",
												"missed_snapshot"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "snapshot",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete Volume Group snapshot",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/snapshot/:id?location=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												"snapshot",
												":id"
											],
											"query": [
												{
													"key": "location",
													"value": "",
													"description": "(Required) Snapshot location to delete. Use **_local_** to delete all local snapshots and **_all_** to delete the snapshot in all locations. (This can only be one of all,local)"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Delete a snapshot by expiring it. A snapshot can only be expired if it is an on-demand snapshot or a snapshot of an unprotected Volume Group."
									},
									"response": [
										{
											"name": "Snapshot successfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/snapshot/:id?location=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														"snapshot",
														":id"
													],
													"query": [
														{
															"key": "location",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Volume Group snapshot details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/snapshot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												"snapshot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Retrieve detailed information about a snapshot."
									},
									"response": [
										{
											"name": "Returns details about a snapshot",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/snapshot/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														"snapshot",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Lists all files in Volume Group snapshot",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/snapshot/:id/browse?path=&offset=&limit=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												"snapshot",
												":id",
												"browse"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) The absolute path of the starting point for the directory listing."
												},
												{
													"key": "offset",
													"value": "",
													"description": "Starting position in the list of path entries contained in the query results, sorted by lexicographical order. The response includes the specified numbered entry and all higher numbered entries."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Maximum number of entries in the response."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Lists all files and directories in a given path"
									},
									"response": [
										{
											"name": "List of files and directories at the specified path.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/snapshot/:id/browse?path=&offset=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														"snapshot",
														":id",
														"browse"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Restore files from the Volume Group snapshot",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/snapshot/:id/restore_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												"snapshot",
												":id",
												"restore_files"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Restore filess to the original Host"
									},
									"response": [
										{
											"name": "Status for the restore request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/snapshot/:id/restore_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														"snapshot",
														":id",
														"restore_files"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download files from Volume Group snapshot",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/snapshot/:id/download_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												"snapshot",
												":id",
												"download_files"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of Snapshot"
												}
											]
										},
										"description": "Create a download files request"
									},
									"response": [
										{
											"name": "Status for the snapshot download request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/snapshot/:id/download_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														"snapshot",
														":id",
														"download_files"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a download from archival request.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/snapshot/:id/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												"snapshot",
												":id",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Download a snapshot from archival."
									},
									"response": [
										{
											"name": "Status for the download request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/snapshot/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														"snapshot",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Initiate a live mount for a given Volume Group snapshot",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/snapshot/:id/mount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												"snapshot",
												":id",
												"mount"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Create a live mount request for a Volume Group snapshot."
									},
									"response": [
										{
											"name": "Status for the mount request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/snapshot/:id/mount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														"snapshot",
														":id",
														"mount"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "mount",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Requst to delete a mount",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/snapshot/mount/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														"snapshot",
														"mount",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the mount to remove"
														}
													]
												},
												"description": "Create a request to delete a mount. If there are volumes mounted on a target host, this will use best-effort to unmount those volumes from the host, and proceed to unmount storage on Rubrik."
											},
											"response": [
												{
													"name": "Status for the unmount request.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/volume_group/snapshot/mount/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"volume_group",
																"snapshot",
																"mount",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get summary information for a mount",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/snapshot/mount/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														"snapshot",
														"mount",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the mount"
														}
													]
												},
												"description": "Retrieve information about a Volume Group mount, such as the addresses of the SMB mounts of each volume, as well as the directory in which they are all mounted"
											},
											"response": [
												{
													"name": "Returns detail information for a specified live mount.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/volume_group/snapshot/mount/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"volume_group",
																"snapshot",
																"mount",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get summary information for all mounts",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/volume_group/snapshot/mount?source_volume_group_id=&source_host_name=&sort_by=&sort_order=&offset=&limit=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"volume_group",
												"snapshot",
												"mount"
											],
											"query": [
												{
													"key": "source_volume_group_id",
													"value": "",
													"description": "Filters mounts by ID of the source Volume Group"
												},
												{
													"key": "source_host_name",
													"value": "",
													"description": "Prefix to filter by source host name"
												},
												{
													"key": "sort_by",
													"value": "",
													"description": "Attribute by which to sort Volume Group snapshot mounts (This can only be one of name,sourceHostName,snapshotDate,mountedDate)"
												},
												{
													"key": "sort_order",
													"value": "",
													"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
												},
												{
													"key": "offset",
													"value": "",
													"description": "Ignore these many matches in the beginning."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Limit the number of matches returned. Default is 25."
												}
											]
										},
										"description": "Retrieve information about every Volume Group mount, such as the snapshot date, as well as which drives we are exposing"
									},
									"response": [
										{
											"name": "Returns summary information for all mounts.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/volume_group/snapshot/mount?source_volume_group_id=&source_host_name=&sort_by=&sort_order=&offset=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"volume_group",
														"snapshot",
														"mount"
													],
													"query": [
														{
															"key": "source_volume_group_id",
															"value": ""
														},
														{
															"key": "source_host_name",
															"value": ""
														},
														{
															"key": "sort_by",
															"value": ""
														},
														{
															"key": "sort_order",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get list of Volume Groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/volume_group?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&is_relic=&name=&sla_assignment=&sort_by=&sort_order=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"volume_group"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "",
									"description": "Filter by ID of effective SLA domain"
								},
								{
									"key": "primary_cluster_id",
									"value": "",
									"description": "Filter by primary cluster ID, or **local**"
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the number of matches returned."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Ignore these many matches in the beginning."
								},
								{
									"key": "is_relic",
									"value": "",
									"description": "Filter by isRelic field of Volume Group. Return both relic and non-relic Volume Groups if this query is not set."
								},
								{
									"key": "name",
									"value": "",
									"description": "Search Volume Groups by name."
								},
								{
									"key": "sla_assignment",
									"value": "",
									"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
								},
								{
									"key": "sort_by",
									"value": "",
									"description": "Attribute to sort the results on (This can only be one of Name,EffectiveSlaName)"
								},
								{
									"key": "sort_order",
									"value": "",
									"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
								}
							]
						},
						"description": "Get summary of all Volume Groups"
					},
					"response": [
						{
							"name": "Get Volume Groups summary list",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/volume_group?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&is_relic=&name=&sla_assignment=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volume_group"
									],
									"query": [
										{
											"key": "effective_sla_domain_id",
											"value": ""
										},
										{
											"key": "primary_cluster_id",
											"value": ""
										},
										{
											"key": "limit",
											"value": ""
										},
										{
											"key": "offset",
											"value": ""
										},
										{
											"key": "is_relic",
											"value": ""
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "sla_assignment",
											"value": ""
										},
										{
											"key": "sort_by",
											"value": ""
										},
										{
											"key": "sort_order",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the host layout of a Volume Group snapshot",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/volume_group/host_layout/:snapshot_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"volume_group",
								"host_layout",
								":snapshot_id"
							],
							"variable": [
								{
									"key": "snapshot_id",
									"value": "schema type not provided",
									"description": "(Required) ID of snapshot"
								}
							]
						},
						"description": "Use a snapshot ID to retrieve the host layout for the source host, including the layout of all disks and all volumes on the host."
					},
					"response": [
						{
							"name": "Returns the host layout of a snapshot.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/volume_group/host_layout/:snapshot_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volume_group",
										"host_layout",
										":snapshot_id"
									],
									"variable": [
										{
											"key": "snapshot_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Volume Group async request details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/volume_group/request/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"volume_group",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the request"
								}
							]
						},
						"description": "Get details about a Volume Group-related async request."
					},
					"response": [
						{
							"name": "Status for the async request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/volume_group/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"volume_group",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "stats",
			"item": [
				{
					"name": "sla domain storage",
					"item": [
						{
							"name": "Get total storage for all the SLA domains",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/sla_domain_storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"sla_domain_storage"
									]
								},
								"description": "Get total storage for all the SLA domains."
							},
							"response": [
								{
									"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/sla_domain_storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"sla_domain_storage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get storage used on cloud for the given SLA domain",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/sla_domain_storage/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"sla_domain_storage",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) SLA Domain ID"
										}
									]
								},
								"description": "Get storage used on cloud for the given SLA domain."
							},
							"response": [
								{
									"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/sla_domain_storage/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"sla_domain_storage",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a timeseries of storage growth for the given SLA domain",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/sla_domain_storage/time_series?id=&range=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"sla_domain_storage",
										"time_series"
									],
									"query": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) SLA Domain ID"
										},
										{
											"key": "range",
											"value": "",
											"description": "Range for timeseries. eg: -1h, -1min, etc. Default value is -1h."
										}
									]
								},
								"description": "Get a timeseries of storage growth timeseries for the given SLA domain."
							},
							"response": [
								{
									"name": "Returns a timeSeries depicting bytes per second.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/sla_domain_storage/time_series?id=&range=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"sla_domain_storage",
												"time_series"
											],
											"query": [
												{
													"key": "id",
													"value": ""
												},
												{
													"key": "range",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "replication",
					"item": [
						{
							"name": "Get the total outgoing bandwidth to the replication clusters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/replication/outgoing/time_series?range=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"replication",
										"outgoing",
										"time_series"
									],
									"query": [
										{
											"key": "range",
											"value": "",
											"description": "Range for timeseries. eg: -1h, -1min, etc. Default value is -1h."
										}
									]
								},
								"description": "Get the total outgoing bandwidth to the replication clusters."
							},
							"response": [
								{
									"name": "TimeSeries depicting bytes per second",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/replication/outgoing/time_series?range=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"replication",
												"outgoing",
												"time_series"
											],
											"query": [
												{
													"key": "range",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a timeseries of total incoming bandwidth from the replication clusters.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/replication/incoming/time_series?range=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"replication",
										"incoming",
										"time_series"
									],
									"query": [
										{
											"key": "range",
											"value": "",
											"description": "Range for timeseries. eg: -1h, -1min, etc. Default value is -1h."
										}
									]
								},
								"description": "Get the total incoming bandwidth from the replication clusters"
							},
							"response": [
								{
									"name": "TimeSeries depicting bytes per second",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/replication/incoming/time_series?range=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"replication",
												"incoming",
												"time_series"
											],
											"query": [
												{
													"key": "range",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "snapshot storage",
					"item": [
						{
							"name": "Get snapshot logical storage",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/snapshot_storage/logical",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"snapshot_storage",
										"logical"
									]
								},
								"description": "Retrieve the amount of logical Rubrik cluster storage used by snapshots."
							},
							"response": [
								{
									"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/snapshot_storage/logical",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"snapshot_storage",
												"logical"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get snapshot physical storage",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/snapshot_storage/physical",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"snapshot_storage",
										"physical"
									]
								},
								"description": "Retrieve the amount of physical Rubrik cluster storage used by snapshots."
							},
							"response": [
								{
									"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/snapshot_storage/physical",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"snapshot_storage",
												"physical"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get live snapshot storage for all snapshots",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/snapshot_storage/live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"snapshot_storage",
										"live"
									]
								},
								"description": "Get live snapshot storage for all snapshots."
							},
							"response": [
								{
									"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/snapshot_storage/live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"snapshot_storage",
												"live"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get snapshot ingested amount",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/snapshot_storage/ingested",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"snapshot_storage",
										"ingested"
									]
								},
								"description": "Retrieve the amount of data ingested by the Rubrik cluster for all snapshots."
							},
							"response": [
								{
									"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/snapshot_storage/ingested",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"snapshot_storage",
												"ingested"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cloud storage",
					"item": [
						{
							"name": "Get snapshot physical cloud storage",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/cloud_storage/physical",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"cloud_storage",
										"physical"
									]
								},
								"description": "Retrieve the amount of physical cloud storage used by all snapshots from the Rubrik cluster."
							},
							"response": [
								{
									"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/cloud_storage/physical",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"cloud_storage",
												"physical"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get snapshot ingested amount for cloud",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/cloud_storage/ingested",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"cloud_storage",
										"ingested"
									]
								},
								"description": "Retrieve the amount of data ingested for all snapshots on the cloud."
							},
							"response": [
								{
									"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/cloud_storage/ingested",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"cloud_storage",
												"ingested"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get snapshot logical cloud storage",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/cloud_storage/logical",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"cloud_storage",
										"logical"
									]
								},
								"description": "Retrieve the amount of logical cloud storage used by all snapshots from the Rubrik cluster."
							},
							"response": [
								{
									"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/stats/cloud_storage/logical",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stats",
												"cloud_storage",
												"logical"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Returns a time series of the total physical storage used",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/total_physical_storage/time_series?range=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"total_physical_storage",
								"time_series"
							],
							"query": [
								{
									"key": "range",
									"value": "",
									"description": "(Required) Specifies the range of the time series as an interval into the past from the present. The format for the interval is -Xu, where X is an integer and u is the unit. Valid units are s, min, h, d, w, mon and y."
								}
							]
						},
						"description": "Returns a time series of the total physical storage used."
					},
					"response": [
						{
							"name": "Returns a time series of the bytes used per day.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/total_physical_storage/time_series?range=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"total_physical_storage",
										"time_series"
									],
									"query": [
										{
											"key": "range",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get storage footprint on rubrik for a given mount",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/per_mount_storage/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"per_mount_storage",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) Mount ID"
								}
							]
						},
						"description": "Get storage footprint on rubrik for a given mount."
					},
					"response": [
						{
							"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/per_mount_storage/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"per_mount_storage",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get protected primary storage",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/protected_primary_storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"protected_primary_storage"
							]
						},
						"description": "Get protected primary storage."
					},
					"response": [
						{
							"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/protected_primary_storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"protected_primary_storage"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the number of days remaining before the system fills up",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/runway_remaining",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"runway_remaining"
							]
						},
						"description": "Returns the estimated number of days before the available system storage is filled."
					},
					"response": [
						{
							"name": "Returns an object with attribute 'days'(Long)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/runway_remaining",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"runway_remaining"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get total storage in cluster",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/total_storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"total_storage"
							]
						},
						"description": "Get total storage in cluster."
					},
					"response": [
						{
							"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/total_storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"total_storage"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get total storage for snappables that have snapshots but are currently not protected",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/unprotected_snappable_storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"unprotected_snappable_storage"
							]
						},
						"description": "Get total storage for snappables that have snapshots but are currently not protected"
					},
					"response": [
						{
							"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/unprotected_snappable_storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"unprotected_snappable_storage"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get timeseries on logical data ingestion",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/logical_ingest/time_series",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"logical_ingest",
								"time_series"
							]
						},
						"description": "Get timeseries on logical data ingestion."
					},
					"response": [
						{
							"name": "Returns a timeSeries depicting bytes per second.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/logical_ingest/time_series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"logical_ingest",
										"time_series"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get compression stats for cross increments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/cross_compression",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"cross_compression"
							]
						},
						"description": "Get compression stats for cross increments."
					},
					"response": [
						{
							"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/cross_compression",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"cross_compression"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the average daily growth of local storage used",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/average_storage_growth_per_day",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"average_storage_growth_per_day"
							]
						},
						"description": "Returns the average daily growth of local storage used."
					},
					"response": [
						{
							"name": "Returns average daily growth in bytes.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/average_storage_growth_per_day",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"average_storage_growth_per_day"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get total storage including local vm storage replicated across targets and also remote vm storage on premise",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/total_replication_storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"total_replication_storage"
							]
						},
						"description": "Get Total storage including local vm storage replicated across targets and also remote vm storage on premise."
					},
					"response": [
						{
							"name": "Returns an object with replication storage stats.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/total_replication_storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"total_replication_storage"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the number of concurent streams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/streams/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"streams",
								"count"
							]
						},
						"description": "Get the number of concurent streams."
					},
					"response": [
						{
							"name": "Returns a total number of concurent streams",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/streams/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"streams",
										"count"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the bandwidth of the archival location",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/archival/bandwidth/time_series?data_location_id=&range=&bandwidth_type=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"archival",
								"bandwidth",
								"time_series"
							],
							"query": [
								{
									"key": "data_location_id",
									"value": "",
									"description": "Data location ID"
								},
								{
									"key": "range",
									"value": "",
									"description": "Range for timeseries. eg: -1h, -1min, etc. Default value is -1h."
								},
								{
									"key": "bandwidth_type",
									"value": "",
									"description": "Bandwidth type for the archival location. (This can only be one of Incoming,Outgoing,All)"
								}
							]
						},
						"description": "Gets the bandwidth of the archival location. If data location ID is not provided, returns the sum over all archival locations."
					},
					"response": [
						{
							"name": "Returns a timeSeries depicting bytes per second",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/archival/bandwidth/time_series?data_location_id=&range=&bandwidth_type=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"archival",
										"bandwidth",
										"time_series"
									],
									"query": [
										{
											"key": "data_location_id",
											"value": ""
										},
										{
											"key": "range",
											"value": ""
										},
										{
											"key": "bandwidth_type",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a timeseries on physical data ingestion per day",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/physical_ingest_per_day/time_series?range=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"physical_ingest_per_day",
								"time_series"
							],
							"query": [
								{
									"key": "range",
									"value": "",
									"description": "Range for timeseries. eg: -1h, -1min, etc. Default value is -1h."
								}
							]
						},
						"description": "Get a timeseries on physical data ingestion per day."
					},
					"response": [
						{
							"name": "Returns a timeSeries depicting bytes per second.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/physical_ingest_per_day/time_series?range=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"physical_ingest_per_day",
										"time_series"
									],
									"query": [
										{
											"key": "range",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get storage information for Rubrik cluster",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/system_storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"system_storage"
							]
						},
						"description": "For a specified Rubrik cluster, retrieve all storage information in the following categories: total storage, used storage, available storage, snapshot storage, Live Mount storage, CDP storage, pending snapshot storage, and miscellaneous storage. Miscellaneous storage indicates the amount of storage reserved by the system and used by background tasks. The information also provides the time that it was last updated."
					},
					"response": [
						{
							"name": "Returns an object with attributes: total(Long), used(Long), available(Long), snapshot(Long), liveMount(Long), pendingSnapshot(Long), cdp(Long), miscellaneous(Long), lastUpdateTime(Date).",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/system_storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"system_storage"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a timeseries of snapshots being ingested at a given time instance",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/snapshot_ingest/time_series",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"snapshot_ingest",
								"time_series"
							]
						},
						"description": "Get a timeseries of snapshots being ingested at a given time instance."
					},
					"response": [
						{
							"name": "Returns a timeSeries depicting bytes per second",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/snapshot_ingest/time_series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"snapshot_ingest",
										"time_series"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get usage details of al data locations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/data_location/usage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"data_location",
								"usage"
							]
						},
						"description": "Get usage details from all data locations"
					},
					"response": [
						{
							"name": "Get a list with data location usage information.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/data_location/usage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"data_location",
										"usage"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get available storage in cluster",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/available_storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"available_storage"
							]
						},
						"description": "Get available storage in cluster."
					},
					"response": [
						{
							"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/available_storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"available_storage"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get timeseries on physical data ingestion",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/physical_ingest/time_series?range=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"physical_ingest",
								"time_series"
							],
							"query": [
								{
									"key": "range",
									"value": "",
									"description": "Range for timeseries. eg: -1h, -1min, etc. Default value is -1h."
								}
							]
						},
						"description": "Get timeseries on physical data ingestion"
					},
					"response": [
						{
							"name": "Returns a timeSeries depicting bytes per second.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/physical_ingest/time_series?range=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"physical_ingest",
										"time_series"
									],
									"query": [
										{
											"key": "range",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get total physical storage being used in the system",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/stats/physical_storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stats",
								"physical_storage"
							]
						},
						"description": "Get total Physical storage being used in the system."
					},
					"response": [
						{
							"name": "Returns an object with attribute: name(String), key(String), value(String), frequencyInMin(Integer), lastUpdateTime(Date)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/stats/physical_storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stats",
										"physical_storage"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "data location",
			"item": [
				{
					"name": "nfs",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN - Tries to clean up the data in the bucket in the NFS spec",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data_location/nfs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_location",
										"nfs"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to clean the buckets. A support token is required for this operation."
							},
							"response": [
								{
									"name": "Returned if bucket was successfully emptied.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/data_location/nfs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data_location",
												"nfs"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Remove all buckets matching given prefix.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data_location/nfs/remove_bucket",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_location",
										"nfs",
										"remove_bucket"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to remove all nfs buckets matching given prefix. Returns a list of buckets successfully removed. A support token is required for this operation."
							},
							"response": [
								{
									"name": "List of buckets removed.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/data_location/nfs/remove_bucket",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data_location",
												"nfs",
												"remove_bucket"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "object store",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN - Tries to clean up the data in the bucket in the ObjectSTore spec.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data_location/object_store",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_location",
										"object_store"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to clean the buckets. A support token is required for this operation."
							},
							"response": [
								{
									"name": "Returned if bucket was successfully emptied.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/data_location/object_store",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data_location",
												"object_store"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Remove all buckets matching given prefix.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data_location/object_store/remove_bucket",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_location",
										"object_store",
										"remove_bucket"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to remove all object store buckets matching given prefix. Returns a list of buckets successfully removed. A support token is required for this operation."
							},
							"response": [
								{
									"name": "List of buckets removed.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/data_location/object_store/remove_bucket",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data_location",
												"object_store",
												"remove_bucket"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Get the details of all one-off delete replication source jobs.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data_location/replication_source/delete_job",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data_location",
								"replication_source",
								"delete_job"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the details of all one-off delete replication source jobs. A support token is required for this operation."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data_location/replication_source/delete_job",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_location",
										"replication_source",
										"delete_job"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Disconnect from a specific data location. Deletes the lock files, encryption files, and all the data.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data_location/teardown",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data_location",
								"teardown"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Disconnect from a specific data location. Deletes the lock files, encryption files and all the data. A support token is required for this operation."
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data_location/teardown",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_location",
										"teardown"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - DataLocationId from which to start the recovery process",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data_location/recover_archived_metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data_location",
								"recover_archived_metadata"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - DataLocationId from which to start the recovery process. A support token is required for this operation."
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data_location/recover_archived_metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data_location",
										"recover_archived_metadata"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "archive",
			"item": [
				{
					"name": "qstar",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get information for a QStar archival location",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/qstar/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"qstar",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a QStar archival location object."
												}
											]
										},
										"description": "Retrieve summary information for a specified QStar archival location."
									},
									"response": [
										{
											"name": "Information about a QStar archival location",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/qstar/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"qstar",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a QStar archival location",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/qstar/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"qstar",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a QStar archival location object."
												}
											]
										},
										"description": "Update the properties of a QStar archival location object."
									},
									"response": [
										{
											"name": "Updated QStar archival location object",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/qstar/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"qstar",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Tries to clean up the data in the bucket in the QStar archival location",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/qstar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"qstar"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to clean the buckets. A support token is required for this operation."
							},
							"response": [
								{
									"name": "Returned if bucket was successfully emptied.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/qstar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"qstar"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add a QStar archival location",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/qstar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"qstar"
									]
								},
								"description": "Add a new QStar archival location object. Initiates an asynchronous job to connect to the archival location."
							},
							"response": [
								{
									"name": "The request ID for an asynchronous request to add a QStar archival location as an owner cluster\n",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/qstar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"qstar"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve an array of QStar archival location objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/qstar",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"qstar"
									]
								},
								"description": "Retrieve an array containing summary information for all QStar archival location objects."
							},
							"response": [
								{
									"name": "Summary information for QStar archival locations",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/qstar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"qstar"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Connect to a QStar archival location as a reader",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/qstar/reader/connect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"qstar",
										"reader",
										"connect"
									]
								},
								"description": "Connect to an existing QStar archival location as a reader. Initiates an asynchronous job to connect to the archival location.\n"
							},
							"response": [
								{
									"name": "The request ID for an asynchronous request to connect to a QStar archival location as a reader cluster\n",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/qstar/reader/connect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"qstar",
												"reader",
												"connect"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Remove all buckets matching given prefix.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/qstar/remove_bucket",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"qstar",
										"remove_bucket"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to remove all QStar buckets matching given prefix. Returns a list of buckets successfully removed. A support token is required for this operation."
							},
							"response": [
								{
									"name": "List of buckets removed.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/qstar/remove_bucket",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"qstar",
												"remove_bucket"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reconnect to a QStar archival location",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/qstar/reconnect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"qstar",
										"reconnect"
									]
								},
								"description": "Reconnect to a specified QStar archival location. Initiates an asynchronous job to connect to the archival location. This operation is deprecated. Use /archive/qstar/reader/connect instead."
							},
							"response": [
								{
									"name": "The request ID for an asynchronous request to connect to a QStar archival location as a reader cluster\n",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/qstar/reconnect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"qstar",
												"reconnect"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "location",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "reader",
									"item": [
										{
											"name": "Take ownership of a reader archival location",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/location/:id/reader/promote?refresh_before_promote=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"location",
														":id",
														"reader",
														"promote"
													],
													"query": [
														{
															"key": "refresh_before_promote",
															"value": "",
															"description": "Boolean value to indicate whether to refresh the archival location before promoting it to an owner location. If not specified, this defaults to true. This should only be set to false if you are certain nothing has changed on the archival location since the last refresh."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to an archival location object."
														}
													]
												},
												"description": "Start an asynchronous job to make the current Rubrik cluster the owner of a reader archival location. After successful completion, the Rubrik cluster that was the previous owner will not have access to the archival location.\n"
											},
											"response": [
												{
													"name": "The request ID for an asynchronous request to take ownership of a specified archival location\n",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/archive/location/:id/reader/promote?refresh_before_promote=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"archive",
																"location",
																":id",
																"reader",
																"promote"
															],
															"query": [
																{
																	"key": "refresh_before_promote",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Refresh archive information",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/location/:id/reader/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"location",
														":id",
														"reader",
														"refresh"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to an archival location object."
														}
													]
												},
												"description": "Update the current Rubrik cluster with information about the changes made to an archival location by the Rubrik cluster that owns the archival location.\n"
											},
											"response": [
												{
													"name": "The request ID for an asynchronous request to refresh archival information.\n",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/archive/location/:id/reader/refresh",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"archive",
																"location",
																":id",
																"reader",
																"refresh"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "owner",
									"item": [
										{
											"name": "Pause archiving",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/location/:id/owner/pause",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"location",
														":id",
														"owner",
														"pause"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to an archival location object."
														}
													]
												},
												"description": "Pause archiving to a specified active archival location of the current Rubrik cluster.\n"
											},
											"response": [
												{
													"name": "Archival location was paused successfully.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/archive/location/:id/owner/pause",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"archive",
																"location",
																":id",
																"owner",
																"pause"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Resume archiving",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/location/:id/owner/resume",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"location",
														":id",
														"owner",
														"resume"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to an archival location object."
														}
													]
												},
												"description": "Resume archiving to a specified archival location of the current Rubrik cluster.\n"
											},
											"response": [
												{
													"name": "Successfully resumed archiving to a previously paused archival location.\n",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/archive/location/:id/owner/resume",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"archive",
																"location",
																":id",
																"owner",
																"resume"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Delete an archival location",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/location/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"location",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an archival location object."
												}
											]
										},
										"description": "Delete the specified archival location. Remove the archival location from the SLA Domains that reference it and expire all snapshots at the archival location.\n"
									},
									"response": [
										{
											"name": "The request ID for an asynchronous request to delete an archival location.\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/location/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"location",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "job",
							"item": [
								{
									"name": "Get details about an archival location reconnect job",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/location/job/reconnect/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"location",
												"job",
												"reconnect",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of Job"
												}
											]
										},
										"description": "Retrieve the following information about job: ID of job, job status, error details, start time of job, end time of job, job type, ID of the node, job progress and location id"
									},
									"response": [
										{
											"name": "Return job details.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/location/job/reconnect/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"location",
														"job",
														"reconnect",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get details about a archival location connect job",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/location/job/connect/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"location",
												"job",
												"connect",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of Job"
												}
											]
										},
										"description": "Retrieve the following information about job: ID of job, job status, error details, start time of job, end time of job, job type, ID of the node, job progress and location id."
									},
									"response": [
										{
											"name": "Return job details.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/location/job/connect/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"location",
														"job",
														"connect",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get summary information for all archival locations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/location?status=&name=&sort_by=&sort_order=&location_type=&show_retention_locked_snapshot_presence=&show_snapshots_legal_hold_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"location"
									],
									"query": [
										{
											"key": "status",
											"value": "",
											"description": "Filters archival locations by status. Accepted values: 'active'"
										},
										{
											"key": "name",
											"value": "",
											"description": "Filters the retrieved list of archival locations by the archival location name."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Specifies the attribute to use when sorting the retrieved list of archival locations. Optionally, use **_sort_order_** to specify whether to sort in ascending(asc) or descending(desc) order (This can only be one of name)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										},
										{
											"key": "location_type",
											"value": "",
											"description": "Filter by location type"
										},
										{
											"key": "show_retention_locked_snapshot_presence",
											"value": "",
											"description": "Flag to retrieve presence of snapshots retained by Retention Lock SLA Domains."
										},
										{
											"key": "show_snapshots_legal_hold_status",
											"value": "",
											"description": "Flag to retrieve presence of snapshots placed under Legal Hold."
										}
									]
								},
								"description": "Retrieve information for all archival locations, including ID, type, status, address, and bucket count."
							},
							"response": [
								{
									"name": "Returns a list of archival locations",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/location?status=&name=&sort_by=&sort_order=&location_type=&show_retention_locked_snapshot_presence=&show_snapshots_legal_hold_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"location"
											],
											"query": [
												{
													"key": "status",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "location_type",
													"value": ""
												},
												{
													"key": "show_retention_locked_snapshot_presence",
													"value": ""
												},
												{
													"key": "show_snapshots_legal_hold_status",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get running connection jobs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/location/connect_job",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"location",
										"connect_job"
									]
								},
								"description": "Retrieve a list of all running connection and reconnection jobs for archival locations. Returns summary information about the archival location and the job."
							},
							"response": [
								{
									"name": "Returns running connection jobs for archival locations..",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/location/connect_job",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"location",
												"connect_job"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "nfs",
					"item": [
						{
							"name": "Add a new NFS archival location",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/nfs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"nfs"
									]
								},
								"description": "Add a new NFS archival location. Initiate an asynchronous job to connect to the archival location target.\n"
							},
							"response": [
								{
									"name": "Returns the job ID for connecting to a new NFS archival location.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/nfs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"nfs"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get NFS archival locations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/nfs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"nfs"
									]
								},
								"description": "Retrieve an array of NFS archival location objects for the cluster.\n"
							},
							"response": [
								{
									"name": "Returns an array of NFS archival location objects.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/nfs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"nfs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update an NFS archival location",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/nfs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"nfs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the archival location."
										}
									]
								},
								"description": "Update the properties of an NFS archival location."
							},
							"response": [
								{
									"name": "Returns the updated NFS location object.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/nfs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"nfs",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Connect to an NFS archival location as a reader",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/nfs/reader/connect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"nfs",
										"reader",
										"connect"
									]
								},
								"description": "Connect the current cluster to an existing NFS archival location as a reader. Initiates an asynchronous job to connect to the archival location.\n"
							},
							"response": [
								{
									"name": "The request ID for an asynchronous request to connect to an NFS archival location as a reader cluster\n",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/nfs/reader/connect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"nfs",
												"reader",
												"connect"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reconnect to a specific NFS archival location",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/nfs/reconnect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"nfs",
										"reconnect"
									]
								},
								"description": "Reconnect to a specific NFS archival location. Initiates an asynchronous job to connect to the archival location. This operation is deprecated. Use /archive/nfs/reader/connect instead.\n"
							},
							"response": [
								{
									"name": "Returns the job instance id of the reconnect job.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/nfs/reconnect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"nfs",
												"reconnect"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "dca",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get information about a specific DCA archival location",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/dca/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"dca",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of a DCA archival location."
												}
											]
										},
										"description": "Get information about a specific DCA archival location."
									},
									"response": [
										{
											"name": "Object containing information about the archival location.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/dca/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"dca",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a DCA archival location",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/dca/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"dca",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the DCA archival location."
												}
											]
										},
										"description": "Update the properties of a DCA archival location."
									},
									"response": [
										{
											"name": "Returns the successfully updated archival location object.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/dca/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"dca",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Add a new DCA archival location",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/dca",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"dca"
									]
								},
								"description": "Add a new DCA archival location. Initiates an asynchronous job to connect to the archival location."
							},
							"response": [
								{
									"name": "Returns the job ID for connecting to a new DCA archival location.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/dca",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"dca"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve an array of DCA archival location objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/dca",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"dca"
									]
								},
								"description": "Returns an array containing DCA archival locations, and information specific to them. DCA is a subset of the normal object storage locations, so these DCA locations will also be returned by the /archive/object_store GET API."
							},
							"response": [
								{
									"name": "Returns list of DCA archival locations.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/dca",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"dca"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Connect to a DCA archival location as a reader",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/dca/reader/connect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"dca",
										"reader",
										"connect"
									]
								},
								"description": "Connect to an existing DCA archival location as a reader. Initiates an asynchronous job to connect to the archival location.\n"
							},
							"response": [
								{
									"name": "The request ID for an asynchronous request to connect to a DCA archival location as a reader cluster\n",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/dca/reader/connect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"dca",
												"reader",
												"connect"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reconnect to a specific DCA archival location",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/dca/reconnect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"dca",
										"reconnect"
									]
								},
								"description": "Reconnect to a specific DCA archival location. Initiates an asynchronous job to connect to the archival location. This operation is deprecated. Use /archive/dca/reader/connect instead."
							},
							"response": [
								{
									"name": "Returns the job instance id for the reconnect job.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/dca/reconnect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"dca",
												"reconnect"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Generate a new private key and return a certificate signing request",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/dca/csr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"dca",
										"csr"
									]
								},
								"description": "Generates a new private key and return base64 encoded PKCS#10 certificate signing request. If there is a pending DCA CSR, this will invalidate it and create a new one."
							},
							"response": [
								{
									"name": "Certificate signing request.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/dca/csr",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"dca",
												"csr"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "object store",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get information about an object storage archival location",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/object_store/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"object_store",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of an archival location that uses the S3 protocol."
												}
											]
										},
										"description": "Get the archival location object for a specific object storage location.\n"
									},
									"response": [
										{
											"name": "Object containing information about the archival location.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/object_store/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"object_store",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update an object storage archival location",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/object_store/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"object_store",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the archival location."
												}
											]
										},
										"description": "Update the properties of an object storage location. To update the bucket count, specify a value equal to or greater than the existing bucket count.\n"
									},
									"response": [
										{
											"name": "Returns the successfully updated archival location object.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/object_store/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"object_store",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Complete or abort an in-progress vault lock operation",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/object_store/:id/glacier_vault_lock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"object_store",
												":id",
												"glacier_vault_lock"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Glacier archival location"
												}
											]
										},
										"description": "Update an existing in-progress vault lock operation on a specific Amazon Glacier archival location, by either completing or aborting the current vault lock.\n"
									},
									"response": [
										{
											"name": "Vault lock operation completed successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/archive/object_store/:id/glacier_vault_lock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"archive",
														"object_store",
														":id",
														"glacier_vault_lock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Add an object storage archival location",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/object_store",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"object_store"
									]
								},
								"description": "Start an asynchronous job to add a new object storage location.\n"
							},
							"response": [
								{
									"name": "Returns the job ID for connecting to a new object storage location.\n",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/object_store",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"object_store"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get object storage archival locations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/object_store",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"object_store"
									]
								},
								"description": "Retrieve an array of archival locations from the Rubrik cluster. The array contains all object storage locations, but does not include NFS and QStar locations.\n"
							},
							"response": [
								{
									"name": "Returns an array of object storage locations.\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/object_store",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"object_store"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Connect to an object storage archival location as reader",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/object_store/reader/connect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"object_store",
										"reader",
										"connect"
									]
								},
								"description": "Connect the current cluster as a reader to an existing object storage location. Initiates an asynchronous job to connect to the archival location.\n"
							},
							"response": [
								{
									"name": "The request ID for an asynchronous request to connect to an object storage archival location as a reader cluster\n",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/object_store/reader/connect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"object_store",
												"reader",
												"connect"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reconnect to a specific object storage archival location",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/archive/object_store/reconnect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"archive",
										"object_store",
										"reconnect"
									]
								},
								"description": "Reconnect to a specific object storage location. Initiates an asynchronous job to connect to the archival location. This operation is deprecated. Use /archive/object_store/reader/connect instead.\n"
							},
							"response": [
								{
									"name": "Returns the job instance id for the reconnect job.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive/object_store/reconnect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive",
												"object_store",
												"reconnect"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "vmware",
			"item": [
				{
					"name": "agent",
					"item": [
						{
							"name": "Get Rubrik Backup Service deployment setting",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/agent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"agent"
									]
								},
								"description": "Retrieve the global setting for automatic deployment of the Rubrik Backup Service to virtual machines."
							},
							"response": [
								{
									"name": "Returned on successful retrieval of deployment setting.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/agent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"agent"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change the Rubrik Backup Service deployment setting",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/agent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"agent"
									]
								},
								"description": "Modify the global setting for automatic deployment of the Rubrik Backup Service to virtual machines."
							},
							"response": [
								{
									"name": "Returned on successful retrieval of deployment setting.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/agent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"agent"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "vm",
					"item": [
						{
							"name": "snapshot",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Restores multiple files/directories from VM snapshot",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vm/snapshot/:id/restore_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vm",
														"snapshot",
														":id",
														"restore_files"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of a snapshot."
														}
													]
												},
												"description": "Create a request to restore multiple file or folder to the source virtual machine."
											},
											"response": [
												{
													"name": "Status of the restore request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vmware/vm/snapshot/:id/restore_files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vmware",
																"vm",
																"snapshot",
																":id",
																"restore_files"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create an export request to standalone esx server",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vm/snapshot/:id/standalone_esx_host_export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vm",
														"snapshot",
														":id",
														"standalone_esx_host_export"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of snapshot"
														}
													]
												},
												"description": "Export snapshot of a vm to stanadlone esx server."
											},
											"response": [
												{
													"name": "Status for the export request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vmware/vm/snapshot/:id/standalone_esx_host_export",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vmware",
																"vm",
																"snapshot",
																":id",
																"standalone_esx_host_export"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Download multiple files and folders",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vm/snapshot/:id/download_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vm",
														"snapshot",
														":id",
														"download_files"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a virtual machine snapshot object."
														}
													]
												},
												"description": "Start an asynchronous job to download multiple files and folders from a specified VMware backup. The response returns an asynchronous request ID. Get the URL for downloading the ZIP file including the specific files/folders by sending a GET request to 'vmware/vm/request/{id}'."
											},
											"response": [
												{
													"name": "Status of request for file and folder download.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vmware/vm/snapshot/:id/download_files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vmware",
																"vm",
																"snapshot",
																":id",
																"download_files"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Attaching disks from a snapshot to an existing virtual machine",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vm/snapshot/:id/mount_disks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vm",
														"snapshot",
														":id",
														"mount_disks"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of a snapshot"
														}
													]
												},
												"description": "Requests a snapshot mount to attach disks to an existing virtual machine."
											},
											"response": [
												{
													"name": "Status of the mount request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vmware/vm/snapshot/:id/mount_disks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vmware",
																"vm",
																"snapshot",
																":id",
																"mount_disks"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "mount",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Get summary information for a live mount",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vmware/vm/snapshot/mount/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vmware",
																"vm",
																"snapshot",
																"mount",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of the live mount"
																}
															]
														},
														"description": "Retrieve the following summary information for a specified live mount: ID, snapshot date, ID of source VM, name of source VM, ID of source host, status of the mount, mount event ID, and unmount event ID."
													},
													"response": [
														{
															"name": "Returns detail information for a specified live mount.",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/vmware/vm/snapshot/mount/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"vmware",
																		"vm",
																		"snapshot",
																		"mount",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Rollback an Instant Recovery",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vmware/vm/snapshot/mount/:id/rollback",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vmware",
																"vm",
																"snapshot",
																"mount",
																":id",
																"rollback"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) ID assigned to a Live Mount object"
																}
															]
														},
														"description": "After an Instant Recovery that used the preserve MOID setting, rollback the datastore used by the recovered virtual machine from the Rubrik cluster to the original datastore."
													},
													"response": [
														{
															"name": "Status of an async request to rollback the datastore used by a recovered virtual machine",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/vmware/vm/snapshot/mount/:id/rollback",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"vmware",
																		"vm",
																		"snapshot",
																		"mount",
																		":id",
																		"rollback"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get summary information for all live mounts",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vm/snapshot/mount?vm_id=&offset=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vm",
														"snapshot",
														"mount"
													],
													"query": [
														{
															"key": "vm_id",
															"value": "",
															"description": "Filters live mounts by VM ID"
														},
														{
															"key": "offset",
															"value": "",
															"description": "Ignore these many matches in the beginning."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Limit the number of matches returned. Default is 25."
														}
													]
												},
												"description": "Retrieve the following information for all live mounts: ID, snapshot date, ID of source VM, name of source VM, ID of source host, status of the mount, mount event ID, and unmount event ID."
											},
											"response": [
												{
													"name": "Returns summary information for all live mounts.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vmware/vm/snapshot/mount?vm_id=&offset=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vmware",
																"vm",
																"snapshot",
																"mount"
															],
															"query": [
																{
																	"key": "vm_id",
																	"value": ""
																},
																{
																	"key": "offset",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get a count of live mounts",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vm/snapshot/mount/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vm",
														"snapshot",
														"mount",
														"count"
													]
												},
												"description": "Retrieve total number of live mounts."
											},
											"response": [
												{
													"name": "Returns total number of live mounts.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vmware/vm/snapshot/mount/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vmware",
																"vm",
																"snapshot",
																"mount",
																"count"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get a count of snapshots",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vm/snapshot/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vm",
												"snapshot",
												"count"
											]
										},
										"description": "Retrieve total number of snapshots."
									},
									"response": [
										{
											"name": "Returns total number of snapshots.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vm/snapshot/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vm",
														"snapshot",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "credential failure",
							"item": [
								{
									"name": "Fetch VMs with authentication failures",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vm/credential_failure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vm",
												"credential_failure"
											]
										},
										"description": "Fetch VMs with authentication failures"
									},
									"response": [
										{
											"name": "Return a list with brief description of virtual machine.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vm/credential_failure",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vm",
														"credential_failure"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Fetch count of VMs with authentication failures",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vm/credential_failure/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vm",
												"credential_failure",
												"count"
											]
										},
										"description": "Fetch count of VMs with authentication failures"
									},
									"response": [
										{
											"name": "Return a count of all credential failure.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vm/credential_failure/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vm",
														"credential_failure",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get a list of all the Virtual Disks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/vm/virtual_disk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"vm",
										"virtual_disk"
									]
								},
								"description": "Get a list of all the Virtual Disks"
							},
							"response": [
								{
									"name": "Return details about all virtual disks",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vm/virtual_disk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vm",
												"virtual_disk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update VMs in bulk",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/vm/update/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"vm",
										"update",
										"bulk"
									]
								},
								"description": "Update VMs with specified properties"
							},
							"response": [
								{
									"name": "TODO",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vm/update/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vm",
												"update",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Count of all the live snapshots of a VM",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/vm/live_snapshot/count/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"vm",
										"live_snapshot",
										"count",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Virtual Machine"
										}
									]
								},
								"description": "Count of all the live snapshots of a VM"
							},
							"response": [
								{
									"name": "Return a count of live snapshot for a vm.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vm/live_snapshot/count/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vm",
												"live_snapshot",
												"count",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Count of all the local non-archived VMs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/vm/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"vm",
										"count"
									]
								},
								"description": "Count of all the local non-archived VMs"
							},
							"response": [
								{
									"name": "Returns a count of all the non-archived VMs",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vm/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vm",
												"count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "config",
					"item": [
						{
							"name": "Get the esxSubnets",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/config/esx_subnets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"config",
										"esx_subnets"
									]
								},
								"description": "Retrieve the preferred subnets to reach ESXi hosts."
							},
							"response": [
								{
									"name": "The preferred subnets to reach to ESX hosts.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/config/esx_subnets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"config",
												"esx_subnets"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set ESXi subnets",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/config/set_esx_subnets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"config",
										"set_esx_subnets"
									]
								},
								"description": "Set the subnets that should be used to reach ESXi hosts."
							},
							"response": [
								{
									"name": "The updated preferred subnets to reach ESX hosts.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/config/set_esx_subnets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"config",
												"set_esx_subnets"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "vcenter",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Tag Categories associated with vCenter",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vcenter/:id/tag_category",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vcenter",
												":id",
												"tag_category"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the vCenter Server"
												}
											]
										},
										"description": "Get a list of tag categories on this vCenter"
									},
									"response": [
										{
											"name": "List of vCenter Tag Categories.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vcenter/:id/tag_category",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vcenter",
														":id",
														"tag_category"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "(DEPRECATED) Refresh single virtual machine metadata in a vCenter",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vcenter/:id/refresh_vm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vcenter",
												":id",
												"refresh_vm"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the vCenter Server"
												}
											]
										},
										"description": "Refresh a single virtual machine metadata in a vCenter. This endpoint will be removed after CDM v5.3 in favor of `POST /v1/vmware/vcenter/{id}/refresh_vm`."
									},
									"response": [
										{
											"name": "The vm metadata is refreshed successfully",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vcenter/:id/refresh_vm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vcenter",
														":id",
														"refresh_vm"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Tags associated with vCenter",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vcenter/:id/tag?category_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vcenter",
												":id",
												"tag"
											],
											"query": [
												{
													"key": "category_id",
													"value": "",
													"description": "ID of the Category to filter the Tags by"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the vCenter Server"
												}
											]
										},
										"description": "Get a list of tags on this vCenter"
									},
									"response": [
										{
											"name": "List of vCenter Tags.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/vcenter/:id/tag?category_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"vcenter",
														":id",
														"tag"
													],
													"query": [
														{
															"key": "category_id",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get Tag Category by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/vcenter/tag_category/:tag_category_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"vcenter",
										"tag_category",
										":tag_category_id"
									],
									"variable": [
										{
											"key": "tag_category_id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Tag Category"
										}
									]
								},
								"description": "Get a Tag Category in a vCenter by its ID"
							},
							"response": [
								{
									"name": "A vCenter Tag Category.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vcenter/tag_category/:tag_category_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vcenter",
												"tag_category",
												":tag_category_id"
											],
											"variable": [
												{
													"key": "tag_category_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Tag by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/vcenter/tag/:tag_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"vcenter",
										"tag",
										":tag_id"
									],
									"variable": [
										{
											"key": "tag_id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Tag"
										}
									]
								},
								"description": "Get a Tag in a vCenter by its ID"
							},
							"response": [
								{
									"name": "A vCenter Tag.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/vcenter/tag/:tag_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"vcenter",
												"tag",
												":tag_id"
											],
											"variable": [
												{
													"key": "tag_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "guest credential",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Remove a specific guest OS credential.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/guest_credential/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"guest_credential",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the guest OS credential to remove."
												}
											]
										},
										"description": "Remove a specific guest OS credential."
									},
									"response": [
										{
											"name": "Successfully removed given guest OS credential.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/guest_credential/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"guest_credential",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get information about a specific guest OS credential.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/guest_credential/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"guest_credential",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the guest OS credential."
												}
											]
										},
										"description": "Get information about a specific guest OS credential."
									},
									"response": [
										{
											"name": "Object for guest OS credential definition.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/guest_credential/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"guest_credential",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a specific guest OS credential",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/guest_credential/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"guest_credential",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the guest OS credential to update."
												}
											]
										},
										"description": "Update the domain, username and password of given guest OS credential."
									},
									"response": [
										{
											"name": "Returns the updated guest OS credential object.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vmware/guest_credential/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vmware",
														"guest_credential",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Create a new guest OS credential",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/guest_credential",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"guest_credential"
									]
								},
								"description": "Create a new guest OS credential"
							},
							"response": [
								{
									"name": "Returns the created guest OS credential object.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/guest_credential",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"guest_credential"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Summary of all guest OS credentials",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/guest_credential",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"guest_credential"
									]
								},
								"description": "Retrieve the ID, domain, username and password for all guest OS credentials."
							},
							"response": [
								{
									"name": "Guest OS credentials",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/guest_credential",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"guest_credential"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "data center",
					"item": [
						{
							"name": "Gets the list of all the data centers.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/data_center?primary_cluster_id=&vcenter_id=&snappable_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"data_center"
									],
									"query": [
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by Primary cluster ID, or local"
										},
										{
											"key": "vcenter_id",
											"value": "",
											"description": "Filter by Vcenter ID"
										},
										{
											"key": "snappable_status",
											"value": "",
											"description": "Determines whether to fetch data centers with additional privilege checks. (This can only be one of Protectable)"
										}
									]
								},
								"description": "Returns the summary of all the data centers."
							},
							"response": [
								{
									"name": "Returns the list of all the data centers",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/data_center?primary_cluster_id=&vcenter_id=&snappable_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"data_center"
											],
											"query": [
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "vcenter_id",
													"value": ""
												},
												{
													"key": "snappable_status",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets details about the specific DataCenter",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/data_center/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"data_center",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the data center that needs to be fetched"
										}
									]
								},
								"description": "Returns details about the specific DataCenter"
							},
							"response": [
								{
									"name": "Returned if data center with given ID cannot be found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/data_center/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"data_center",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns the data center object matching given ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/data_center/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"data_center",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "datastore",
					"item": [
						{
							"name": "Get summaries of all the DataStores",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/datastore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"datastore"
									]
								},
								"description": "Get summaries of all the DataStores"
							},
							"response": [
								{
									"name": "Returns the summaries of DataStores",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/datastore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"datastore"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get details about the specific DataStore",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/datastore/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"datastore",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the DataStore that needs to be fetched"
										}
									]
								},
								"description": "Get details about the specific DataStore"
							},
							"response": [
								{
									"name": "Returns details of the DataStore.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vmware/datastore/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vmware",
												"datastore",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "List ESXi datastores",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vmware/standalone_host/datastore",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vmware",
								"standalone_host",
								"datastore"
							]
						},
						"description": "Retrieve a list of the datastores for a specified ESXi host"
					},
					"response": [
						{
							"name": "Returns a list of all datastore names for host",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vmware/standalone_host/datastore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vmware",
										"standalone_host",
										"datastore"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "mssql",
			"item": [
				{
					"name": "db",
					"item": [
						{
							"name": "bulk",
							"item": [
								{
									"name": "snapshot",
									"item": [
										{
											"name": "Take an on-demand backup of multiple Microsoft SQL databases.",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/db/bulk/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"db",
														"bulk",
														"snapshot"
													]
												},
												"description": "Take an on-demand backup of one or more Microsoft SQL databases. The forceFullSnapshot property can be set to true to force a full snapshot for every database that is specified. Only one snapshot will be taken for each database, even if a database is included multiple times in the fields of the request body. To check the result of the request, poll /mssql/request/{id}."
											},
											"response": [
												{
													"name": "Returns the async request for the initiated on-demand backups.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/mssql/db/bulk/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mssql",
																"db",
																"bulk",
																"snapshot"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get details for an on-demand backup of multiple Microsoft SQL databases.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/db/bulk/snapshot/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"db",
														"bulk",
														"snapshot",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the on-demand backup request."
														}
													]
												},
												"description": "Returns the details for an on-demand backup of multiple Microsoft SQL databases. This only returns details for requests that have successfully finished. To check the status of the request, poll /mssql/request/{id}."
											},
											"response": [
												{
													"name": "Result of the on-demand backup request.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/mssql/db/bulk/snapshot/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mssql",
																"db",
																"bulk",
																"snapshot",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Update multiple Microsoft SQL databases.",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/db/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"db",
												"bulk"
											]
										},
										"description": "Update multiple Microsoft SQL databases with the specified properties"
									},
									"response": [
										{
											"name": "Returns a detailed view of all updated databases.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/db/bulk",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"db",
														"bulk"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get the snappableId for a Microsoft SQL database.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/db/:id/snappable_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"db",
												":id",
												"snappable_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Microsoft SQL database."
												}
											]
										},
										"description": "Returns the snappableId for a Microsoft SQL database."
									},
									"response": [
										{
											"name": "Returns the snappableId.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/db/:id/snappable_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"db",
														":id",
														"snappable_id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get compatible instances for the recovery of a Microsoft SQL database.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/db/:id/compatible_instance?recovery_time=&recovery_type=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"db",
												":id",
												"compatible_instance"
											],
											"query": [
												{
													"key": "recovery_time",
													"value": "",
													"description": "Time to recover to. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678Z\". If this is not specified, the latest recoverable time will be used."
												},
												{
													"key": "recovery_type",
													"value": "",
													"description": "(Required) Recovery type. (This can only be one of Mount,Export,Restore)"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Microsoft SQL database."
												}
											]
										},
										"description": "Returns all compatible instances for export for a given recovery time."
									},
									"response": [
										{
											"name": "Returns summary information for all compatible Microsoft SQL instances for export.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/db/:id/compatible_instance?recovery_time=&recovery_type=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"db",
														":id",
														"compatible_instance"
													],
													"query": [
														{
															"key": "recovery_time",
															"value": ""
														},
														{
															"key": "recovery_type",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a size estimate for a restore or export.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/db/:id/restore_estimate?time=&lsn=&recovery_fork_guid=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"db",
												":id",
												"restore_estimate"
											],
											"query": [
												{
													"key": "time",
													"value": "",
													"description": "Time to recover to, in ISO8601 date-time format, such as \"2016-01-01T01:23:45.678\". Either this or the LSN must be specified."
												},
												{
													"key": "lsn",
													"value": "",
													"description": "LSN to recover to. Either this or time must be specified."
												},
												{
													"key": "recovery_fork_guid",
													"value": "",
													"description": "Recovery fork GUID of LSN to recover to. Has meaning only when lsn is specified."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Microsoft SQL database."
												}
											]
										},
										"description": "Provides an estimate of resources needed for the specified restore or export operation."
									},
									"response": [
										{
											"name": "Returns the esimate for a restore or export to the specified recovery point.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/db/:id/restore_estimate?time=&lsn=&recovery_fork_guid=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"db",
														":id",
														"restore_estimate"
													],
													"query": [
														{
															"key": "time",
															"value": ""
														},
														{
															"key": "lsn",
															"value": ""
														},
														{
															"key": "recovery_fork_guid",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get all database files to be restored.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/db/:id/restore_files?time=&lsn=&recovery_fork_guid=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"db",
												":id",
												"restore_files"
											],
											"query": [
												{
													"key": "time",
													"value": "",
													"description": "Time to recover to, in ISO8601 date-time format, such as \"2016-01-01T01:23:45.678\". Either this or the LSN must be specified."
												},
												{
													"key": "lsn",
													"value": "",
													"description": "LSN to recover to. Either this or time must be specified."
												},
												{
													"key": "recovery_fork_guid",
													"value": "",
													"description": "Recovery fork GUID of LSN to recover to. Has meaning only when lsn is specified."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Microsoft SQL database."
												}
											]
										},
										"description": "Provides a list of database files to be restored for the specified restore or export operation."
									},
									"response": [
										{
											"name": "Database files to be restored.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/db/:id/restore_files?time=&lsn=&recovery_fork_guid=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"db",
														":id",
														"restore_files"
													],
													"query": [
														{
															"key": "time",
															"value": ""
														},
														{
															"key": "lsn",
															"value": ""
														},
														{
															"key": "recovery_fork_guid",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete downloaded recoverable ranges of a Microsoft SQL database.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/db/:id/recoverable_range/download?after_time=&before_time=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"db",
												":id",
												"recoverable_range",
												"download"
											],
											"query": [
												{
													"key": "after_time",
													"value": "",
													"description": "Delete only the downloaded snapshots and logs taken after this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
												},
												{
													"key": "before_time",
													"value": "",
													"description": "Delete only the downloaded snapshots and logs taken before this time. The date-time string should be in ISO8601 format, such as \"2016-01-01T01:23:45.678\"."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Microsoft SQL database."
												}
											]
										},
										"description": "Deletes all local snapshots and logs that have previously been downloaded. A begin and/or end time can be provided to delete only the downloaded snapshots and logs that fall within the window. The time is relative to when the snapshot or log backup was originally taken, not downloaded. Parts of the window may not be deleted if certain log files must be kept to preserve times outside the window. Data is deleted in the background. To check the status of the deletion, poll /mssql/db/recoverable_range/downloaded/{id}."
									},
									"response": [
										{
											"name": "Returns the job ID to check the progress of deleting the downloaded snapshots and logs.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/db/:id/recoverable_range/download?after_time=&before_time=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"db",
														":id",
														"recoverable_range",
														"download"
													],
													"query": [
														{
															"key": "after_time",
															"value": ""
														},
														{
															"key": "before_time",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "defaults",
							"item": [
								{
									"name": "Get the current default properties for Microsoft SQL databases",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/db/defaults",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"db",
												"defaults"
											]
										},
										"description": "The default properties are Log Backup Frequency (in seconds) and CBT status. New databases added to the Rubrik system will be given the log backup frequency value by default. New hosts added to the Rubrik system will be given the CBT status by default."
									},
									"response": [
										{
											"name": "Returns the current default properties.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/db/defaults",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"db",
														"defaults"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update the default properties for Microsoft SQL databases.",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/db/defaults",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"db",
												"defaults"
											]
										},
										"description": "The default properties are Log Backup Frequency (in seconds) and CBT status. New databases added to the Rubrik system will be given the log backup frequency value by default. New hosts added to the Rubrik system will be given the CBT status by default."
									},
									"response": [
										{
											"name": "Returns the updated defaultp properties.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/db/defaults",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"db",
														"defaults"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get the deletion status of downloaded recoverable ranges.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mssql/db/recoverable_range/download/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mssql",
										"db",
										"recoverable_range",
										"download",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) Job ID of the deletion for which to check progress."
										}
									]
								},
								"description": "Get the details of the progress made in deleting recoverable ranges. The recoverable ranges to delete are those specified by the DELETE request to /mssql/db/{id}/recoverable_range/download which yielded the response with the job id."
							},
							"response": [
								{
									"name": "Returns the progress made in deleting the recoverable ranges.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/db/recoverable_range/download/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"db",
												"recoverable_range",
												"download",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a count of Microsoft SQL databases.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mssql/db/count?root_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mssql",
										"db",
										"count"
									],
									"query": [
										{
											"key": "root_id",
											"value": "",
											"description": "Include only instances that belong to this root."
										}
									]
								},
								"description": "Returns a count of Microsoft SQL databases."
							},
							"response": [
								{
									"name": "Returned if the query was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/db/count?root_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"db",
												"count"
											],
											"query": [
												{
													"key": "root_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "availability group",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get detailed information for a Microsoft SQL availability group.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/availability_group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"availability_group",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Microsoft SQL availability group to fetch."
												}
											]
										},
										"description": "Returns a detailed view of a Microsoft SQL availability group."
									},
									"response": [
										{
											"name": "Returned if the query was successful.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/availability_group/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"availability_group",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a Microsoft SQL availability group.",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/availability_group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"availability_group",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Microsoft SQL availability group to update."
												}
											]
										},
										"description": "Update a Microsoft SQL availability group with the specified properties."
									},
									"response": [
										{
											"name": "Returned if the update was successful",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/mssql/availability_group/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mssql",
														"availability_group",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get summary information for Microsoft SQL availability groups.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mssql/availability_group?primary_cluster_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mssql",
										"availability_group"
									],
									"query": [
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster."
										}
									]
								},
								"description": "Returns a list of summary information for Microsoft SQL availability groups."
							},
							"response": [
								{
									"name": "Returned if the query was successful.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mssql/availability_group?primary_cluster_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mssql",
												"availability_group"
											],
											"query": [
												{
													"key": "primary_cluster_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get a count of Microsoft SQL instances.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/mssql/instance/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mssql",
								"instance",
								"count"
							]
						},
						"description": "Returns a count of all Microsoft SQL instances."
					},
					"response": [
						{
							"name": "Returned if the query was successful",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mssql/instance/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mssql",
										"instance",
										"count"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "host",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Register hosts.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										"bulk"
									]
								},
								"description": "Register hosts with Rubrik clusters."
							},
							"response": [
								{
									"name": "Summary information from registration of hosts.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update multiple hosts with properties.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										"bulk"
									]
								},
								"description": "Change the FQDN and IPv4 address that is assigned to a host object. Enable or disable pre-transfer data compression. Enable or disable change block tracking (CBT) for backups of SQL Server databases on Windows hosts. Enable or disable volume filter driver (VFD) for volume backups on Windows hosts."
							},
							"response": [
								{
									"name": "Returns a detailed view of all updated hosts.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Install or uninstall volume filter driver on hosts.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/bulk/volume_filter_driver",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										"bulk",
										"volume_filter_driver"
									]
								},
								"description": "Install or uninstall volume filter driver on given hosts. Upgrades volume filter driver if a older version is present on the host."
							},
							"response": [
								{
									"name": "Installation status response of each host with errors if any.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/bulk/volume_filter_driver",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												"bulk",
												"volume_filter_driver"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "share",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete a network share.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/share/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												"share",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Modify network share with given ID."
												}
											]
										},
										"description": "Delete network by specifying the network share ID."
									},
									"response": [
										{
											"name": "Deleted specified network share.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/host/share/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"host",
														"share",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get detailed information for a network share.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/share/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												"share",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the network share."
												}
											]
										},
										"description": "Retrieve detailed information for a network share."
									},
									"response": [
										{
											"name": "Detailed information for the specified network share.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/host/share/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"host",
														"share",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Modify a network share.",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/share/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												"share",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Modify network share with given ID."
												}
											]
										},
										"description": "Modify a network share object."
									},
									"response": [
										{
											"name": "Summary information for modified network share.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/host/share/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"host",
														"share",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Search for a file within a network share.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/share/:id/search?path=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												"share",
												":id",
												"search"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) The path query. Either path prefix or filename prefix."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the network share to search"
												}
											]
										},
										"description": "Search for a file within a network share. Search via full path prefix or filename prefix."
									},
									"response": [
										{
											"name": "Search results",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/host/share/:id/search?path=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"host",
														"share",
														":id",
														"search"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Add a network share to a host.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/share",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										"share"
									]
								},
								"description": "Add a network share object to a host."
							},
							"response": [
								{
									"name": "Detail information for added network share.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/share",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												"share"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get summary information for network shares.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/share?host_id=&share_type=&primary_cluster_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										"share"
									],
									"query": [
										{
											"key": "host_id",
											"value": "",
											"description": "Filter the summary information based on the host id."
										},
										{
											"key": "share_type",
											"value": "",
											"description": "Filter the summary information based on the share type. (This can only be one of NFS,SMB)"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filters the summary information based on the Rubrik cluster specified by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that is hosting the current REST API session."
										}
									]
								},
								"description": "Retrieve summary information for network shares. Apply filters to refine the returned information."
							},
							"response": [
								{
									"name": "Summary information for network shares.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/share?host_id=&share_type=&primary_cluster_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												"share"
											],
											"query": [
												{
													"key": "host_id",
													"value": ""
												},
												{
													"key": "share_type",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "flag",
							"item": [
								{
									"name": "REQUIRES SUPPORT TOKEN - Get the value for a physical host flag.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/:id/flag?flag=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												":id",
												"flag"
											],
											"query": [
												{
													"key": "flag",
													"value": "",
													"description": "(Required) Flag name."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the registered host."
												}
											]
										},
										"description": "REQUIRES SUPPORT TOKEN - Retrieve physical host agent flag value. Physical host agent flags are defined during compile-time. A support token is required for this operation."
									},
									"response": [
										{
											"name": "Physical host flag and value.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/host/:id/flag?flag=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"host",
														":id",
														"flag"
													],
													"query": [
														{
															"key": "flag",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "REQUIRES SUPPORT TOKEN - Modify physical host agent flags.",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/:id/flag",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												":id",
												"flag"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the registered host."
												}
											]
										},
										"description": "REQUIRES SUPPORT TOKEN - Modify physical host agent flags to new values. Physical host agent flags are defined during compile-time. They can be passed in during agent startup or can be modified dynamically using this endpoint. A support token is required for this operation."
									},
									"response": [
										{
											"name": "Physical host agent flags successfully modified.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/host/:id/flag",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"host",
														":id",
														"flag"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete a registered host asynchronously",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/:id/async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										":id",
										"async"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the host to delete"
										}
									]
								},
								"description": "Delete host asynchronously by specifying the host ID."
							},
							"response": [
								{
									"name": "Async request for deleting the host.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/:id/async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												":id",
												"async"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Fetch host logs from agent into cluster.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/:id/log",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										":id",
										"log"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the registered host."
										}
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Fetch host logs from agent into cluster /sd/scratch directory. A support token is required for this operation."
							},
							"response": [
								{
									"name": "Host logs successfully fetched into cluster.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/:id/log",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												":id",
												"log"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get host availability statuses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/:id/diagnose",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										":id",
										"diagnose"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to the host object"
										}
									]
								},
								"description": "Retrieve the availability status for each host registered with a specified Rubrik CDM instance."
							},
							"response": [
								{
									"name": "Availability information for registered hosts",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/:id/diagnose",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												":id",
												"diagnose"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of volumes on the Volume Group host.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/:id/volume",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										":id",
										"volume"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the host."
										}
									]
								},
								"description": "Get summary of all volumes on the host."
							},
							"response": [
								{
									"name": "Get volume summary from the host.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/:id/volume",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												":id",
												"volume"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "share credential",
					"item": [
						{
							"name": "Add a share credential to a host.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/share_credential",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										"share_credential"
									]
								},
								"description": "Add a share credential object to a host."
							},
							"response": [
								{
									"name": "Summary information for host credential",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/share_credential",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												"share_credential"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get summary information for host credential",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/share_credential?host_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										"share_credential"
									],
									"query": [
										{
											"key": "host_id",
											"value": "",
											"description": "Filter the summary information based on the host id."
										}
									]
								},
								"description": "Retrieve summary information for host credential. Apply filters to refine the returned information."
							},
							"response": [
								{
									"name": "Summary information for host credential",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host/share_credential?host_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host",
												"share_credential"
											],
											"query": [
												{
													"key": "host_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get summary information for hosts with Envoy organization information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/host/envoy?operating_system_type=&primary_cluster_id=&hostname=&sort_by=&sort_order=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"host",
								"envoy"
							],
							"query": [
								{
									"key": "operating_system_type",
									"value": "",
									"description": "Filter the summary information based on the operating system type. Accepted values are 'Windows', 'UnixLike', 'ANY', 'NONE'.\nUse **_NONE_** to only return information for hosts templates that do not have operating system type set.\nUse **_ANY_** to only return information for hosts that have operating system type set. (This can only be one of ANY,NONE,UnixLike,Windows)"
								},
								{
									"key": "primary_cluster_id",
									"value": "",
									"description": "Filters the summary information based on the Rubrik cluster specified by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that is hosting the current REST API session."
								},
								{
									"key": "hostname",
									"value": "",
									"description": "Returns hosts with hostnames that match the provided string in an infix search."
								},
								{
									"key": "sort_by",
									"value": "",
									"description": "Specifies the host attribute to use in sorting the host summary information. Performs an ASCII sort of the summary information using the specified attribute, in the order specified.\nValid attributes are 'hostname' (This can only be one of hostname)"
								},
								{
									"key": "sort_order",
									"value": "",
									"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
								}
							]
						},
						"description": "Retrieve summary information for all hosts that are registered with a Rubrik cluster. Also returns organization information for each host. This information is available if Envoy is enabled on those hosts."
					},
					"response": [
						{
							"name": "Summary and organization information for registered hosts.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/envoy?operating_system_type=&primary_cluster_id=&hostname=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										"envoy"
									],
									"query": [
										{
											"key": "operating_system_type",
											"value": ""
										},
										{
											"key": "primary_cluster_id",
											"value": ""
										},
										{
											"key": "hostname",
											"value": ""
										},
										{
											"key": "sort_by",
											"value": ""
										},
										{
											"key": "sort_order",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Count all hosts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/host/count?operating_system_type=&share_type=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"host",
								"count"
							],
							"query": [
								{
									"key": "operating_system_type",
									"value": "",
									"description": "Filter the summary information based on the operating system type. Values are 'UnixLike', 'Windows', 'ANY', or 'NONE'.\nUse **_ANY_** to return the total number of hosts that have any operating system type set.\nUse **_NONE_** to return the total number of hosts that do not have operating system type set. (This can only be one of UnixLike,Windows,ANY,NONE)"
								},
								{
									"key": "share_type",
									"value": "",
									"description": "Filter the summary information based on the network share type. Values are 'SMB', 'NFS', 'ANY', or 'NONE'.\nUse **_ANY_** to return the total number of hosts that have any network share type set.\nUse **_NONE_** to return the total number of hosts that do not have network share type type set. (This can only be one of SMB,NFS,ANY,NONE)"
								}
							]
						},
						"description": "Retrieve the total number of hosts, and the total number of protected hosts. A protected host has at least one protected fileset."
					},
					"response": [
						{
							"name": "Total number of hosts and total number of protected hosts.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/count?operating_system_type=&share_type=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										"count"
									],
									"query": [
										{
											"key": "operating_system_type",
											"value": ""
										},
										{
											"key": "share_type",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Deregister hosts.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/host/bulk-delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"host",
								"bulk-delete"
							]
						},
						"description": "Deregister specified network hosts from Rubrik clusters."
					},
					"response": [
						{
							"name": "Specified host were successfully deregistered.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/bulk-delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										"bulk-delete"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get host async request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/host/request/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"host",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the request"
								}
							]
						},
						"description": "Get details about a host related async request."
					},
					"response": [
						{
							"name": "Status for the async request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "storage",
			"item": [
				{
					"name": "array volume group",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "snapshot",
									"item": [
										{
											"name": "Initiate an on-demand snapshot for a volume group",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a storage array volume group object."
														}
													]
												},
												"description": "Start an async job to create an on-demand snapshot for a specified storage array volume group."
											},
											"response": [
												{
													"name": "Task object for an async snapshot job.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/storage/array_volume_group/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"storage",
																"array_volume_group",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete volume group snapshots",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a storage array volume group object."
														}
													]
												},
												"description": "Delete all snapshots for a specified volume group."
											},
											"response": [
												{
													"name": "Snapshots successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/storage/array_volume_group/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"storage",
																"array_volume_group",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get list of snapshots of Volume Group",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a storage array volume group object."
														}
													]
												},
												"description": "Retrieve the following information for all snapshots for a Volume Group: ID, snapshot date, expiration date, type of source object, name of Volume Group, type of snapshot, state of the cloud, level of consistency, name of snapshot Volume Group, index state, total number of files, IDs of all replication location, IDs of all archival locations."
											},
											"response": [
												{
													"name": "Returns summary information for all snapshots.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/storage/array_volume_group/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"storage",
																"array_volume_group",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Remove a volume group",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/:id?preserve_snapshots=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												":id"
											],
											"query": [
												{
													"key": "preserve_snapshots",
													"value": "",
													"description": "Flag to indicate whether to preserve snapshots of the storage array volume group or to delete them. Default behavior is to preserve them."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a storage array volume group object."
												}
											]
										},
										"description": "Removes a specified storage array volume group object."
									},
									"response": [
										{
											"name": "Successfully removed a storage array volume group object.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/:id?preserve_snapshots=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														":id"
													],
													"query": [
														{
															"key": "preserve_snapshots",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get volume group details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a storage array volume group object."
												}
											]
										},
										"description": "Retrieve the properties of a specified storage array volume group object."
									},
									"response": [
										{
											"name": "Properties of a storage array volume group object.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a volume group",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a storage array volume group object."
												}
											]
										},
										"description": "Update the properties of a specified volume group object."
									},
									"response": [
										{
											"name": "Updated properties for a storage array volume group object.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Search volume group for a file",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/:id/search?path=&limit=&cursor=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												":id",
												"search"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) Search string that specifies either a prefix portion of the full path for the file or a prefix portion of the name of the file."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Maximum number of entries in the response."
												},
												{
													"key": "cursor",
													"value": "",
													"description": "Pagination cursor returned by the previous request."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a storage array volume group object."
												}
											]
										},
										"description": "Search for a file within a specified storage array volume group. The search string can be a prefix portion of the full path for the file or a prefix portion of the name of the file."
									},
									"response": [
										{
											"name": "File search results.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/:id/search?path=&limit=&cursor=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														":id",
														"search"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														},
														{
															"key": "cursor",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get missed snapshots for volume group",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/:id/missed_snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												":id",
												"missed_snapshot"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a storage array volume group object."
												}
											]
										},
										"description": "Retrieve a list of missed SLA Domain scheduled snapshots for a specified storage array volume group. Each entry includes a timestamp."
									},
									"response": [
										{
											"name": "List of missed SLA Domain scheduled snapshots for a volume group.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/:id/missed_snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														":id",
														"missed_snapshot"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "snapshot/{id}",
							"item": [
								{
									"name": "Delete a volume group snapshot",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id?location=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												"snapshot",
												":id"
											],
											"query": [
												{
													"key": "location",
													"value": "",
													"description": "(Required) Specifies the location of a snapshot. (This can only be one of all,local)"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a snapshot of a storage array volume group."
												}
											]
										},
										"description": "Delete a snapshot of a specified volume group by expiring it. The snapshot cannot be expired unless it is a on-demand snapshot or a snapshot of an unprotected volume group."
									},
									"response": [
										{
											"name": "Snapshot successfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id?location=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														"snapshot",
														":id"
													],
													"query": [
														{
															"key": "location",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get volume group snapshot details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												"snapshot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a snapshot of a storage array volume group."
												}
											]
										},
										"description": "Get details of a specified volume group snapshot."
									},
									"response": [
										{
											"name": "Returns details about a snapshot",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														"snapshot",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download an archival snapshot for a volume group",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												"snapshot",
												":id",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a snapshot of a storage array volume group."
												}
											]
										},
										"description": "Initiate an asynchronous job to download a specified volume group snapshot from an archival location."
									},
									"response": [
										{
											"name": "Status of an asynchronous job for an archival download.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														"snapshot",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Restore files",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id/restore_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												"snapshot",
												":id",
												"restore_files"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a snapshot object."
												}
											]
										},
										"description": "Initiate an asynchronous job to restore files from a snapshot of a storage array volume group to the source location. The call returns a job instance ID."
									},
									"response": [
										{
											"name": "Status of an asynchronous job to restore files.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id/restore_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														"snapshot",
														":id",
														"restore_files"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "List files in volume group snapshot",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id/browse?path=&offset=&limit=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												"snapshot",
												":id",
												"browse"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) The absolute path of the starting point for the directory listing."
												},
												{
													"key": "offset",
													"value": "",
													"description": "Starting position in the list of path entries contained in the query results, sorted by lexicographical order. The response includes the specified numbered entry and all higher numbered entries."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Maximum number of entries in the response."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Lists all files and directories beneath a specified path in a volume group snapshot."
									},
									"response": [
										{
											"name": "List of files and directories at the specified path.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id/browse?path=&offset=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														"snapshot",
														":id",
														"browse"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download files",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id/download_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												"snapshot",
												":id",
												"download_files"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a snapshot of a storage array volume group."
												}
											]
										},
										"description": "Initiate an asynchronous job to download files from a backup of a storage array volume group. Returns a job instance ID. An email notification will be sent out when the download is ready. When the download is ready, the file can be downloaded from the corresponding event which includes the job instance ID as the value of **jobInstanceId**"
									},
									"response": [
										{
											"name": "Status of an asynchronous job for file download from specified volume group snapshot.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id/download_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														"snapshot",
														":id",
														"download_files"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Export Volume group snapshot",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												"snapshot",
												":id",
												"export"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Export snapshot of a volume group."
									},
									"response": [
										{
											"name": "Status for the export request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array_volume_group/snapshot/:id/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array_volume_group",
														"snapshot",
														":id",
														"export"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Add a storage array volume group",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/storage/array_volume_group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"storage",
										"array_volume_group"
									]
								},
								"description": "Create a storage array volume group object."
							},
							"response": [
								{
									"name": "Created a storage array volume group object.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of volume groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/storage/array_volume_group?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&is_relic=&name=&sla_assignment=&storage_array_id=&host_id=&proxy_host_id=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"storage",
										"array_volume_group"
									],
									"query": [
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter the summary information based on the ID of the effective SLA Domain inherited by a volume group. Use UNPROTECTED to only return information for volume groups that do not have an effective SLA Domain. Use PROTECTED to only return information for volume groups that do have an effective SLA Domain."
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter the summary information based on the ID assigned to the primary Rubrik cluster. Use local for the Rubrik cluster that is hosting the current REST API session."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the summary information to a specified maximum number of matches."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Starting position in the list of matched entries contained in the response. The summary information includes the specified numbered entry and all higher numbered entries."
										},
										{
											"key": "is_relic",
											"value": "",
											"description": "Filter the summary information based on the relic status of the volume group. Returns both relic and non-relic volume groups when the parameter is not set."
										},
										{
											"key": "name",
											"value": "",
											"description": "Retrieve volume groups with a name that matches the provided name. The search is performed as a case-insensitive infix search."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter the summary information based on the SLA Domain assignment type. (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "storage_array_id",
											"value": "",
											"description": "Filter the summary information based on the ID assigned to the associated storage array."
										},
										{
											"key": "host_id",
											"value": "",
											"description": "Filter the summary information based on the ID assigned to the associated application host."
										},
										{
											"key": "proxy_host_id",
											"value": "",
											"description": "Filter the summary information based on the ID assigned to the associated proxy host."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Specifies an attribute to use in sorting the volume group summary information. Performs an ASCII sort of the summary information using the specified attribute. Valid attribute values are 'slaDomainName' and 'name'. (This can only be one of slaDomainName,name)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending. (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Retrieve summary information about all storage array volume group objects."
							},
							"response": [
								{
									"name": "Summary information for storage array volume groups",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&is_relic=&name=&sla_assignment=&storage_array_id=&host_id=&proxy_host_id=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "is_relic",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "storage_array_id",
													"value": ""
												},
												{
													"key": "host_id",
													"value": ""
												},
												{
													"key": "proxy_host_id",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get storage array volume gorup request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/storage/array_volume_group/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"storage",
										"array_volume_group",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an asynchronous request for a storage array volume group object."
										}
									]
								},
								"description": "Retrieve the status and details of a specified asynchronous request for a storage array volume gorup object."
							},
							"response": [
								{
									"name": "Status of an asynchronous request for a storage array volume group object.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array_volume_group/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array_volume_group",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "array",
					"item": [
						{
							"name": "volume",
							"item": [
								{
									"name": "Get details for all storage array volumes",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array/volume?storage_array_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array",
												"volume"
											],
											"query": [
												{
													"key": "storage_array_id",
													"value": "",
													"description": "Filter the query results by using the ID assigned to a storage array object."
												}
											]
										},
										"description": "Retrieve the summary details for all storage array volume objects."
									},
									"response": [
										{
											"name": "Summary information for all storage array volumes.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array/volume?storage_array_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array",
														"volume"
													],
													"query": [
														{
															"key": "storage_array_id",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get storage array volume details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array/volume/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array",
												"volume",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a storage array volume object."
												}
											]
										},
										"description": "Retrieve the details for a storage array volume object by using the assigned ID."
									},
									"response": [
										{
											"name": "Details for a specified storage array volume object.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array/volume/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array",
														"volume",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "hierarchy/{id}",
							"item": [
								{
									"name": "Get information for hierarchy object",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array/hierarchy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array",
												"hierarchy",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a storage array hierarchy object."
												}
											]
										},
										"description": "Get information about a specific storage array hierarchy object."
									},
									"response": [
										{
											"name": "Summary information for a storage array hierarchy object.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array/hierarchy/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array",
														"hierarchy",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get list of children",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array/hierarchy/:id/children?effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array",
												"hierarchy",
												":id",
												"children"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": "",
													"description": "Filter by the ID of the effective SLA domain."
												},
												{
													"key": "object_type",
													"value": "",
													"description": "Filter by the object type. (This can only be one of AppBlueprint,AwsAccount,CloudCompute,CloudComputeRegion,CloudNativeAuthzRoot,ComputeCluster,DataCenter,DataStore,Ec2Instance,Folder,Hdfs,HostFailoverCluster,HostRoot,HypervAuthzRoot,HypervCluster,HypervScvmm,HypervServer,HypervVirtualMachine,FailoverClusterApp,LinuxFileset,LinuxHost,LinuxHostAuthzRoot,ManagedVolume,ManagedVolumeAuthzRoot,ManagedVolumeRoot,MssqlAuthzRoot,MssqlDatabase,MssqlAvailabilityGroup,MssqlInstance,NasHost,NasHostAuthzRoot,NfsHostShare,NutanixAuthzRoot,NutanixCluster,NutanixVirtualMachine,OracleAuthzRoot,OracleDatabase,OracleHost,OracleRac,OracleRoot,ShareFileset,SlaDomain,SmbHostShare,StorageArray,StorageArrayVolume,StorageArrayVolumeGroup,Storm,User,vCenter,Vcd,VcdAuthzRoot,VcdCatalog,VcdOrg,VcdOrgVdc,VcdVapp,VcdVimServer,VirtualMachine,VmwareAuthzRoot,VmwareHost,VmwareResourcePool,VmwareStoragePolicy,VmwareTag,VmwareTagCategory,WindowsCluster,WindowsFileset,WindowsHost,WindowsHostAuthzRoot,WindowsVolumeGroup)"
												},
												{
													"key": "primary_cluster_id",
													"value": "",
													"description": "Filter by the ID of the primary Rubrik CDM instance. Use local to specify the Rubrik CDM instance that is hosting the current API session."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Return only the specified number of objects from the query results."
												},
												{
													"key": "offset",
													"value": "",
													"description": "Return a subset of the query results, starting with the specified number in the sequence of results."
												},
												{
													"key": "name",
													"value": "",
													"description": "Filter by the object name."
												},
												{
													"key": "sla_assignment",
													"value": "",
													"description": "Filter by the SLA assignment type. (This can only be one of Derived,Direct,Unassigned)"
												},
												{
													"key": "sort_by",
													"value": "",
													"description": "Specify an attribute to use to sort the query results. (This can only be one of name,effectiveSlaDomainName,descendantCountArray,descendantCountVolume,descendantCountVolumeGroup)"
												},
												{
													"key": "sort_order",
													"value": "",
													"description": "Specify the sort order to use when sorting query results, either ascending or descending. (This can only be one of asc,desc)"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a parent storage array hierarchy object."
												}
											]
										},
										"description": "Get a list of the immediate subordinate objects of a storage array object."
									},
									"response": [
										{
											"name": "Summary list of children of a storage array hierarchy object.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array/hierarchy/:id/children?effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array",
														"hierarchy",
														":id",
														"children"
													],
													"query": [
														{
															"key": "effective_sla_domain_id",
															"value": ""
														},
														{
															"key": "object_type",
															"value": ""
														},
														{
															"key": "primary_cluster_id",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "name",
															"value": ""
														},
														{
															"key": "sla_assignment",
															"value": ""
														},
														{
															"key": "sort_by",
															"value": ""
														},
														{
															"key": "sort_order",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get list of descendant objects",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array/hierarchy/:id/descendants?effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array",
												"hierarchy",
												":id",
												"descendants"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": "",
													"description": "Filter by the ID of the effective SLA domain."
												},
												{
													"key": "object_type",
													"value": "",
													"description": "Filter by the object type. (This can only be one of AppBlueprint,AwsAccount,CloudCompute,CloudComputeRegion,CloudNativeAuthzRoot,ComputeCluster,DataCenter,DataStore,Ec2Instance,Folder,Hdfs,HostFailoverCluster,HostRoot,HypervAuthzRoot,HypervCluster,HypervScvmm,HypervServer,HypervVirtualMachine,FailoverClusterApp,LinuxFileset,LinuxHost,LinuxHostAuthzRoot,ManagedVolume,ManagedVolumeAuthzRoot,ManagedVolumeRoot,MssqlAuthzRoot,MssqlDatabase,MssqlAvailabilityGroup,MssqlInstance,NasHost,NasHostAuthzRoot,NfsHostShare,NutanixAuthzRoot,NutanixCluster,NutanixVirtualMachine,OracleAuthzRoot,OracleDatabase,OracleHost,OracleRac,OracleRoot,ShareFileset,SlaDomain,SmbHostShare,StorageArray,StorageArrayVolume,StorageArrayVolumeGroup,Storm,User,vCenter,Vcd,VcdAuthzRoot,VcdCatalog,VcdOrg,VcdOrgVdc,VcdVapp,VcdVimServer,VirtualMachine,VmwareAuthzRoot,VmwareHost,VmwareResourcePool,VmwareStoragePolicy,VmwareTag,VmwareTagCategory,WindowsCluster,WindowsFileset,WindowsHost,WindowsHostAuthzRoot,WindowsVolumeGroup)"
												},
												{
													"key": "primary_cluster_id",
													"value": "",
													"description": "Filter by the ID of the primary Rubrik CDM instance. Use local to specify the Rubrik CDM instance that is hosting the current API session."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Return only the specified number of objects from the query results."
												},
												{
													"key": "offset",
													"value": "",
													"description": "Return a subset of the query results, starting with the specified number in the sequence of results."
												},
												{
													"key": "name",
													"value": "",
													"description": "Filter by the object name."
												},
												{
													"key": "sla_assignment",
													"value": "",
													"description": "Filter by the SLA assignment type. (This can only be one of Derived,Direct,Unassigned)"
												},
												{
													"key": "sort_by",
													"value": "",
													"description": "Specify an attribute to use to sort the query results. (This can only be one of name,effectiveSlaDomainName,descendantCountArray,descendantCountVolume,descendantCountVolumeGroup)"
												},
												{
													"key": "sort_order",
													"value": "",
													"description": "Specify the sort order to use when sorting query results, either ascending or descending. (This can only be one of asc,desc)"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a storage array hierarchy object. To specify a top-level node, use root as the ID."
												}
											]
										},
										"description": "Retrieve the list of descendant objects for the specified storage array."
									},
									"response": [
										{
											"name": "Summary list of descendants of a storage array hierarchy object.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array/hierarchy/:id/descendants?effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array",
														"hierarchy",
														":id",
														"descendants"
													],
													"query": [
														{
															"key": "effective_sla_domain_id",
															"value": ""
														},
														{
															"key": "object_type",
															"value": ""
														},
														{
															"key": "primary_cluster_id",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "name",
															"value": ""
														},
														{
															"key": "sla_assignment",
															"value": ""
														},
														{
															"key": "sort_by",
															"value": ""
														},
														{
															"key": "sort_order",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Remove a specific storage array.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the storage array to remove."
												}
											]
										},
										"description": "Create an asynchronous job for removing a specified storage array object."
									},
									"response": [
										{
											"name": "Status of a request for an asynchronous job to remove a storage array object.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get information about a specific storage array.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the storage array."
												}
											]
										},
										"description": "Get information about a specific storage array."
									},
									"response": [
										{
											"name": "Returns JSON object containing information storage array.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a specific storage array",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the storage array to update."
												}
											]
										},
										"description": "Update the host ip, username, and/or password of given storage array."
									},
									"response": [
										{
											"name": "Returns the updated storage array object.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Refresh storage array metadata",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array/:id/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array",
												":id",
												"refresh"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a storage array object."
												}
											]
										},
										"description": "Create an asynchronous job to refresh the metadata for a specified storage array object."
									},
									"response": [
										{
											"name": "Status of an asynchronous request to update storage array metadata.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/storage/array/:id/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"storage",
														"array",
														":id",
														"refresh"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Add a storage array",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/storage/array",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"storage",
										"array"
									]
								},
								"description": "Adds a storage array object and initiates an asynchronous job to obtain the metadata of the storage array for the object."
							},
							"response": [
								{
									"name": "Status of an asynchronous request to update storage array metadata.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Summary of all storage arrays",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/storage/array",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"storage",
										"array"
									]
								},
								"description": "Retrieve the host IP and username for all storage arrays."
							},
							"response": [
								{
									"name": "Storage arrays",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get storage array request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/storage/array/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"storage",
										"array",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an asynchronous request for a storage array object."
										}
									]
								},
								"description": "Retrieve the status and details of a specified asynchronous request for a storage array object."
							},
							"response": [
								{
									"name": "Status of an asynchronous request for a storage array object.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get storage array information for a host",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/storage/array/host/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"storage",
										"array",
										"host",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the registered host."
										}
									]
								},
								"description": "Retrieve detailed information about the storage arrays and storage array volumes that are associated with a specified host object."
							},
							"response": [
								{
									"name": "Storage array information for a host",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/storage/array/host/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"storage",
												"array",
												"host",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "vcd",
			"item": [
				{
					"name": "vapp",
					"item": [
						{
							"name": "snapshot",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Delete vApp snapshot",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/vapp/snapshot/:id?location=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"vapp",
														"snapshot",
														":id"
													],
													"query": [
														{
															"key": "location",
															"value": "",
															"description": "(Required) Location of the snapshot to delete. Use _local_ to delete only the local copy of the snapshot. Or use _all_ to delete the snapshot locally, on a replication target, and at an archival location. (This can only be one of all,local)"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a snapshot object."
														}
													]
												},
												"description": "Designate a vApp snapshot as expired and available for garbage collection. The snapshot must be an on-demand snapshot or a snapshot from a vApp that is not assigned to an SLA Domain."
											},
											"response": [
												{
													"name": "Snapshot successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vcd/vapp/snapshot/:id?location=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vcd",
																"vapp",
																"snapshot",
																":id"
															],
															"query": [
																{
																	"key": "location",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get vApp snapshot details",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/vapp/snapshot/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"vapp",
														"snapshot",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a snapshot object."
														}
													]
												},
												"description": "Retrieve detailed information about a specified snapshot for a vApp object."
											},
											"response": [
												{
													"name": "Details for a vApp snapshot.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vcd/vapp/snapshot/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vcd",
																"vapp",
																"snapshot",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Download snapshot from archive",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/vapp/snapshot/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"vapp",
														"snapshot",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of snapshot"
														}
													]
												},
												"description": "Provides a method for retrieving a snapshot, that is not available locally, from an archival location."
											},
											"response": [
												{
													"name": "Status for the download request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vcd/vapp/snapshot/:id/download",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vcd",
																"vapp",
																"snapshot",
																":id",
																"download"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{snapshot id}",
									"item": [
										{
											"name": "instant recover",
											"item": [
												{
													"name": "Instant Recovery of vApp virtual machines",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vcd/vapp/snapshot/:snapshot_id/instant_recover",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vcd",
																"vapp",
																"snapshot",
																":snapshot_id",
																"instant_recover"
															],
															"variable": [
																{
																	"key": "snapshot_id",
																	"value": "schema type not provided",
																	"description": "(Required) ID assigned to the vApp snapshot object."
																}
															]
														},
														"description": "Use Instant Recovery to recover specified vApp virtual machines."
													},
													"response": [
														{
															"name": "Request status for async Instant Recovery job for virtual machines in a vApp snapshot",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/vcd/vapp/snapshot/:snapshot_id/instant_recover",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"vcd",
																		"vapp",
																		"snapshot",
																		":snapshot_id",
																		"instant_recover"
																	],
																	"variable": [
																		{
																			"key": "snapshot_id"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get Instant Recovery information",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vcd/vapp/snapshot/:snapshot_id/instant_recover/options",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vcd",
																"vapp",
																"snapshot",
																":snapshot_id",
																"instant_recover",
																"options"
															],
															"variable": [
																{
																	"key": "snapshot_id",
																	"value": "schema type not provided",
																	"description": "(Required) ID assigned to a vApp snapshot object."
																}
															]
														},
														"description": "Retrieve the available vApp network connections and the default vApp network connection for the virtual machines in a vApp snapshot. Use this information to configure an Instant Recovery of specified virtual machines in the vApp snapshot."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/vcd/vapp/snapshot/:snapshot_id/instant_recover/options",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"vcd",
																		"vapp",
																		"snapshot",
																		":snapshot_id",
																		"instant_recover",
																		"options"
																	],
																	"variable": [
																		{
																			"key": "snapshot_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "export",
											"item": [
												{
													"name": "Export vApp snapshot.",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vcd/vapp/snapshot/:snapshot_id/export",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vcd",
																"vapp",
																"snapshot",
																":snapshot_id",
																"export"
															],
															"variable": [
																{
																	"key": "snapshot_id",
																	"value": "schema type not provided",
																	"description": "(Required) ID assigned to the vApp snapshot object."
																}
															]
														},
														"description": "Export the specified vApp snapshot into a new vApp or an existing vApp."
													},
													"response": [
														{
															"name": "Accepted request for asynchronous job to export a vApp snapshot.",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/vcd/vapp/snapshot/:snapshot_id/export",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"vcd",
																		"vapp",
																		"snapshot",
																		":snapshot_id",
																		"export"
																	],
																	"variable": [
																		{
																			"key": "snapshot_id"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get exportable network configurations.",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vcd/vapp/snapshot/:snapshot_id/export/options?export_mode=&target_vapp_id=&target_org_vdc_id=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vcd",
																"vapp",
																"snapshot",
																":snapshot_id",
																"export",
																"options"
															],
															"query": [
																{
																	"key": "export_mode",
																	"value": "",
																	"description": "(Required) Target type for the specified vApp export. (This can only be one of ExportToNewVapp,ExportToTargetVapp)"
																},
																{
																	"key": "target_vapp_id",
																	"value": "",
																	"description": "ID assigned to the target vApp object, when the export is into an existing vApp. When the export is not into a target vApp, remove the 'target_vapp_id' member."
																},
																{
																	"key": "target_org_vdc_id",
																	"value": "",
																	"description": "ID assigned to a target organization VDC object. Use the ID when exporting a vApp snapshot to create a new vApp on the specified target organization VDC. When the exported vApp snapshot is not used to create a new vApp on a target organization VDC, remove the 'target_org_vdc_id' member."
																}
															],
															"variable": [
																{
																	"key": "snapshot_id",
																	"value": "schema type not provided",
																	"description": "(Required) ID assigned to the vApp snapshot object to export."
																}
															]
														},
														"description": "Retrieve summary information for the vApp networks that are available for network connections from the virtual machines in the exported vApp snapshot. The summary also specifies the default vApp network for each virtual machine network connection."
													},
													"response": [
														{
															"name": "Untitled Response",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/vcd/vapp/snapshot/:snapshot_id/export/options?export_mode=&target_vapp_id=&target_org_vdc_id=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"vcd",
																		"vapp",
																		"snapshot",
																		":snapshot_id",
																		"export",
																		"options"
																	],
																	"query": [
																		{
																			"key": "export_mode",
																			"value": ""
																		},
																		{
																			"key": "target_vapp_id",
																			"value": ""
																		},
																		{
																			"key": "target_org_vdc_id",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "snapshot_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "snapshot",
									"item": [
										{
											"name": "Create an on-demand snapshot for a vApp",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/vapp/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"vapp",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a vApp object."
														}
													]
												},
												"description": "Start an asynchronous job to create an on-demand snapshot for a specified vApp object."
											},
											"response": [
												{
													"name": "Status of async job for an on-demand snapshot of a vApp.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vcd/vapp/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vcd",
																"vapp",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete all snapshots of vApp",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/vapp/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"vapp",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a vApp object."
														}
													]
												},
												"description": "Delete all snapshots for a specified vApp object."
											},
											"response": [
												{
													"name": "Snapshots successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vcd/vapp/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vcd",
																"vapp",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get list of snapshots of vApp",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/vapp/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"vapp",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a vApp object."
														}
													]
												},
												"description": "Retrieve summary information for each of the snapshot objects of a specified vApp object."
											},
											"response": [
												{
													"name": "Summary snapshot information for a vApp object.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/vcd/vapp/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"vcd",
																"vapp",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get vApp details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/vapp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"vapp",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a vApp object."
												}
											]
										},
										"description": "Retrieve detailed information for a specified vApp."
									},
									"response": [
										{
											"name": "Detailed information about a vApp object.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/vapp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"vapp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update vApp",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/vapp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"vapp",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a vApp object."
												}
											]
										},
										"description": "Make changes to the parameters of a specified vApp object."
									},
									"response": [
										{
											"name": "Details of an updated vApp object.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/vapp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"vapp",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get details about missed snapshots for a vApp",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/vapp/:id/missed_snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"vapp",
												":id",
												"missed_snapshot"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the vApp."
												}
											]
										},
										"description": "Retrieve the timestamp for each missed snapshot for a specified vApp."
									},
									"response": [
										{
											"name": "Details for missed snapshots for a vApp.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/vapp/:id/missed_snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"vapp",
														":id",
														"missed_snapshot"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Search for a file from a vApp",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/vapp/:id/search?path=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"vapp",
												":id",
												"search"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) The path query. Use either a path prefix or a filename prefix."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the vApp."
												}
											]
										},
										"description": "Aggregated search for a file through snapshots of all virtual machines that are presently part of the vApp. Specify the file by full path prefix or filename prefix."
									},
									"response": [
										{
											"name": "File search results.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/vapp/:id/search?path=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"vapp",
														":id",
														"search"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get summary for vApps",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vcd/vapp?sort_by=&sort_order=&limit=&offset=&name=&is_relic=&effective_sla_domain_id=&primary_cluster_id=&sla_assignment=&include_backup_task_info=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vcd",
										"vapp"
									],
									"query": [
										{
											"key": "sort_by",
											"value": "",
											"description": "Attribute to sort the vCD vApp list on. (This can only be one of Name,EffectiveSlaDomainName,SlaAssignment,ConnectionStatus,VappCount)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Order for sorting the results, either ascending or descending. (This can only be one of asc,desc)"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Number of matches to ignore from the beginning of the results."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search for a vCD vApp object by name."
										},
										{
											"key": "is_relic",
											"value": "",
											"description": "Filter by isRelic field of vCD vApp object. Return both relic and non-relic vApps when this value is not specified."
										},
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain."
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type. (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "include_backup_task_info",
											"value": "",
											"description": "Include backup task information in response"
										}
									]
								},
								"description": "Retrieve summary information for all vCD vApp objects."
							},
							"response": [
								{
									"name": "Summary information for vCD vApps",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/vapp?sort_by=&sort_order=&limit=&offset=&name=&is_relic=&effective_sla_domain_id=&primary_cluster_id=&sla_assignment=&include_backup_task_info=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"vapp"
											],
											"query": [
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "is_relic",
													"value": ""
												},
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "include_backup_task_info",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get vApp job status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vcd/vapp/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vcd",
										"vapp",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to an asynchronous job."
										}
									]
								},
								"description": "Retrieve the details of a specified asynchronous job for a vApp."
							},
							"response": [
								{
									"name": "Status of a vApp asynchronous job",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/vapp/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"vapp",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "hierarchy/{id}",
					"item": [
						{
							"name": "Get summary of a vCD hierarchy object",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vcd/hierarchy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vcd",
										"hierarchy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the vCD hierarchy object."
										}
									]
								},
								"description": "Retrieve details for the specified object in the vCD hierarchy."
							},
							"response": [
								{
									"name": "Details of the hierarchy object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/hierarchy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"hierarchy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get immediate descendant objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vcd/hierarchy/:id/children?sort_by=&sort_order=&limit=&offset=&name=&is_relic=&effective_sla_domain_id=&object_type=&primary_cluster_id=&sla_assignment=&snappable_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vcd",
										"hierarchy",
										":id",
										"children"
									],
									"query": [
										{
											"key": "sort_by",
											"value": "",
											"description": "Attribute to sort the results on. (This can only be one of Name,EffectiveSlaDomainName,SlaAssignment,ConnectionStatus,VappCount)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Order for sorting the results, either ascending or descending. (This can only be one of asc,desc)"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Number of matches to ignore from the beginning of the results."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search object by object name."
										},
										{
											"key": "is_relic",
											"value": "",
											"description": "Filter by isRelic field of vCD vApp hierarchy object. Return both relic and non-relic children when this value is not specified."
										},
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain."
										},
										{
											"key": "object_type",
											"value": "",
											"description": "Filter by node object type. (This can only be one of Cluster,VimServer,Org,OrgVdc,Catalog,vApp)"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "snappable_status",
											"value": "",
											"description": "Filters vCD hierarchy objects based on the specified query value. (This can only be one of Protectable)"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the parent vCD hierarchy object. To get top-level nodes, use **root** as the ID."
										}
									]
								},
								"description": "Retrieve the list of immediate descendant objects for the specified parent."
							},
							"response": [
								{
									"name": "Summary list of immediate descendant objects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/hierarchy/:id/children?sort_by=&sort_order=&limit=&offset=&name=&is_relic=&effective_sla_domain_id=&object_type=&primary_cluster_id=&sla_assignment=&snappable_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"hierarchy",
												":id",
												"children"
											],
											"query": [
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "is_relic",
													"value": ""
												},
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "object_type",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "snappable_status",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of descendant objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vcd/hierarchy/:id/descendants?sort_by=&sort_order=&limit=&offset=&name=&is_relic=&effective_sla_domain_id=&object_type=&primary_cluster_id=&sla_assignment=&snappable_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vcd",
										"hierarchy",
										":id",
										"descendants"
									],
									"query": [
										{
											"key": "sort_by",
											"value": "",
											"description": "Attribute to sort the results on. (This can only be one of Name,EffectiveSlaDomainName,SlaAssignment,ConnectionStatus,VappCount)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Order for sorting the results, either ascending or descending. (This can only be one of asc,desc)"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search object by object name."
										},
										{
											"key": "is_relic",
											"value": "",
											"description": "Filter by isRelic field of vCD vApp hierarchy object. Return both relic and non-relic descendants if this query is not set."
										},
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain."
										},
										{
											"key": "object_type",
											"value": "",
											"description": "Filter by node object type. (This can only be one of Cluster,VimServer,Org,OrgVdc,Catalog,vApp)"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "snappable_status",
											"value": "",
											"description": "Filters vCD hierarchy objects based on the specified query value. (This can only be one of Protectable)"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the parent vCD hierarchy object. To get top-level nodes, use **root** as the ID."
										}
									]
								},
								"description": "Retrieve the list of descendant objects for the specified parent."
							},
							"response": [
								{
									"name": "Summary list of descendant objects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/hierarchy/:id/descendants?sort_by=&sort_order=&limit=&offset=&name=&is_relic=&effective_sla_domain_id=&object_type=&primary_cluster_id=&sla_assignment=&snappable_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"hierarchy",
												":id",
												"descendants"
											],
											"query": [
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "is_relic",
													"value": ""
												},
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "object_type",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "snappable_status",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cluster",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Remove vCD Cluster",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/cluster/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"cluster",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a vCD Cluster object."
												}
											]
										},
										"description": "Start an asynchronous job to remove a vCD Cluster object."
									},
									"response": [
										{
											"name": "Status of a job to delete a vCD Cluster",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/cluster/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"cluster",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get vCD Cluster details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/cluster/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"cluster",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a vCD Cluster object."
												}
											]
										},
										"description": "Retrieve detailed information for a vCD Cluster object."
									},
									"response": [
										{
											"name": "Details for a vCD Cluster object",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/cluster/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"cluster",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Change vCD Cluster object",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/cluster/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"cluster",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a vCD Cluster object."
												}
											]
										},
										"description": "Modify the hostname and credentials of a specified vCD Cluster object."
									},
									"response": [
										{
											"name": "Details of an updated vCD Cluster object",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/cluster/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"cluster",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Refresh a vCD Cluster",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/cluster/:id/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"cluster",
												":id",
												"refresh"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a vCD Cluster object."
												}
											]
										},
										"description": "Start an asynchronous job to refresh the metadata for a specified vCD Cluster object."
									},
									"response": [
										{
											"name": "Status of a vCD Cluster metadata refresh job",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/cluster/:id/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"cluster",
														":id",
														"refresh"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get VimServers of a vCD Cluster",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/cluster/:id/vimserver?sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"cluster",
												":id",
												"vimserver"
											],
											"query": [
												{
													"key": "sort_by",
													"value": "",
													"description": "Attribute to sort the results on. (This can only be one of Name,Status)"
												},
												{
													"key": "sort_order",
													"value": "",
													"description": "Order for sorting the results, either ascending or descending. (This can only be one of asc,desc)"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a vCD Cluster object."
												}
											]
										},
										"description": "Retrieves the VimServer representation of the vCenter Servers that are attached to a specified vCD Cluster object."
									},
									"response": [
										{
											"name": "Summary information for VimServer objects",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/vcd/cluster/:id/vimserver?sort_by=&sort_order=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"vcd",
														"cluster",
														":id",
														"vimserver"
													],
													"query": [
														{
															"key": "sort_by",
															"value": ""
														},
														{
															"key": "sort_order",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Add a vCD Cluster",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vcd/cluster",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vcd",
										"cluster"
									]
								},
								"description": "Create a vCD Cluster object by providing the address of the vCD Cluster and the credentials for an account on the vCD Cluster that has administrator privileges. This request initiates an asynchronous job to connect with the vCD Cluster and retrieve the required metadata."
							},
							"response": [
								{
									"name": "Status of an async request to add a vCD Cluster",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/cluster",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"cluster"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get summary for all vCD Clusters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vcd/cluster?name=&status=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vcd",
										"cluster"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Search for a vCD Cluster object by name."
										},
										{
											"key": "status",
											"value": "",
											"description": "Filter the results using the status value of the vCD Cluster objects. (This can only be one of Disconnected,Refreshing,Connected,BadlyConfigured,Deleting,Remote)"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Attribute to sort the results on. (This can only be one of Name,Status)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Order for sorting the results, either ascending or descending. (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Retrieve summary information for all vCD cluster objects."
							},
							"response": [
								{
									"name": "Summary information for vCD clusters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/cluster?name=&status=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"cluster"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "status",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get vCD Cluster job status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vcd/cluster/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vcd",
										"cluster",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to an asynchronous job."
										}
									]
								},
								"description": "Retrieve the details of a specified asynchronous job for a vCD Cluster."
							},
							"response": [
								{
									"name": "Status of a vCD Cluster asynchronous job",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/vcd/cluster/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vcd",
												"cluster",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "cluster/{id}",
			"item": [
				{
					"name": "disk",
					"item": [
						{
							"name": "{disk id}",
							"item": [
								{
									"name": "Instruct the cluster that a disk has been removed",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/disk/:disk_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"disk",
												":disk_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self"
												},
												{
													"key": "disk_id",
													"value": "schema type not provided",
													"description": "(Required) ID of a missing disk to mark removed"
												}
											]
										},
										"description": "Marks the disk removed and updates cluster metadata"
									},
									"response": [
										{
											"name": "Successfully removed the disk from the cluster",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/disk/:disk_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"disk",
														":disk_id"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "disk_id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set up an unformatted disk",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/disk/:disk_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"disk",
												":disk_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self"
												},
												{
													"key": "disk_id",
													"value": "schema type not provided",
													"description": "(Required) ID of an unformatted disk to set up"
												}
											]
										},
										"description": "Formats, initializes and mounts an unformatted disk"
									},
									"response": [
										{
											"name": "Information about the formatted disk",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/disk/:disk_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"disk",
														":disk_id"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "disk_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get disks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/disk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"disk"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Retrieves information about the disks in the Rubrik cluster"
							},
							"response": [
								{
									"name": "List of disks in this Rubrik cluster",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/disk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"disk"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "remove node",
					"item": [
						{
							"name": "Removes a node from",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/remove_node",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"remove_node"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Schedules a node for removal"
							},
							"response": [
								{
									"name": "Request handle to check remove node status",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/remove_node",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"remove_node"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get node removal status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/remove_node?request_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"remove_node"
									],
									"query": [
										{
											"key": "request_id",
											"value": "",
											"description": "(Required) Remove node request id"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Retrieves the status of the remove node request"
							},
							"response": [
								{
									"name": "Remove node request status",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/remove_node?request_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"remove_node"
											],
											"query": [
												{
													"key": "request_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ui preference",
					"item": [
						{
							"name": "Get UI preference of cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/ui_preference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"ui_preference"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Get UI preference of queried cluster"
							},
							"response": [
								{
									"name": "Returned if the query was successful",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/ui_preference",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"ui_preference"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update UI preference of cluster",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/ui_preference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"ui_preference"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Update UI preference of cluster"
							},
							"response": [
								{
									"name": "Returned if the update was successful",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/ui_preference",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"ui_preference"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "security",
					"item": [
						{
							"name": "rksupport cred",
							"item": [
								{
									"name": "Check status for updating cluster-wide rksupport credential.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security/rksupport_cred",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security",
												"rksupport_cred"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of a Rubrik cluster, or use *me* for the Rubrik cluster that is hosting the current session."
												}
											]
										},
										"description": "Check whether the specified Rubrik cluster should be updated with a cluster-wide rksupport credential."
									},
									"response": [
										{
											"name": "Retune the status of rksupport credential",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/rksupport_cred",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"rksupport_cred"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Schedule job for updating cluster-wide rksupport credential.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security/rksupport_cred",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security",
												"rksupport_cred"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of a Rubrik cluster, or use *me* for the Rubrik cluster that is hosting the current session."
												}
											]
										},
										"description": "Update the rksupport credential by one of following two:\n  1. username/password of support portal (works for sites connected to\n  the Internet)\n  2. the registration details acquired from support portal\n  (works for sites that cannot connect to the Internet).\n"
									},
									"response": [
										{
											"name": "Schedule job for updating cluster-wide rksupport credential",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/rksupport_cred",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"rksupport_cred"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "kmip",
							"item": [
								{
									"name": "server",
									"item": [
										{
											"name": "Add a KMIP server",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/kmip/server",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"kmip",
														"server"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
														}
													]
												},
												"description": "Add the specified KMIP server to the set of active KMIP servers."
											},
											"response": [
												{
													"name": "Status of the request for setting configuration",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cluster/:id/security/kmip/server",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cluster",
																":id",
																"security",
																"kmip",
																"server"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Remove the specified KMIP server",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/kmip/server?server_address=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"kmip",
														"server"
													],
													"query": [
														{
															"key": "server_address",
															"value": "",
															"description": "(Required) IPv4 address or FQDN (fully qualified domain name) of the KMIP server."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
														}
													]
												},
												"description": "Remove the server with the specified server address from the set of active KMIP servers."
											},
											"response": [
												{
													"name": "Status of the request for removing the KMIP server",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cluster/:id/security/kmip/server?server_address=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cluster",
																":id",
																"security",
																"kmip",
																"server"
															],
															"query": [
																{
																	"key": "server_address",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get KMIP server information",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/kmip/server?server_address=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"kmip",
														"server"
													],
													"query": [
														{
															"key": "server_address",
															"value": "",
															"description": "Address of the KMIP server"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
														}
													]
												},
												"description": "Returns the KMIP server information for the specified server address. When no server address is specified, this call returns information on all active KMIP servers. The response array is empty when KMIP is not configured or when the server address cannot be found."
											},
											"response": [
												{
													"name": "Information for the specified KMIP server(s)",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cluster/:id/security/kmip/server?server_address=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cluster",
																":id",
																"security",
																"kmip",
																"server"
															],
															"query": [
																{
																	"key": "server_address",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "client",
									"item": [
										{
											"name": "Get the KMIP client configuration",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/kmip/client",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"kmip",
														"client"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
														}
													]
												},
												"description": "Return the currently configured KMIP client information. The response object contains empty fields when KMIP is not configured."
											},
											"response": [
												{
													"name": "Current KMIP client configuration detail",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cluster/:id/security/kmip/client",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cluster",
																":id",
																"security",
																"kmip",
																"client"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Specify KMIP client credentials for nodes",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/kmip/client",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"kmip",
														"client"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Rubrik cluster. Use *me* to refer to the Rubrik cluster that is hosting the current API session."
														}
													]
												},
												"description": "Specify KMIP client credentials for each of the Rubrik cluster nodes."
											},
											"response": [
												{
													"name": "Status of the request for setting client configuration",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/cluster/:id/security/kmip/client",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cluster",
																":id",
																"security",
																"kmip",
																"client"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "key rotation",
							"item": [
								{
									"name": "Get details of key rotations.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security/key_rotation?rotation_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security",
												"key_rotation"
											],
											"query": [
												{
													"key": "rotation_id",
													"value": "",
													"description": "ID of the key rotation or *latest* for the most recent key rotation."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self."
												}
											]
										},
										"description": "Return detailed information for a key rotation identified by **rotation_id**, or for all key rotations if **rotation_id** is not specified."
									},
									"response": [
										{
											"name": "Detailed information for the specified key rotation, or for all key rotations if **rotation_id** is not specified. One list entry is returned for each node.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/key_rotation?rotation_id=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"key_rotation"
													],
													"query": [
														{
															"key": "rotation_id",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Rotate keys in encrypted cluster.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security/key_rotation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security",
												"key_rotation"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self."
												}
											]
										},
										"description": "Trigger a key rotation for all nodes in the cluster. A reboot may be required depending on the rotation specification."
									},
									"response": [
										{
											"name": "Succesfully scheduled key rotation.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/key_rotation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"key_rotation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "web signed cert",
							"item": [
								{
									"name": "Reset the signed certificate for Web server.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security/web_signed_cert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security",
												"web_signed_cert"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self."
												}
											]
										},
										"description": "Resetting the customer-given certificate for each node's web server."
									},
									"response": [
										{
											"name": "Status of the request for resetting the certificate",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/web_signed_cert",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"web_signed_cert"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set a signed certificate for Web server.",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security/web_signed_cert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security",
												"web_signed_cert"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self."
												}
											]
										},
										"description": "Setting the given certificate for each node's web server to use."
									},
									"response": [
										{
											"name": "Status of the request for setting certificate",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/web_signed_cert",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"web_signed_cert"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "password/zxcvbn",
							"item": [
								{
									"name": "Toggle usage of ZXCVBN for local users.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security/password/zxcvbn",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security",
												"password",
												"zxcvbn"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a Rubrik CDM instance. Use *me* for the instance that is hosting the current REST API session."
												}
											]
										},
										"description": "Toggle usage of ZXCVBN for local users."
									},
									"response": [
										{
											"name": "Password evaluation result.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/password/zxcvbn",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"password",
														"zxcvbn"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Check ZXCVBN status",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security/password/zxcvbn",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security",
												"password",
												"zxcvbn"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self."
												}
											]
										},
										"description": "Determine whether the ZXCVBN password check is currently in use on the specified Rubrik cluster."
									},
									"response": [
										{
											"name": "Current state of the ZXCVBN password check",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/password/zxcvbn",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"password",
														"zxcvbn"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "ssh",
							"item": [
								{
									"name": "Get whether SSH is enabled for nodes in the cluster",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security/ssh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security",
												"ssh"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self."
												}
											]
										},
										"description": "Returns whether SSH is enabled on TCP port 22 for all nodes in the cluster."
									},
									"response": [
										{
											"name": "The current state of whether SSH is enabled.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/ssh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"ssh"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set whether SSH is enabled/disabled for nodes in the cluser",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security/ssh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security",
												"ssh"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self."
												}
											]
										},
										"description": "Disables or enables SSH on TCP port 22 for all nodes in the cluster."
									},
									"response": [
										{
											"name": "The current state of whether SSH is enabled.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cluster/:id/security/ssh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														":id",
														"security",
														"ssh"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get details about an async request.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/security/request/:request_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"security",
										"request",
										":request_id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self."
										},
										{
											"key": "request_id",
											"value": "schema type not provided",
											"description": "(Required) ID of the request"
										}
									]
								},
								"description": "Get details about a security-related async request."
							},
							"response": [
								{
									"name": "Status for the async request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security/request/:request_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security",
												"request",
												":request_id"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "request_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ipv6",
					"item": [
						{
							"name": "Returns the IPv6 of all nodes on one or all interfaces.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/ipv6?iface=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"ipv6"
									],
									"query": [
										{
											"key": "iface",
											"value": "",
											"description": "Optional interface name parameter"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self."
										}
									]
								},
								"description": "Returns the IPv6 of all nodes on one or all interfaces."
							},
							"response": [
								{
									"name": "Returned if the query was successful",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/ipv6?iface=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"ipv6"
											],
											"query": [
												{
													"key": "iface",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update IPv6 configuration on an interface.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/ipv6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"ipv6"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self."
										}
									]
								},
								"description": "Update IPv6 configuration on an interface."
							},
							"response": [
								{
									"name": "Returned if the update was successful",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/ipv6",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"ipv6"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "dns nameserver",
					"item": [
						{
							"name": "Get DNS servers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/dns_nameserver",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"dns_nameserver"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Retrieve a list the DNS servers assigned to the Rubrik cluster"
							},
							"response": [
								{
									"name": "List of the DNS servers assigned to the specified Rubrik cluster",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/dns_nameserver",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"dns_nameserver"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Assign DNS servers",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/dns_nameserver",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"dns_nameserver"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Assign DNS servers to the Rubrik cluster"
							},
							"response": [
								{
									"name": "Successfully assigned the specified DNS servers to the Rubrik cluster",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/dns_nameserver",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"dns_nameserver"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "node",
					"item": [
						{
							"name": "Add nodes",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/node",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"node"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Add nodes to the specified Rubrik cluster"
							},
							"response": [
								{
									"name": "Job Id to check pending add node request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/node",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"node"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get nodes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/node",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"node"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Retrieve the list of nodes in this Rubrik cluster"
							},
							"response": [
								{
									"name": "List of node statuses",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/node",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"node"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "snmp configuration",
					"item": [
						{
							"name": "Get SNMP configuration of the cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/snmp_configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"snmp_configuration"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self."
										}
									]
								},
								"description": "Get SNMP configuration of the queried cluster"
							},
							"response": [
								{
									"name": "Returned if the query was successful",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/snmp_configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"snmp_configuration"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update SNMP configuration",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/snmp_configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"snmp_configuration"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self."
										}
									]
								},
								"description": "Update the SNMP configuration for a specified Rubrik cluster."
							},
							"response": [
								{
									"name": "Returned if the update was successful",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/snmp_configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"snmp_configuration"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "recommission node",
					"item": [
						{
							"name": "Recommission a node",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/recommission_node",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"recommission_node"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Schedule a node for recommission"
							},
							"response": [
								{
									"name": "Request handle to check recommission status",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/recommission_node",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"recommission_node"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not recommission node (Invalid Input)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/recommission_node",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"recommission_node"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get node recommission status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/recommission_node?request_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"recommission_node"
									],
									"query": [
										{
											"key": "request_id",
											"value": "",
											"description": "(Required) Recommission request id"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Retrieve the status of a specified asynchronous node recommission request."
							},
							"response": [
								{
									"name": "Recommission node request status",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/recommission_node?request_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"recommission_node"
											],
											"query": [
												{
													"key": "request_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ntp server",
					"item": [
						{
							"name": "Get NTP Servers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/ntp_server",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"ntp_server"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Retrieve a list of the NTP servers assigned to the Rubrik cluster. Encryption keys are not reported."
							},
							"response": [
								{
									"name": "List of the NTP servers assigned to the specified Rubrik cluster",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/ntp_server",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"ntp_server"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Assign NTP servers to Rubrik cluster",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/ntp_server",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"ntp_server"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self."
										}
									]
								},
								"description": "Assign NTP servers to Rubrik cluster"
							},
							"response": [
								{
									"name": "Successfully assigned the specified NTP servers to the Rubrik cluster",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/ntp_server",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"ntp_server"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "auto removed node",
					"item": [
						{
							"name": "Get auto removed nodes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/auto_removed_node",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"auto_removed_node"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster. Use the string \"me\" for a cluster to identify itself."
										}
									]
								},
								"description": "Retrieve the list of nodes that were automatically removed from the Rubrik cluster for which the node removal has not been acknowledged."
							},
							"response": [
								{
									"name": "List of auto removed node statuses",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/auto_removed_node",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"auto_removed_node"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Acknowledge node removal",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/auto_removed_node/:node_id/acknowledge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"auto_removed_node",
										":node_id",
										"acknowledge"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster. Use the string \"me\" for a cluster to identify itself."
										},
										{
											"key": "node_id",
											"value": "schema type not provided",
											"description": "(Required) ID of the node to acknowledge auto removal of"
										}
									]
								},
								"description": "Acknowledge automatic removal of a node from the Rubrik cluster."
							},
							"response": [
								{
									"name": "Successfully acknowledged auto removal of the node",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/auto_removed_node/:node_id/acknowledge",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"auto_removed_node",
												":node_id",
												"acknowledge"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "node_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "global manager",
					"item": [
						{
							"name": "global",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/global_manager",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"global_manager"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "global"
							},
							"response": [
								{
									"name": "Global",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/global_manager",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"global_manager"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "global",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/global_manager",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"global_manager"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "global"
							},
							"response": [
								{
									"name": "Global",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/global_manager",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"global_manager"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "bootstrap",
					"item": [
						{
							"name": "Bootstrap the cluster",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/bootstrap",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"bootstrap"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Issues a bootstrap request to a specified Rubrik cluster"
							},
							"response": [
								{
									"name": "Request handle to check bootstrap status",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/bootstrap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"bootstrap"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Cluster bootstrap request status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/bootstrap?request_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"bootstrap"
									],
									"query": [
										{
											"key": "request_id",
											"value": "",
											"description": "(Required) Id of the bootstrap request"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Retrieves status of in progress bootstrap requests"
							},
							"response": [
								{
									"name": "Status of the bootstrap request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/bootstrap?request_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"bootstrap"
											],
											"query": [
												{
													"key": "request_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "security classification",
					"item": [
						{
							"name": "Returns the cluster security classification.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/security_classification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"security_classification"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self."
										}
									]
								},
								"description": "Returns the cluster security classification parameters."
							},
							"response": [
								{
									"name": "Returns this code on a successful query.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security_classification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security_classification"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Sets the cluster security classification parameters.",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/security_classification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"security_classification"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self."
										}
									]
								},
								"description": "Sets the cluster security classification parameters."
							},
							"response": [
								{
									"name": "Returned if the operation was successful",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/security_classification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"security_classification"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "login banner",
					"item": [
						{
							"name": "Get login banner of the cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/login_banner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"login_banner"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self."
										}
									]
								},
								"description": "Returns the banner that displays after a successful login."
							},
							"response": [
								{
									"name": "Returns this code on a successful query.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/login_banner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"login_banner"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set login banner of the cluster",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/login_banner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"login_banner"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self."
										}
									]
								},
								"description": "Sets the banner that displays after a successful login."
							},
							"response": [
								{
									"name": "Returned if the operation was successful",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/login_banner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"login_banner"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ipmi",
					"item": [
						{
							"name": "Get IPMI details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/ipmi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"ipmi"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "get IPMI details of availability and enabled access in the cluster"
							},
							"response": [
								{
									"name": "details of IPMI settings",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/ipmi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"ipmi"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Modify IPMI settings",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/ipmi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"ipmi"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "modify IPMI settings"
							},
							"response": [
								{
									"name": "Successfully set the IPMI password for the cluster",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/ipmi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"ipmi"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "vlan",
					"item": [
						{
							"name": "Adds a VLAN interface on the cluster or re-ips a VLAN",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/vlan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"vlan"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Edits tagged interfaces on the cluster by VLAN."
							},
							"response": [
								{
									"name": "Returned if ips conflict",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/vlan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"vlan"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Successfully added VLANs to the cluster",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/vlan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"vlan"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Drops a VLAN from the cluster",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/vlan?vlan_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"vlan"
									],
									"query": [
										{
											"key": "vlan_id",
											"value": "",
											"description": "(Required) VLAN"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Drops interfaces assigend to the specified VLAN on the cluster."
							},
							"response": [
								{
									"name": "Successfully drops VLAN interface",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/vlan?vlan_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"vlan"
											],
											"query": [
												{
													"key": "vlan_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if ips conflict",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/vlan?vlan_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"vlan"
											],
											"query": [
												{
													"key": "vlan_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get configured VLAN interfaces for a Rubrik Cluster cluster",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/vlan?vlan=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"vlan"
									],
									"query": [
										{
											"key": "vlan",
											"value": "",
											"description": "Will retrieve info for a specific VLAN if passed in"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Retrieves the VLANs configured on a Rubrik Cluster and their ip configurations"
							},
							"response": [
								{
									"name": "VLAN configurations for the Rubrik cluster",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/vlan?vlan=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"vlan"
											],
											"query": [
												{
													"key": "vlan",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "dns search domain",
					"item": [
						{
							"name": "Get DNS search domains",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/dns_search_domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"dns_search_domain"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Retrieve a list the DNS search domains assigned to the Rubrik cluster"
							},
							"response": [
								{
									"name": "List of the DNS search domains assigned to the specified Rubrik cluster",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/dns_search_domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"dns_search_domain"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Assign DNS search domains",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/dns_search_domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"dns_search_domain"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Rubrik cluster or *me* for self"
										}
									]
								},
								"description": "Assign DNS search domains to the Rubrik cluster"
							},
							"response": [
								{
									"name": "Successfully assigned the specified DNS search domains to the Rubrik cluster",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cluster/:id/dns_search_domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												":id",
												"dns_search_domain"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get network interfaces for a Rubrik Cluster cluster",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/network_interface?interface=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"network_interface"
							],
							"query": [
								{
									"key": "interface",
									"value": "",
									"description": "Will retrieve info for a specific interface if passed in"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Retrieves network interfaces(including VLANs) on bond0/bond1"
					},
					"response": [
						{
							"name": "Network interfaces for the Rubrik cluster",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/network_interface?interface=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"network_interface"
									],
									"query": [
										{
											"key": "interface",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "(DEPRECATED) Discover bootstrappable nodes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/discover",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"discover"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self."
								}
							]
						},
						"description": "Searches for nodes that can bootstrap into the specified Rubrik cluster. This endpoint will be moved to v1 in the next major version."
					},
					"response": [
						{
							"name": "List of nodes and associated IPv6 addresses available to bootstrap into the specified Rubrik cluster.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/discover",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"discover"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add iscsi targets",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/iscsi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"iscsi"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Add iscsi targets from the specificied portal to the Rubrik cluster"
					},
					"response": [
						{
							"name": "Successfully added to the specified cluster",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/iscsi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"iscsi"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get is on-cloud",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/is_on_cloud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"is_on_cloud"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Check whether this Rubrik cluster is running on cloud"
					},
					"response": [
						{
							"name": "True when the Rubrik cluster is running on cloud",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/is_on_cloud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"is_on_cloud"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get registration status for a Rubrik cluster.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/is_registered",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"is_registered"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of a Rubrik cluster, or use *me* for the Rubrik cluster that is hosting the current session."
								}
							]
						},
						"description": "Check whether the specified Rubrik cluster is registered in the Rubrik customer database."
					},
					"response": [
						{
							"name": "Returns 'True' when the specified Rubrik cluster is registered.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/is_registered",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"is_registered"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check if the cluster supports only Azure cloud",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/is_azure_cloud_only",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"is_azure_cloud_only"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Checks if the Rubrik cluster has restricted cloud functionality to Azure cloud only."
					},
					"response": [
						{
							"name": "True if the cluster supports only Azure cloud",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/is_azure_cloud_only",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"is_azure_cloud_only"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get cluster name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"name"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Retrieves the name of the Rubrik cluster identified by the id"
					},
					"response": [
						{
							"name": "Name of the cluster",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"name"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Add node request status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/pending_node",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"pending_node"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Retrieves status of a pending add node request on the specified cluster"
					},
					"response": [
						{
							"name": "Status of the pending add node request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/pending_node",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"pending_node"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get information about Rubrik Edge Trial",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/trial_edge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"trial_edge"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) The ID assigned to a Rubrik Edge instance."
								}
							]
						},
						"description": "Query Rubrik Edge to confirm whether it is a the Trial version and to obtain Trial-related information."
					},
					"response": [
						{
							"name": "Rubrik Edge Trial information.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/trial_edge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"trial_edge"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Submit the registration details for a Rubrik cluster.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/registration_details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"registration_details"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of a Rubrik cluster, or use *me* for the Rubrik cluster that is hosting the current session."
								}
							]
						},
						"description": "Submit the registration details for the specified Rubrik cluster."
					},
					"response": [
						{
							"name": "Successfully applied the given registration details",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/registration_details",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"registration_details"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get if it has TPM",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/has_tpm",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"has_tpm"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Check whether this Rubrik cluster has TPM"
					},
					"response": [
						{
							"name": "True when the Rubrik cluster has TPM",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/has_tpm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"has_tpm"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get is single node",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/is_single_node",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"is_single_node"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Check whether this Rubrik cluster is configured to be single node"
					},
					"response": [
						{
							"name": "True when the Rubrik cluster has a single node",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/is_single_node",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"is_single_node"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get if it is hardware encrypted",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/is_hardware_encrypted",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"is_hardware_encrypted"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Check whether this Rubrik cluster is hardware encrypted"
					},
					"response": [
						{
							"name": "True when the Rubrik cluster is hardware encrypted",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/is_hardware_encrypted",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"is_hardware_encrypted"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get system status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/system_status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"system_status"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Retrieves information about the status of the Rubrik cluster"
					},
					"response": [
						{
							"name": "Returned if the query was successful",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/system_status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"system_status"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get cluster brik count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/brik_count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"brik_count"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Retrieve the number of briks in this Rubrik cluster"
					},
					"response": [
						{
							"name": "Brik count",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/brik_count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"brik_count"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get installed memory capacity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/memory_capacity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"memory_capacity"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Retrieve total installed memory on the Rubrik cluster"
					},
					"response": [
						{
							"name": "Memory capacity of the Rubrik cluster",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/memory_capacity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"memory_capacity"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get IO throughput information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/io_stats?range=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"io_stats"
							],
							"query": [
								{
									"key": "range",
									"value": "",
									"description": "Optional time range parameter for the timeseries, eg: -1h, -1min, etc. Default value is -6h"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Retrieves IO statistics of the Rubrik cluster"
					},
					"response": [
						{
							"name": "IO statistics for the cluster",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/io_stats?range=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"io_stats"
									],
									"query": [
										{
											"key": "range",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check connectivity for Polaris",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/global_manager_connectivity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"global_manager_connectivity"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self."
								}
							]
						},
						"description": "Uses ping to test connectivity with a list of URLs provided by Polaris."
					},
					"response": [
						{
							"name": "Provides a report of which URLs were reachable.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/global_manager_connectivity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"global_manager_connectivity"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get platform identifier",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/platforminfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"platforminfo"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of a Rubrik cluster, or *me* for the Rubrik cluster that is hosting the API session."
								}
							]
						},
						"description": "Retrieve the computing platform that is running the Rubrik CDM software."
					},
					"response": [
						{
							"name": "The identifier for the computing platform that is running the Rubrik CDM software.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/platforminfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"platforminfo"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Decommission nodes",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/decommission_nodes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"decommission_nodes"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Start an asynchronous task to decommission the specified node or nodes."
					},
					"response": [
						{
							"name": "Returns the request ID for the asynchronous node decommission job",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/decommission_nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"decommission_nodes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Could not decommission node (Invalid Input)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/decommission_nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"decommission_nodes"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Submit community user credentials to register a cluster",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"register"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of a Rubrik cluster, or use *me* for the Rubrik cluster that is hosting the current session."
								}
							]
						},
						"description": "Submit community user credentials to register a cluster."
					},
					"response": [
						{
							"name": "Successfully registered with Rubrik.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"register"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get installed disk capacity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/disk_capacity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"disk_capacity"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Retrieves total installed disk space on the Rubrik cluster"
					},
					"response": [
						{
							"name": "Disk capacity of the Rubrik cluster",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/disk_capacity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"disk_capacity"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get if it is encrypted",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/is_encrypted",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"is_encrypted"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Check whether this Rubrik cluster is encrypted (the encryption could be either be software-based encryption or hardware-based encryption)."
					},
					"response": [
						{
							"name": "True when the Rubrik cluster is encrypted",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/is_encrypted",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"is_encrypted"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get installed flash capacity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/flash_capacity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"flash_capacity"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Retrieves total installed flash on the Rubrik cluste "
					},
					"response": [
						{
							"name": "Flash capacity for the Rubrik cluster",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/flash_capacity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"flash_capacity"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a list of a cluster's floating IP to node mapping",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cluster/:id/floating_ip?floating_ip=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cluster",
								":id",
								"floating_ip"
							],
							"query": [
								{
									"key": "floating_ip",
									"value": "",
									"description": "Filter the result based on the floating_ip configured on the rubrik cluster.\nThe query returns the node that owns this cluster IP address"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Get a list of a cluster's floating IP to node mapping"
					},
					"response": [
						{
							"name": "cluster IP to nodeId dictionary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cluster/:id/floating_ip?floating_ip=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										":id",
										"floating_ip"
									],
									"query": [
										{
											"key": "floating_ip",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "hyperv",
			"item": [
				{
					"name": "scvmm",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete a Hyper-V SCVMM",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/scvmm/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"scvmm",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Hyper-V SCVMM"
												}
											]
										},
										"description": "Delete a Hyper-V SCVMM"
									},
									"response": [
										{
											"name": "Request ID of the scheduled Hyper-V SCVMM delete job.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/scvmm/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"scvmm",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get details of a Hyper-V SCVMM",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/scvmm/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"scvmm",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Hyper-V SCVMM"
												}
											]
										},
										"description": "Get details of a Hyper-V SCVMM"
									},
									"response": [
										{
											"name": "Details about the Hyper-V SCVMM",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/scvmm/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"scvmm",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a Hyper-V SCVMM",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/scvmm/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"scvmm",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of Hyper-V SCVMM"
												}
											]
										},
										"description": "Update SCVMM with specified properties"
									},
									"response": [
										{
											"name": "Return details about virtual machine.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/scvmm/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"scvmm",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Refresh Hyper-V SCVMM metadata",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/scvmm/:id/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"scvmm",
												":id",
												"refresh"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Hyper-V SCVMM"
												}
											]
										},
										"description": "Create a job to refresh the metadata for the specified Hyper-V SCVMM"
									},
									"response": [
										{
											"name": "Request ID of the scheduled Hyper-V SCVMM refresh job.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/scvmm/:id/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"scvmm",
														":id",
														"refresh"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get summary of all the Hyper-V SCVMMs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hyperv/scvmm?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hyperv",
										"scvmm"
									],
									"query": [
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search SCVMM by SCVMM name."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Direct,Unassigned)"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Sort the result by the given attribute. (This can only be one of effectiveSlaDomainName,name)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Get summary of all the Hyper-V SCVMMs"
							},
							"response": [
								{
									"name": "List of Hyper-V SCVMM summaries",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/scvmm?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"scvmm"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Register a Hyper-V SCVMM",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hyperv/scvmm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hyperv",
										"scvmm"
									]
								},
								"description": "Register a Hyper-V SCVMM."
							},
							"response": [
								{
									"name": "Status for the add Hyper-V SCVMM request.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/scvmm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"scvmm"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Hyper-V SCVMM async request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hyperv/scvmm/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hyperv",
										"scvmm",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the request"
										}
									]
								},
								"description": "Get details about a Hyper-V SCVMM related async request."
							},
							"response": [
								{
									"name": "Status for the async request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/scvmm/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"scvmm",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "vm",
					"item": [
						{
							"name": "snapshot",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Delete VM snapshot",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id?location=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														"snapshot",
														":id"
													],
													"query": [
														{
															"key": "location",
															"value": "",
															"description": "(Required) Snapshot location to delete. Use **_local_** to delete all local snapshots and **_all_** to delete the snapshot in all locations. (This can only be one of all,local)"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of snapshot"
														}
													]
												},
												"description": "Delete a snapshot by expiring it. Snapshot is expired only if it is a manual snapshot or a snapshot of an unprotected vm."
											},
											"response": [
												{
													"name": "Snapshot successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id?location=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																":id"
															],
															"query": [
																{
																	"key": "location",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get VM snapshot details",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														"snapshot",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of snapshot"
														}
													]
												},
												"description": "Retrieve detailed information about a snapshot."
											},
											"response": [
												{
													"name": "Returns details about a snapshot",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Restore files from snapshot",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/restore_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														"snapshot",
														":id",
														"restore_files"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a snapshot"
														}
													]
												},
												"description": "Restore files from a snapshot to the original source location"
											},
											"response": [
												{
													"name": "Status of a request for an async restore job",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/restore_files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																":id",
																"restore_files"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Download file from VM snapshot",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/download_file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														"snapshot",
														":id",
														"download_file"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of Snapshot"
														}
													]
												},
												"description": "Create a download file request"
											},
											"response": [
												{
													"name": "Status for the instant recover request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/download_file",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																":id",
																"download_file"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Download files from a Hyper-V VM backup",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/download_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														"snapshot",
														":id",
														"download_files"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID assigned to a Hyper-V VM backup object"
														}
													]
												},
												"description": "Start an asynchronous job to download multiple files and folders from a specified Hyper-V VM backup. The response returns an asynchrounous request ID. Get the URL for downloading the ZIP file including the specific files/folders by sending a GET request to 'hyperv/vm/request/{id}'."
											},
											"response": [
												{
													"name": "Status of an async job to download files and folders from a Hyper-V VM backup.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/download_files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																":id",
																"download_files"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Lists all files in VM snapshot",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/browse?path=&offset=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														"snapshot",
														":id",
														"browse"
													],
													"query": [
														{
															"key": "path",
															"value": "",
															"description": "(Required) The absolute path to start the directory listing from."
														},
														{
															"key": "offset",
															"value": "",
															"description": "Starting position in the list of path entries contained in the query results, sorted by lexicographical order. The response includes the specified numbered entry and all higher numbered entries."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Maximum number of entries in the response."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of snapshot"
														}
													]
												},
												"description": "Lists all files and directories in a given path"
											},
											"response": [
												{
													"name": "List of files and directories at the specified path.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/browse?path=&offset=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																":id",
																"browse"
															],
															"query": [
																{
																	"key": "path",
																	"value": ""
																},
																{
																	"key": "offset",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a live mount request",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/mount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														"snapshot",
														":id",
														"mount"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of Snapshot"
														}
													]
												},
												"description": "Create a live mount request with given configuration"
											},
											"response": [
												{
													"name": "Status for the mount request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/mount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																":id",
																"mount"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Creates a download from archival request.",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														"snapshot",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of snapshot"
														}
													]
												},
												"description": "Download a snapshot from archival."
											},
											"response": [
												{
													"name": "Status for the download request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/download",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																":id",
																"download"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Export VM snapshot",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														"snapshot",
														":id",
														"export"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of snapshot"
														}
													]
												},
												"description": "Export snapshot of a vm."
											},
											"response": [
												{
													"name": "Status for the export request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/export",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																":id",
																"export"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Creates an instant recover request that restores a target VM from the given Rubrik-hosted-snapshot.",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/instant_recover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														"snapshot",
														":id",
														"instant_recover"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of Snapshot"
														}
													]
												},
												"description": "The VM will be started with networking enabled. If the VM does not exist anymore, a new VM will be created."
											},
											"response": [
												{
													"name": "Status for the instant recover request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/:id/instant_recover",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																":id",
																"instant_recover"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "mount",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Requst to delete a live mount",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/mount/:id?force=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																"mount",
																":id"
															],
															"query": [
																{
																	"key": "force",
																	"value": "",
																	"description": "Force unmount to deal with situations where host has been moved."
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of the mount to remove"
																}
															]
														},
														"description": "Create a request to delete a live mount"
													},
													"response": [
														{
															"name": "Status for the unmount request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/hyperv/vm/snapshot/mount/:id?force=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"hyperv",
																		"vm",
																		"snapshot",
																		"mount",
																		":id"
																	],
																	"query": [
																		{
																			"key": "force",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get summary information for a live mount",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/mount/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																"mount",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of the live mount"
																}
															]
														},
														"description": "Retrieve the following summary information for a specified live mount: ID, snapshot date, ID of source VM, name of source VM, ID of source host, status of the mount, mount event ID, and unmount event ID."
													},
													"response": [
														{
															"name": "Returns detail information for a specified live mount.",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/hyperv/vm/snapshot/mount/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"hyperv",
																		"vm",
																		"snapshot",
																		"mount",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Power a Live Mount on and off",
													"request": {
														"method": "PATCH",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/mount/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																"mount",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "schema type not provided",
																	"description": "(Required) ID of a Live Mount."
																}
															]
														},
														"description": "Power a specified Live Mount virtual machine on or off. Pass **_true_** to power the virtual machine on and pass **_false_** to power the virtual machine off."
													},
													"response": [
														{
															"name": "Details of the Live Mount.",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/hyperv/vm/snapshot/mount/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"hyperv",
																		"vm",
																		"snapshot",
																		"mount",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get summary information for all live mounts",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/snapshot/mount?vm_id=&vm_name=&sort_by=&sort_order=&offset=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														"snapshot",
														"mount"
													],
													"query": [
														{
															"key": "vm_id",
															"value": "",
															"description": "Filters live mounts by VM ID"
														},
														{
															"key": "vm_name",
															"value": "",
															"description": "Filters live mounts by VM name"
														},
														{
															"key": "sort_by",
															"value": "",
															"description": "Attribute used to sort Hyper-V snapshot mounts. (This can only be one of SnapshotDate,VmName,MountedVmName,PowerStatus)"
														},
														{
															"key": "sort_order",
															"value": "",
															"description": "Sort order, either ascending or descending. (This can only be one of asc,desc)"
														},
														{
															"key": "offset",
															"value": "",
															"description": "Ignore these many matches in the beginning."
														},
														{
															"key": "limit",
															"value": "",
															"description": "Limit the number of matches returned. Default is 25."
														}
													]
												},
												"description": "Retrieve the following information for all live mounts: ID, snapshot date, ID of source VM, name of source VM, ID of source host, status of the mount, mount event ID, and unmount event ID."
											},
											"response": [
												{
													"name": "Returns summary information for all live mounts.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/snapshot/mount?vm_id=&vm_name=&sort_by=&sort_order=&offset=&limit=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																"snapshot",
																"mount"
															],
															"query": [
																{
																	"key": "vm_id",
																	"value": ""
																},
																{
																	"key": "vm_name",
																	"value": ""
																},
																{
																	"key": "sort_by",
																	"value": ""
																},
																{
																	"key": "sort_order",
																	"value": ""
																},
																{
																	"key": "offset",
																	"value": ""
																},
																{
																	"key": "limit",
																	"value": ""
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "snapshot",
									"item": [
										{
											"name": "Create on-demand VM snapshot",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the VM"
														}
													]
												},
												"description": "Create an on-demand snapshot for the given VM ID"
											},
											"response": [
												{
													"name": "Status for the backup request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete all snapshots of VM",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) Virtual machine ID"
														}
													]
												},
												"description": "Delete all snapshots of a virtual machine"
											},
											"response": [
												{
													"name": "Snapshots successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get list of snapshots of VM",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the vm"
														}
													]
												},
												"description": "Retrieve the following information for all snapshots for a VM: ID, snapshot date, expiration date, type of source object, Name of VM, Name of fileset, type of snapshot, state of the cloud, level of consistency, name of snapshot VM, Index of state, total number of file, IDs of all replication location, IDs of all archival location."
											},
											"response": [
												{
													"name": "Returns summary information for all snapshots.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/hyperv/vm/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"hyperv",
																"vm",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get VM details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/vm/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"vm",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Virtual Machine."
												}
											]
										},
										"description": "Detailed view of a VM"
									},
									"response": [
										{
											"name": "Return details about the Virtual machine.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update VM",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/vm/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"vm",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of Virtual Machine"
												}
											]
										},
										"description": "Update VM with specified properties"
									},
									"response": [
										{
											"name": "Return details about virtual machine.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get details about missed snapshots for a VM",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/vm/:id/missed_snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"vm",
												":id",
												"missed_snapshot"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the vm"
												}
											]
										},
										"description": "Retrieve the time of the day when the snapshots were missed specific to a vm."
									},
									"response": [
										{
											"name": "Returns details about missed snapshots for a VM.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/:id/missed_snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														":id",
														"missed_snapshot"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Search for file in VM",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/vm/:id/search?path=&limit=&cursor=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"vm",
												":id",
												"search"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) The path query. Either path prefix or filename prefix."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Maximum number of entries in the response."
												},
												{
													"key": "cursor",
													"value": "",
													"description": "Pagination cursor returned by the previous request."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the vm"
												}
											]
										},
										"description": "Search for a file within the Virtual Machine. Search via full path prefix or filename prefix."
									},
									"response": [
										{
											"name": "Search results",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/:id/search?path=&limit=&cursor=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														":id",
														"search"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														},
														{
															"key": "cursor",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Register the agent installed in VM",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/vm/:id/register_agent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"vm",
												":id",
												"register_agent"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Virtual Machine"
												}
											]
										},
										"description": "Register the agent that installed in VM"
									},
									"response": [
										{
											"name": "The VM agent is registered successfully",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/vm/:id/register_agent",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"vm",
														":id",
														"register_agent"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get list of VMs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hyperv/vm?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&is_relic=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hyperv",
										"vm"
									],
									"query": [
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search vm by vm name."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "is_relic",
											"value": "",
											"description": "Filter the summary information based on the relic status of the VM. Returns both relic and non relic if the parameter is not set."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Sort the result by the given attribute. (This can only be one of effectiveSlaDomainName,name)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Get summary of all the VMs"
							},
							"response": [
								{
									"name": "Get page summary about virtual machine",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/vm?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&is_relic=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"vm"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "is_relic",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get VM async request details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hyperv/vm/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hyperv",
										"vm",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the request"
										}
									]
								},
								"description": "Get details about a Hyper-V vm related async request."
							},
							"response": [
								{
									"name": "Status for the async request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/vm/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"vm",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cluster",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get details of a Hyper-V cluster",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/cluster/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"cluster",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Hyper-V cluster"
												}
											]
										},
										"description": "Get details of a Hyper-V cluster"
									},
									"response": [
										{
											"name": "Details about the Hyper-V cluster",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/cluster/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"cluster",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Hyper-V cluster",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/cluster/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"cluster",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of Hyper-V cluster"
												}
											]
										},
										"description": "Update cluster with specified properties"
									},
									"response": [
										{
											"name": "Return details about virtual machine.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/cluster/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"cluster",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get summary of all the Hyper-V hlusters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hyperv/cluster?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hyperv",
										"cluster"
									],
									"query": [
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search vm by vm name."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "A comma-separated list of attributes to sort the results on (This can only be one of effectiveSlaDomainName,name)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Get summary of all the Hyper-V hlusters"
							},
							"response": [
								{
									"name": "List of Hyper-V cluster summaries",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/cluster?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"cluster"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "hierarchy/{id}",
					"item": [
						{
							"name": "Get summary of a hierarchy object",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hyperv/hierarchy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hyperv",
										"hierarchy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the hierarchy object"
										}
									]
								},
								"description": "Retrieve details for the specified hierarchy object."
							},
							"response": [
								{
									"name": "Details of the hierarchy object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/hierarchy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"hierarchy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of immediate descendant objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hyperv/hierarchy/:id/children?effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&status=&sort_by=&sort_order=&snappable_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hyperv",
										"hierarchy",
										":id",
										"children"
									],
									"query": [
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain"
										},
										{
											"key": "object_type",
											"value": "",
											"description": "Filter by node object type (This can only be one of scvmm,hostOrCluster,cluster,host,vm)"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search vm by vm name."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "status",
											"value": "",
											"description": "Filter by status"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Attribute to sort the results on (This can only be one of effectiveSlaDomainName,name,descendentCount.cluster,descendentCount.host,descendentCount.vm)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										},
										{
											"key": "snappable_status",
											"value": "",
											"description": "Filters Hyper-V hierarchy objects based on the specified query value. (This can only be one of Protectable)"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the parent Hyper-V hierarchy object. To get top-level nodes, use **root** as the ID."
										}
									]
								},
								"description": "Retrieve the list of immediate descendant objects for the specified parent"
							},
							"response": [
								{
									"name": "Summary list of descendant objects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/hierarchy/:id/children?effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&status=&sort_by=&sort_order=&snappable_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"hierarchy",
												":id",
												"children"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "object_type",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "status",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "snappable_status",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of descendant objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hyperv/hierarchy/:id/descendants?effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&status=&sort_by=&sort_order=&snappable_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hyperv",
										"hierarchy",
										":id",
										"descendants"
									],
									"query": [
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain"
										},
										{
											"key": "object_type",
											"value": "",
											"description": "Filter by node object type (This can only be one of scvmm,hostOrCluster,cluster,host,vm)"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search vm by vm name."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "status",
											"value": "",
											"description": "Filter by status"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Attribute to sort the results on (This can only be one of effectiveSlaDomainName,name,descendentCount.cluster,descendentCount.host,descendentCount.vm)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										},
										{
											"key": "snappable_status",
											"value": "",
											"description": "Filters Hyper-V hierarchy objects based on the specified query value. (This can only be one of Protectable)"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the parent Hyper-V hierarchy object"
										}
									]
								},
								"description": "Retrieve the list of descendant objects for the specified parent"
							},
							"response": [
								{
									"name": "Summary list of descendant objects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/hierarchy/:id/descendants?effective_sla_domain_id=&object_type=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&status=&sort_by=&sort_order=&snappable_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"hierarchy",
												":id",
												"descendants"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "object_type",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "status",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "snappable_status",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "host",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get details of a Hyper-V host",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/host/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"host",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Hyper-V host"
												}
											]
										},
										"description": "Get details of a Hyper-V host"
									},
									"response": [
										{
											"name": "Details about the Hyper-V host",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/host/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"host",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Hyper-V host",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/host/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"host",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of Hyper-V host"
												}
											]
										},
										"description": "Update host with specified properties"
									},
									"response": [
										{
											"name": "Return details about virtual machine.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/host/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"host",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Refresh Hyper-V host metadata",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/host/:id/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"host",
												":id",
												"refresh"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Hyper-V host"
												}
											]
										},
										"description": "Create a job to refresh the metadata for the specified Hyper-V host"
									},
									"response": [
										{
											"name": "Job Instance ID of the scheduled Hyper-V host refresh job.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/hyperv/host/:id/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hyperv",
														"host",
														":id",
														"refresh"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get summary of all the Hyper-V hosts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hyperv/host?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hyperv",
										"host"
									],
									"query": [
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search vm by vm name."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Sort the result by the given attribute. (This can only be one of effectiveSlaDomainName,name)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Get summary of all the Hyper-V hosts"
							},
							"response": [
								{
									"name": "List of Hyper-V host summaries",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/host?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"host"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Hyper-V host async request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hyperv/host/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hyperv",
										"host",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the request"
										}
									]
								},
								"description": "Get details about a Hyper-V host related async request."
							},
							"response": [
								{
									"name": "Status for the async request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hyperv/host/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hyperv",
												"host",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "aws",
			"item": [
				{
					"name": "ec2 instance",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "snapshot",
									"item": [
										{
											"name": "Initiate on-demand snapshot for EC2 instance",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the EC2 instance object"
														}
													]
												},
												"description": "Use the object ID for an EC2 instance to Initiate an on-demand snapshot."
											},
											"response": [
												{
													"name": "Job status for an EC2 on-demand snapshot request",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/aws/ec2_instance/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"aws",
																"ec2_instance",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete all snapshots of an EC2 instance",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the EC2 instance object"
														}
													]
												},
												"description": "Delete all snapshots of an EC2 instance. To perform this action, the EC2 instance cannot currently be assigned to an SLA Domain."
											},
											"response": [
												{
													"name": "Successfully deleted all snapshots for an EC2 instance",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/aws/ec2_instance/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"aws",
																"ec2_instance",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get snapshot list for EC2 instance",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the EC2 instance object"
														}
													]
												},
												"description": "Retrieve information about all of the snapshots of a specified EC2 instance."
											},
											"response": [
												{
													"name": "Information about all snapshots for an EC2 instance",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/aws/ec2_instance/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"aws",
																"ec2_instance",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get EC2 instance details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the EC2 Instance."
												}
											]
										},
										"description": "Retrieve details of an EC2 instance object."
									},
									"response": [
										{
											"name": "Return details about the AWS EC2 instance.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update EC2 instance",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an EC2 instance object."
												}
											]
										},
										"description": "Update the configuration of a specific EC2 instance object with specified properties."
									},
									"response": [
										{
											"name": "Return details about the AWS EC2 instance.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Search for file in an EC2 instance",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/:id/search?path=&limit=&cursor=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												":id",
												"search"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) String value to use when searching an EC2 instance.The value can be a 'path prefix' that narrows the search range to all files that are hierarchically beneath the specified path. Or, the value can be a 'filename prefix' that narrows the search range to all files with a filename that starts with the specified string value."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Maximum number of entries in the response."
												},
												{
													"key": "cursor",
													"value": "",
													"description": "Pagination cursor returned by the previous request."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the EC2 instance object"
												}
											]
										},
										"description": "Search across all the snapshots for a file within the EC2 instance. Search by using a full path prefix or a filename prefix."
									},
									"response": [
										{
											"name": "Search results for specified EC2 instance",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/:id/search?path=&limit=&cursor=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														":id",
														"search"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														},
														{
															"key": "cursor",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get missed snapshots for an EC2 instance",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/:id/missed_snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												":id",
												"missed_snapshot"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of an EC2 instance object"
												}
											]
										},
										"description": "Retrieve details about missed policy-driven snapshots for an EC2 instance."
									},
									"response": [
										{
											"name": "Missed snapshots for an EC2 instance",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/:id/missed_snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														":id",
														"missed_snapshot"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Restore in-place an EC2 instance",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/:id/inplace_restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												":id",
												"inplace_restore"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an EC2 instance object."
												}
											]
										},
										"description": "Initiate the in-place restore of an EC2 instance from a given snapshot."
									},
									"response": [
										{
											"name": "Status of an asynchronous request for an EC2 object.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/:id/inplace_restore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														":id",
														"inplace_restore"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get EC2 storage volumes",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/:id/storage_volume?limit=&offset=&volume_path=&sort_by=&sort_order=&root_volume=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												":id",
												"storage_volume"
											],
											"query": [
												{
													"key": "limit",
													"value": "",
													"description": "Return only the specified number of objects from the query results."
												},
												{
													"key": "offset",
													"value": "",
													"description": "Return a subset of the query results, starting with the specified number in the sequence of results."
												},
												{
													"key": "volume_path",
													"value": "",
													"description": "Search for AWS storage volume objects by matching a string to a part of the device path of the storage volume object."
												},
												{
													"key": "sort_by",
													"value": "",
													"description": "Specify an attribute to use to sort the query results. (This can only be one of VolumePath,VolumeId,VolumeSize)"
												},
												{
													"key": "sort_order",
													"value": "",
													"description": "Specify the sort order to use when sorting query results. (This can only be one of asc,desc)"
												},
												{
													"key": "root_volume",
													"value": "",
													"description": "Filter by whether volume is root"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an EC2 instance object."
												}
											]
										},
										"description": "Retrieve summary information for all storage volume objects of an EC2 instance object."
									},
									"response": [
										{
											"name": "Storage volumes for an EC2 instance",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/:id/storage_volume?limit=&offset=&volume_path=&sort_by=&sort_order=&root_volume=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														":id",
														"storage_volume"
													],
													"query": [
														{
															"key": "limit",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "volume_path",
															"value": ""
														},
														{
															"key": "sort_by",
															"value": ""
														},
														{
															"key": "sort_order",
															"value": ""
														},
														{
															"key": "root_volume",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "snapshot/{id}",
							"item": [
								{
									"name": "Delete EC2 instance snapshot",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/snapshot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												"snapshot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of a snapshot object"
												}
											]
										},
										"description": "Delete an EC2 instance snapshot by resetting the retention to cause immediate expiration. The snapshot must be an on-demand snapshot or a snapshot from an EC2 instance that is not currently managed."
									},
									"response": [
										{
											"name": "Successfully deleted an EC2 snapshot",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/snapshot/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														"snapshot",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get details for an EC2 instance snapshot",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/snapshot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												"snapshot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of a snapshot object"
												}
											]
										},
										"description": "Retrieve detailed information about an EC2 instance snapshot."
									},
									"response": [
										{
											"name": "Details of a specified snapshot",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/snapshot/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														"snapshot",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download files from EC2 instance snapshot",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/snapshot/:id/download_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												"snapshot",
												":id",
												"download_files"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of a Snapshot object"
												}
											]
										},
										"description": "Initiate a download request for files in a specified EC2 instance snapshot."
									},
									"response": [
										{
											"name": "Status for the file download request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/snapshot/:id/download_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														"snapshot",
														":id",
														"download_files"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get directories and files in EC2 instance snapshot",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/snapshot/:id/browse?path=&offset=&limit=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												"snapshot",
												":id",
												"browse"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) Absolute path value that specifies a point in the directory hierarchy to begin the directory and file listing."
												},
												{
													"key": "offset",
													"value": "",
													"description": "Starting position in the list of path entries contained in the query results, sorted by lexicographical order. The response includes the specified numbered entry and all higher numbered entries."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Maximum number of entries in the response."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of a snapshot object"
												}
											]
										},
										"description": "Retrieve a directory and file listing for a specified EC2 instance snapshot. The listing starts at a point in the directory hierarchy specified by an absolute path value."
									},
									"response": [
										{
											"name": "List of files and directories at the specified path.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/snapshot/:id/browse?path=&offset=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														"snapshot",
														":id",
														"browse"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Export EC2 instance snapshot",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/snapshot/:id/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												"snapshot",
												":id",
												"export"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of a snapshot object"
												}
											]
										},
										"description": "Export a specified snapshot of an EC2 instance."
									},
									"response": [
										{
											"name": "Status for the export request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/ec2_instance/snapshot/:id/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"ec2_instance",
														"snapshot",
														":id",
														"export"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get EC2 instance objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/ec2_instance?limit=&offset=&name=&effective_sla_domain_id=&sla_assignment=&region=&primary_cluster_id=&is_relic=&sort_by=&sort_order=&include_backup_task_info=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"ec2_instance"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "Return only the specified number of objects from the query results."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Return a subset of the query results, starting with the specified number in the sequence of results."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search for EC2 instance objects by matching a string to a part of the ID or name of the EC2 instance object."
										},
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by effective SLA Domain ID"
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Specifies the method used to apply an SLA Domain to an EC2 instance object. Possible values are Derived, Direct and Unassigned. (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "region",
											"value": "",
											"description": "Filter the query results using the region of the EC2 instance object."
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter the query results by using the ID of the primary Rubrik cluster. Use local to refer to the Rubrik cluster that is hosting the current API session."
										},
										{
											"key": "is_relic",
											"value": "",
											"description": "Filter the summary information based on the relic status of the EC2 instance. Returns both relic and non relic if the parameter is not set."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Specify an attribute to use to sort the query results. (This can only be one of instanceId,instanceName,instanceType,accountName,region,effectiveSlaDomainName,slaAssignment)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Specify the sort order to use when sorting query results. (This can only be one of asc,desc)"
										},
										{
											"key": "include_backup_task_info",
											"value": "",
											"description": "Include backup task information in response"
										}
									]
								},
								"description": "Retrieve summary information for all EC2 instance objects from all AWS account objects."
							},
							"response": [
								{
									"name": "Summary list of EC2 instance objects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance?limit=&offset=&name=&effective_sla_domain_id=&sla_assignment=&region=&primary_cluster_id=&is_relic=&sort_by=&sort_order=&include_backup_task_info=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance"
											],
											"query": [
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "region",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "is_relic",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "include_backup_task_info",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update storage volume protection",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/ec2_instance/:ec2_instance_id/storage_volume/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"ec2_instance",
										":ec2_instance_id",
										"storage_volume",
										":id"
									],
									"variable": [
										{
											"key": "ec2_instance_id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to an EC2 instance object."
										},
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to an AWS storage volume object."
										}
									]
								},
								"description": "Update whether to take snapshots of a specified AWS storage volume object."
							},
							"response": [
								{
									"name": "Updated AWS storage volume object",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/:ec2_instance_id/storage_volume/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												":ec2_instance_id",
												"storage_volume",
												":id"
											],
											"variable": [
												{
													"key": "ec2_instance_id"
												},
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Indexing update of specified EC2 instances",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/ec2_instance/indexing_state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"ec2_instance",
										"indexing_state"
									]
								},
								"description": "Update whether to enable or disable indexing in the specified list of EC2 instances."
							},
							"response": [
								{
									"name": "Successfully updated indexing state of all EC2 instances.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/indexing_state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												"indexing_state"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get request status for EC2 instance",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/ec2_instance/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"ec2_instance",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the request"
										}
									]
								},
								"description": "Retrieve the details of an asynchronous request for an EC2 instance object."
							},
							"response": [
								{
									"name": "Status of an asynchronous request for an EC2 object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/ec2_instance/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"ec2_instance",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "account",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete an AWS account",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/:id?delete_existing_snapshots=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												":id"
											],
											"query": [
												{
													"key": "delete_existing_snapshots",
													"value": "",
													"description": "(Required) Determine whether to delete all existing snapshot data associated with the specified AWS account object. Set to **True** to expire all snapshot data."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of an AWS account object to delete."
												}
											]
										},
										"description": "Delete an AWS account object specified by its ID. Optionally, delete all existing snapshot data at the cloud location associated with the specified AWS account."
									},
									"response": [
										{
											"name": "Created request to delete an AWS account object.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/account/:id?delete_existing_snapshots=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"account",
														":id"
													],
													"query": [
														{
															"key": "delete_existing_snapshots",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get AWS account details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of an AWS account object."
												}
											]
										},
										"description": "Retrieve the details of an AWS account with a specified ID."
									},
									"response": [
										{
											"name": "AWS account details.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/account/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"account",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update an AWS account",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of an AWS account object to update."
												}
											]
										},
										"description": "Provide updated information for a specified AWS account object."
									},
									"response": [
										{
											"name": "Updated AWS account details.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/account/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"account",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Refresh an AWS account",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/:id/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												":id",
												"refresh"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of an AWS account to refresh."
												}
											]
										},
										"description": "Refresh  the information an AWS account object identified by its ID."
									},
									"response": [
										{
											"name": "Created request to refresh an AWS account object.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/account/:id/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"account",
														":id",
														"refresh"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get AWS resources that should get GC.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/:id/garbage_resource?include_instances=&include_volumes=&include_snapshots=&include_images=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												":id",
												"garbage_resource"
											],
											"query": [
												{
													"key": "include_instances",
													"value": "",
													"description": "Whether to include AWS instances in the repsonse."
												},
												{
													"key": "include_volumes",
													"value": "",
													"description": "Whether to include AWS volumes in the repsonse."
												},
												{
													"key": "include_snapshots",
													"value": "",
													"description": "Whether to include AWS snapshots in the repsonse."
												},
												{
													"key": "include_images",
													"value": "",
													"description": "Whether to include AWS images in the repsonse."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) The id of the AWS source that contains the resources."
												}
											]
										},
										"description": "Retrieve AWS IDs for all AWS resources that should get GC."
									},
									"response": [
										{
											"name": "The AWS IDs of the AWS resources returned.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/account/:id/garbage_resource?include_instances=&include_volumes=&include_snapshots=&include_images=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"account",
														":id",
														"garbage_resource"
													],
													"query": [
														{
															"key": "include_instances",
															"value": ""
														},
														{
															"key": "include_volumes",
															"value": ""
														},
														{
															"key": "include_snapshots",
															"value": ""
														},
														{
															"key": "include_images",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get subnets by AWS account",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/:id/subnet?region=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												":id",
												"subnet"
											],
											"query": [
												{
													"key": "region",
													"value": "",
													"description": "(Required) Name of an AWS region."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an AWS account object."
												}
											]
										},
										"description": "Retrieve a list of the subnets available for a specified AWS account ID."
									},
									"response": [
										{
											"name": "Subnets available for a specified AWS account",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/account/:id/subnet?region=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"account",
														":id",
														"subnet"
													],
													"query": [
														{
															"key": "region",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get security groups by AWS account",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/:id/security_group?vpc_id=&region=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												":id",
												"security_group"
											],
											"query": [
												{
													"key": "vpc_id",
													"value": "",
													"description": "(Required) AWS ID for a virtual private cloud (VPC)."
												},
												{
													"key": "region",
													"value": "",
													"description": "(Required) Name of an AWS region."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to an AWS account object."
												}
											]
										},
										"description": "Retrieve a list of the security groups available for a specified AWS account ID."
									},
									"response": [
										{
											"name": "List of security group IDs for a specified AWS account",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/account/:id/security_group?vpc_id=&region=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"account",
														":id",
														"security_group"
													],
													"query": [
														{
															"key": "vpc_id",
															"value": ""
														},
														{
															"key": "region",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "dca",
							"item": [
								{
									"name": "Add a DCA AWS account. A DCA AWS account is an aws account which has a DCA region.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/dca",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												"dca"
											]
										},
										"description": "Add a DCA AWS account object using specified configuration."
									},
									"response": [
										{
											"name": "Created request to add a DCA AWS account.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/account/dca",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"account",
														"dca"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a DCA AWS account",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/dca/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												"dca",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of a DCA AWS account object to update."
												}
											]
										},
										"description": "Provide updated information for a specified DCA AWS account object."
									},
									"response": [
										{
											"name": "Updated AWS account details.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/aws/account/dca/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"account",
														"dca",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Add an AWS account.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"account"
									]
								},
								"description": "Add an AWS account object using specified configuration."
							},
							"response": [
								{
									"name": "Created request to add an AWS account.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get information for AWS accounts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/account?limit=&offset=&name=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"account"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "Return only the specified number of objects from the query results"
										},
										{
											"key": "offset",
											"value": "",
											"description": "Return a subset of the query results, starting with the specified number in the sequence of results"
										},
										{
											"key": "name",
											"value": "",
											"description": "Search for AWS account objects by matching a string to a part of the name of the AWS account object."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Specify an attribute to use to sort the returned AWS account objects. (This can only be one of Name,Status)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Specify the sort order for the returned set of AWS account objects. (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Retrieve information for each AWS account object. Optionally, sort the set of returned objects."
							},
							"response": [
								{
									"name": "Summary information for AWS accounts.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account?limit=&offset=&name=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account"
											],
											"query": [
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get AWS account request details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/account/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"account",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an asynchronous request."
										}
									]
								},
								"description": "Retrieve the details about a specified asynchronous request for an AWS account object."
							},
							"response": [
								{
									"name": "Status of an asynchronous request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get security groups by AWS account",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/account/security_group?access_key=&secret_key=&region=&vpc_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"account",
										"security_group"
									],
									"query": [
										{
											"key": "access_key",
											"value": "",
											"description": "(Required) AWS Access key."
										},
										{
											"key": "secret_key",
											"value": "",
											"description": "(Required) AWS Secret key."
										},
										{
											"key": "region",
											"value": "",
											"description": "(Required) AWS region."
										},
										{
											"key": "vpc_id",
											"value": "",
											"description": "(Required) AWS ID for a virtual private cloud (VPC)."
										}
									]
								},
								"description": "Retrieve a list of the security groups available for a specified AWS account."
							},
							"response": [
								{
									"name": "List of security group IDs for a specified AWS account",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/security_group?access_key=&secret_key=&region=&vpc_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												"security_group"
											],
											"query": [
												{
													"key": "access_key",
													"value": ""
												},
												{
													"key": "secret_key",
													"value": ""
												},
												{
													"key": "region",
													"value": ""
												},
												{
													"key": "vpc_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get subnets by AWS account",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/account/subnet?access_key=&secret_key=&region=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"account",
										"subnet"
									],
									"query": [
										{
											"key": "access_key",
											"value": "",
											"description": "(Required) AWS Access key."
										},
										{
											"key": "secret_key",
											"value": "",
											"description": "(Required) AWS Secret key."
										},
										{
											"key": "region",
											"value": "",
											"description": "(Required) Name of an AWS region."
										}
									]
								},
								"description": "Retrieve a list of the subnets available for a specified AWS account."
							},
							"response": [
								{
									"name": "Subnets available for the specified AWS crednetials",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/account/subnet?access_key=&secret_key=&region=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"account",
												"subnet"
											],
											"query": [
												{
													"key": "access_key",
													"value": ""
												},
												{
													"key": "secret_key",
													"value": ""
												},
												{
													"key": "region",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "hierarchy/{id}",
					"item": [
						{
							"name": "Get summary of a hierarchy object",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/hierarchy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"hierarchy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an AWS instance object."
										}
									]
								},
								"description": "Retrieve details for the specified hierarchy object."
							},
							"response": [
								{
									"name": "Hierarchy details for an AWS instance object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/hierarchy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"hierarchy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get full hierarchy for AWS account object",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/hierarchy/:id/descendants?limit=&offset=&name=&region=&sla_assignment=&effective_sla_domain_id=&primary_cluster_id=&sort_by=&sort_order=&snappable_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"hierarchy",
										":id",
										"descendants"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "Return only the specified number of objects from the query results."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Return a subset of the query results, starting with the specified number in the sequence of results."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search for AWS account and instance objects by matching a string to a part of the name of the AWS account object and to a part of the name or ID of the AWS instance object."
										},
										{
											"key": "region",
											"value": "",
											"description": "Filter the query results using the region of the AWS instance object."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Specifies the method used to apply an SLA Domain to an object. Possible values are Derived, Direct, and Unassigned. (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter query results using the effective SLA Domain ID of the objects."
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter the query results by using the ID of the primary Rubrik cluster. Use local to refer to the Rubrik cluster that is hosting the current API session."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Specify an attribute to use to sort the query results. (This can only be one of name,accountName,instanceId,instanceName,instanceType,region,effectiveSlaDomainName,slaAssignment,descendantCountEc2Instance)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Specify the sort order to use when sorting query results. (This can only be one of asc,desc)"
										},
										{
											"key": "snappable_status",
											"value": "",
											"description": "Determines whether to fetch AWS hierarchy objects with additional privilege checks. (This can only be one of Protectable)"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an AWS account object. To specify the primary AWS account object, use root."
										}
									]
								},
								"description": "Retrieve summary information for all AWS instance objects that are descendants of a specified AWS account object."
							},
							"response": [
								{
									"name": "Descendant objects of an AWS account object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/hierarchy/:id/descendants?limit=&offset=&name=&region=&sla_assignment=&effective_sla_domain_id=&primary_cluster_id=&sort_by=&sort_order=&snappable_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"hierarchy",
												":id",
												"descendants"
											],
											"query": [
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "region",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "snappable_status",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get direct children of AWS account object",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aws/hierarchy/:id/children?limit=&offset=&name=&region=&sla_assignment=&effective_sla_domain_id=&primary_cluster_id=&sort_by=&sort_order=&snappable_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"hierarchy",
										":id",
										"children"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "Return only the specified number of objects from the query results."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Return a subset of the query results, starting with the specified number in the sequence of results."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search for AWS account and instance objects by matching a string to a part of the name of the AWS account object and to a part of the name or ID of the AWS instance object."
										},
										{
											"key": "region",
											"value": "",
											"description": "Filter the query results using the region of the AWS instance object."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Specifies the method used to apply an SLA Domain to an object. Possible values are Derived, Direct, and Unassigned. (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter query results using the effective SLA Domain ID of the objects."
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter the query results by using the ID of the primary Rubrik cluster. Use local to refer to the Rubrik cluster that is hosting the current API session."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Specify an attribute to use to sort the query results. (This can only be one of name,accountName,instanceId,instanceName,instanceType,region,effectiveSlaDomainName,slaAssignment,descendantCountEc2Instance)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Specify the sort order to use when sorting query results. (This can only be one of asc,desc)"
										},
										{
											"key": "snappable_status",
											"value": "",
											"description": "Determines whether to fetch AWS hierarchy objects with additional privilege checks. (This can only be one of Protectable)"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of an AWS account object. To specify the primary AWS account object, use root."
										}
									]
								},
								"description": "Retrieve summary information for all AWS instance objects that are direct children of a specified AWS account object."
							},
							"response": [
								{
									"name": "Get all the immediate children objects of the given parent AWS Object Node",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/aws/hierarchy/:id/children?limit=&offset=&name=&region=&sla_assignment=&effective_sla_domain_id=&primary_cluster_id=&sort_by=&sort_order=&snappable_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"hierarchy",
												":id",
												"children"
											],
											"query": [
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "region",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "snappable_status",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "event series",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "(CAUTION! WE ARE DEPRECATING THIS ENDPOINT) Get information for a specific event",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event_series/:id/status?job_instance_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event_series",
										":id",
										"status"
									],
									"query": [
										{
											"key": "job_instance_id",
											"value": "",
											"description": "The job instance ID (job_instance_id) of the corresponding job instance."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) Event series ID (event_series_id) of the event"
										}
									]
								},
								"description": "Use the event series ID and jobInstanceId for an event to retrieve information about the event, including ID, progress, cancelable, cancel pending, and the number of times the event has been attempted. JobInstanceId can be left unspecified in case of a non job related event, but is expected for a job related event."
							},
							"response": [
								{
									"name": "Information for the event specified by event_series_id",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/event_series/:id/status?job_instance_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event_series",
												":id",
												"status"
											],
											"query": [
												{
													"key": "job_instance_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "(CAUTION! WE ARE DEPRECATING THIS ENDPOINT) Cancel an event",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event_series/:id/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event_series",
										":id",
										"cancel"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) The Event Series ID (event_series_id) of the event"
										}
									]
								},
								"description": "Request cancellation of an event. To succeed, the 'isCancelable' parameter of the event must be 'true'. Uses the event series ID and jobInstanceId to retrieve information about an event. JobInstnceId can be left unspecified in case of a non job related event, but is expected for a job related event."
							},
							"response": [
								{
									"name": "The specified event is canceled",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/event_series/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event_series",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get information for several events",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/event_series/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event_series",
								"status"
							]
						},
						"description": "Use the event series IDs and jobInstanceIds of several events to retrieve information about each event, including ID, progress, cancelable, cancel pending, and the number of times the event has been attempted. JobInstanceId can be left unspecified in case of non job related events, but is expected for all job related events."
					},
					"response": [
						{
							"name": "Returns information for the events specified by event_series_ids.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event_series/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event_series",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "replication",
			"item": [
				{
					"name": "target",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Remove the replication target.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/replication/target/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replication",
												"target",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the replication target."
												}
											]
										},
										"description": "Remove the replication target from this cluster."
									},
									"response": [
										{
											"name": "Returned if the request fails",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/replication/target/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"replication",
														"target",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Successfully removed the replication target.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/replication/target/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"replication",
														"target",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get summary for the replication target.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/replication/target/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replication",
												"target",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the replication target."
												}
											]
										},
										"description": "Retrieve the ID, name, and address of the replication target."
									},
									"response": [
										{
											"name": "Returns summary details for the replication target..",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/replication/target/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"replication",
														"target",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update the replication target information.",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/replication/target/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replication",
												"target",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the replication target."
												}
											]
										},
										"description": "Update the setup information, address, username, and password for the replication target."
									},
									"response": [
										{
											"name": "Returns summary of updated replication target.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/replication/target/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"replication",
														"target",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Configure a replication target",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/replication/target",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replication",
										"target"
									]
								},
								"description": "Provide an address, network setup, username, and password to configure and enable a replication target. Network setup must be either 'NAT' or 'Private Network'. WARNING: This will fail if there is already an existing replication target."
							},
							"response": [
								{
									"name": "Replication target at <targetClusterAddress> successfully added.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/replication/target",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replication",
												"target"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request fails",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/replication/target",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replication",
												"target"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get summary of current replication target.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/replication/target?name=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replication",
										"target"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filters the retrieved list of replication targets by replication target name."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Specifies the attribute to use when sorting the retrieved list of replication targets. Optionally, use **_sort_order_** to sort the list in ascending(asc) or descending(desc) order. (This can only be one of name)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending(asc) or descending(desc). (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Retrieve the ID, name, and address for the current replication target."
							},
							"response": [
								{
									"name": "Summary of current replication target.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/replication/target?name=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replication",
												"target"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "global pause",
					"item": [
						{
							"name": "(DEPRECATED) Get global replication pause status\n",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/replication/global_pause",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replication",
										"global_pause"
									]
								},
								"description": "Retrieve the status of the global replication pause for the local Rubrik cluster. Returns true when active and all replication jobs are paused. Returns false when inactive and replication jobs are not paused. This endpoint will be removed in CDM v5.3 in favor of `GET /internal/replication/source` and `GET /internal/replication/source/{id}`.\n"
							},
							"response": [
								{
									"name": "Returns current status of global replication pause.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/replication/global_pause",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replication",
												"global_pause"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "(DEPRECATED) Toggle global replication pause\n",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/replication/global_pause",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replication",
										"global_pause"
									]
								},
								"description": "Start or stop the global replication pause for the local Rubrik cluster. The return value of this call is the new state of the global replication pause. This call must be made on the target cluster. This endpoint will be removed in CDM v5.3 in favor of `POST /v1/replication/location_pause/disable` and `POST /v1/replication/location_pause/enable`.\n"
							},
							"response": [
								{
									"name": "Returns the current status of global replication pause.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/replication/global_pause",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replication",
												"global_pause"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "source",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "REQUIRES SUPPORT TOKEN: Remove a replication source.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/replication/source/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replication",
												"source",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the replication source to be removed."
												}
											]
										},
										"description": "REQUIRES SUPPORT TOKEN: Remove a specified replication source from this Rubrik cluster. A support token is required for this operation"
									},
									"response": [
										{
											"name": "Successfully removed replication source with ID of <sourceClusterUuid>.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/replication/source/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"replication",
														"source",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get summary for a specific replication source.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/replication/source/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replication",
												"source",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of a replication source."
												}
											]
										},
										"description": "Retrieve the ID, name, and address for a specified replication source."
									},
									"response": [
										{
											"name": "Returns summary details for the specified replication source.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/replication/source/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"replication",
														"source",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get summaries for all replication sources.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/replication/source?name=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"replication",
										"source"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "Filters the retrieved list of replication targets by replication target name."
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Specifies the attribute to use when sorting the retrieved list of replication targets. Optionally, use **_sort_order_** to sort the list in ascending(asc) or descending(desc) order. (This can only be one of name)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending(asc) or descending(desc). (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Retrieve the ID, name, and address for each replication source."
							},
							"response": [
								{
									"name": "Returns a list of replication sources.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/replication/source?name=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"replication",
												"source"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "managed volume",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Delete a managed volume",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_volume/:id?preserve_snapshots=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_volume",
										":id"
									],
									"query": [
										{
											"key": "preserve_snapshots",
											"value": "",
											"description": "Flag to indicate whether to convert snapshots of this managed volume to relics or to delete them.  Default is true."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of managed volume."
										}
									]
								},
								"description": "Delete a managed volume."
							},
							"response": [
								{
									"name": "Managed volume sucessfully deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/:id?preserve_snapshots=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												":id"
											],
											"query": [
												{
													"key": "preserve_snapshots",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get details of a managed volume",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_volume/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_volume",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the managed volume."
										}
									]
								},
								"description": "Details of a managed volume."
							},
							"response": [
								{
									"name": "Returns details about a managed volume.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update managed volume",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_volume/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_volume",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of managed volume."
										}
									]
								},
								"description": "Update managed volume with specified properties."
							},
							"response": [
								{
									"name": "Return details about a managed volume.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "End managed volume snapshot",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_volume/:id/end_snapshot?owner_id=&end_snapshot_delay_in_seconds=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_volume",
										":id",
										"end_snapshot"
									],
									"query": [
										{
											"key": "owner_id",
											"value": "",
											"description": "A string representing the owner of a snapshot. The end snapshot request will fail if the owner of the in-flight snapshot is different from the one specified in the request."
										},
										{
											"key": "end_snapshot_delay_in_seconds",
											"value": "",
											"description": "Specifies an interval in seconds. The snapshot will not end before the specified interval elapses. When this value is defined, the end snapshot operation happens asynchronously after the API call returns."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of managed volume."
										}
									]
								},
								"description": "Close a managed volume for writes. A snapshot will be created containing all writes since the last begin-snapshot call."
							},
							"response": [
								{
									"name": "Returns ID of a snapshot",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/:id/end_snapshot?owner_id=&end_snapshot_delay_in_seconds=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												":id",
												"end_snapshot"
											],
											"query": [
												{
													"key": "owner_id",
													"value": ""
												},
												{
													"key": "end_snapshot_delay_in_seconds",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get information about the currently in-flight snapshot.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_volume/:id/inflight_snapshot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_volume",
										":id",
										"inflight_snapshot"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the managed volume."
										}
									]
								},
								"description": "Returns summary information about the in-flight snapshot if the managed volume is open for write operations. When the managed volume is in any other state, returns a 404 error."
							},
							"response": [
								{
									"name": "Return information about the in-flight snapshot.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/:id/inflight_snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												":id",
												"inflight_snapshot"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Search for files in a managed volume",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_volume/:id/search?path=&limit=&cursor=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_volume",
										":id",
										"search"
									],
									"query": [
										{
											"key": "path",
											"value": "",
											"description": "(Required) The path query. Either path prefix or filename prefix."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Maximum number of entries in the response."
										},
										{
											"key": "cursor",
											"value": "",
											"description": "Pagination cursor returned by the previous request."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the managed volume"
										}
									]
								},
								"description": "Search a managed volume for files"
							},
							"response": [
								{
									"name": "Search results",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/:id/search?path=&limit=&cursor=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												":id",
												"search"
											],
											"query": [
												{
													"key": "path",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "cursor",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get summary information for snapshots of a managed volume.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_volume/:id/snapshot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_volume",
										":id",
										"snapshot"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the managed volume."
										}
									]
								},
								"description": "Returns a list of summary information for snapshots of a managed volume."
							},
							"response": [
								{
									"name": "Returns summary information for snapshots.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/:id/snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												":id",
												"snapshot"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Begin managed volume snapshot",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_volume/:id/begin_snapshot?owner_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_volume",
										":id",
										"begin_snapshot"
									],
									"query": [
										{
											"key": "owner_id",
											"value": "",
											"description": "A string representing the owner of a snapshot. This owner ID must be used while adding a reference to this snapshot."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of managed volume."
										}
									]
								},
								"description": "Opens the managed volume for writes. All writes to the managed volume until next end-snapshot call will be part of this snapshot."
							},
							"response": [
								{
									"name": "The managed volume is opened for writes",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/:id/begin_snapshot?owner_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												":id",
												"begin_snapshot"
											],
											"query": [
												{
													"key": "owner_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "snapshot",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete a managed volume snapshot",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/snapshot/:id?location=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												"snapshot",
												":id"
											],
											"query": [
												{
													"key": "location",
													"value": "",
													"description": "Snapshot location to delete. Use **_local_** to delete all local snapshots and **_all_** to delete the snapshot in all locations. Defaults to **_all_** if not set. (This can only be one of all,local)"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Delete a managed volume snapshot"
									},
									"response": [
										{
											"name": "Snapshot sucessfully deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/managed_volume/snapshot/:id?location=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed_volume",
														"snapshot",
														":id"
													],
													"query": [
														{
															"key": "location",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get managed volume snapshot details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/snapshot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												"snapshot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Retrieve detailed information about a snapshot."
									},
									"response": [
										{
											"name": "Returns details about a snapshot",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/managed_volume/snapshot/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed_volume",
														"snapshot",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create a download managed volume snapshot from archival request",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/snapshot/:id/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												"snapshot",
												":id",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Create a download managed volume snapshot from archival request."
									},
									"response": [
										{
											"name": "Status for the download request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/managed_volume/snapshot/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed_volume",
														"snapshot",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create a request to export a snapshot",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/snapshot/:id/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												"snapshot",
												":id",
												"export"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot."
												}
											]
										},
										"description": "Export a managed volume snapshot as a share."
									},
									"response": [
										{
											"name": "Status for the export request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/managed_volume/snapshot/:id/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed_volume",
														"snapshot",
														":id",
														"export"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download files from a managed volume backup",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/snapshot/:id/download_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												"snapshot",
												":id",
												"download_files"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a managed volume backup object."
												}
											]
										},
										"description": "Start an asynchronous job to download multiple files and folders from a specified managed volume backup. The response returns an asynchronous request ID. Get the URL for downloading the ZIP file including the specific files/folders by sending a GET request to 'managed-volume/request/{id}'."
									},
									"response": [
										{
											"name": "Status of an asynchronous job to download files and folders from a managed volume backup.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/managed_volume/snapshot/:id/download_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed_volume",
														"snapshot",
														":id",
														"download_files"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download file from Managed volume snapshot",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/snapshot/:id/download_file",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												"snapshot",
												":id",
												"download_file"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of Snapshot"
												}
											]
										},
										"description": "Create a download file request"
									},
									"response": [
										{
											"name": "Status for the file download request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/managed_volume/snapshot/:id/download_file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed_volume",
														"snapshot",
														":id",
														"download_file"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Lists all files in Managed volume snapshot",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/snapshot/:id/browse?path=&offset=&limit=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												"snapshot",
												":id",
												"browse"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) The absolute path of the starting point for the directory listing."
												},
												{
													"key": "offset",
													"value": "",
													"description": "Starting position in the list of path entries contained in the query results, sorted by lexicographical order. The response includes the specified numbered entry and all higher numbered entries."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Maximum number of entries in the response."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Lists all files and directories in a given path"
									},
									"response": [
										{
											"name": "List of files and directories at the specified path.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/managed_volume/snapshot/:id/browse?path=&offset=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed_volume",
														"snapshot",
														":id",
														"browse"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "export",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Delete a managed volume snapshot export",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/managed_volume/snapshot/export/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed_volume",
														"snapshot",
														"export",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of snapshot export."
														}
													]
												},
												"description": "Delete a managed volume snapshot export."
											},
											"response": [
												{
													"name": "Snapshot export sucessfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/managed_volume/snapshot/export/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"managed_volume",
																"snapshot",
																"export",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get information for a managed volume snapshot export",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/managed_volume/snapshot/export/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed_volume",
														"snapshot",
														"export",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of snapshot export"
														}
													]
												},
												"description": "Retrieve detailed information about a managed volume snapshot export by specifying the snapshot export ID."
											},
											"response": [
												{
													"name": "Returns details about the specified snapshot export",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/managed_volume/snapshot/export/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"managed_volume",
																"snapshot",
																"export",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get summary information for all managed volume snapshot exports.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_volume/snapshot/export?source_managed_volume_id=&source_managed_volume_name=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_volume",
												"snapshot",
												"export"
											],
											"query": [
												{
													"key": "source_managed_volume_id",
													"value": "",
													"description": "Filter snapshot exports to those that belong to the managed volume with given id."
												},
												{
													"key": "source_managed_volume_name",
													"value": "",
													"description": "Filter snapshot exports to those that belong to the managed volume with given name using infix search."
												},
												{
													"key": "sort_by",
													"value": "",
													"description": "Specifies the managed volume export attribute to use in sorting the managed volume summary information. Performs an ASCII sort of the summary information using the specified attribute, in the order specified.\nValid attributes are 'status', 'snapshotDate', 'sourceManagedVolumeName', 'exportedDate' (This can only be one of status,snapshotDate,sourceManagedVolumeName,exportedDate)"
												},
												{
													"key": "sort_order",
													"value": "",
													"description": "Sort order, either ascending or descending. (This can only be one of asc,desc)"
												}
											]
										},
										"description": "Returns a list of summary information for all exports of all managed volume snapshots, sorted and filtered."
									},
									"response": [
										{
											"name": "Returns summary information for snapshot exports.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/managed_volume/snapshot/export?source_managed_volume_id=&source_managed_volume_name=&sort_by=&sort_order=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"managed_volume",
														"snapshot",
														"export"
													],
													"query": [
														{
															"key": "source_managed_volume_id",
															"value": ""
														},
														{
															"key": "source_managed_volume_name",
															"value": ""
														},
														{
															"key": "sort_by",
															"value": ""
														},
														{
															"key": "sort_order",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create a managed volume",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/managed_volume",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"managed_volume"
							]
						},
						"description": "Create a managed volume."
					},
					"response": [
						{
							"name": "Details about the created nanaged volume.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_volume",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_volume"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get summary information for managed volumes.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/managed_volume?is_relic=&primary_cluster_id=&name=&effective_sla_domain_id=&sort_by=&sort_order=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"managed_volume"
							],
							"query": [
								{
									"key": "is_relic",
									"value": "",
									"description": "Filter by isRelic field. Return both relic and non-relic managed volumes if this query is not set."
								},
								{
									"key": "primary_cluster_id",
									"value": "",
									"description": "Filters the summary information based on the Rubrik cluster specified by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that is hosting the current REST API session."
								},
								{
									"key": "name",
									"value": "",
									"description": "Filter by name field. Returns only the managed volume objects for which the complete name value exactly matches the complete search string value."
								},
								{
									"key": "effective_sla_domain_id",
									"value": "",
									"description": "Filter by ID of effective SLA domain"
								},
								{
									"key": "sort_by",
									"value": "",
									"description": "Specifies the managed volume attribute to use in sorting the managed volume summary information. Performs an ASCII sort of the summary information using the specified attribute, in the order specified.\nValid attributes are 'name' and 'effectiveSlaDomainId' (This can only be one of name)"
								},
								{
									"key": "sort_order",
									"value": "",
									"description": "Sort order, either ascending or descending. (This can only be one of asc,desc)"
								}
							]
						},
						"description": "Retrieve summary information for all managed volumes that are created within a Rubrik cluster."
					},
					"response": [
						{
							"name": "Summary information for managed volumes.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_volume?is_relic=&primary_cluster_id=&name=&effective_sla_domain_id=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_volume"
									],
									"query": [
										{
											"key": "is_relic",
											"value": ""
										},
										{
											"key": "primary_cluster_id",
											"value": ""
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "effective_sla_domain_id",
											"value": ""
										},
										{
											"key": "sort_by",
											"value": ""
										},
										{
											"key": "sort_order",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get managed volume async request status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/managed_volume/request/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"managed_volume",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the request."
								}
							]
						},
						"description": "Get status of a managed volume async request."
					},
					"response": [
						{
							"name": "Status for the async request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_volume/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_volume",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "managed object",
			"item": [
				{
					"name": "{managed id}",
					"item": [
						{
							"name": "Gets the summaries of a managed object's descendants",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_object/:managed_id/descendants?limit=&object_type=&operating_system_type=&offset=&primary_cluster_id=&search_attr=&search_value=&search_type=&join_operator=&sort_attr=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_object",
										":managed_id",
										"descendants"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "Maximum number of results to return"
										},
										{
											"key": "object_type",
											"value": "",
											"description": "Comma-separated list of objectType values by which to search (all if not specified): ComputeCluster|DataCenter|Fileset|Folder|Global|Host|MssqlDatabase|MssqlInstance|VirtualMachine|VmwareHost|vCenter"
										},
										{
											"key": "operating_system_type",
											"value": "",
											"description": "Comma-separated list of operatingSystemType values by which to search (all if not specified): Linux|Windows"
										},
										{
											"key": "offset",
											"value": "",
											"description": "Starting offset of the results to return"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or local"
										},
										{
											"key": "search_attr",
											"value": "",
											"description": "Comma-separated list of attributes by which to search: name|hostname"
										},
										{
											"key": "search_value",
											"value": "",
											"description": "Comma-separated list of values by which to search (one for each search_attr)"
										},
										{
											"key": "search_type",
											"value": "",
											"description": "Comma-separated list of search types (one for each search_attr): prefix|infix|exact"
										},
										{
											"key": "join_operator",
											"value": "",
											"description": "Whether results must match any or all of the search attributes: all|any (default is \"all\")"
										},
										{
											"key": "sort_attr",
											"value": "",
											"description": "Comma-separated list of attributes by which to sort: name|objectType|hostname"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Comma-separated list of sort orders (one for each sort_attr): asc|desc"
										}
									],
									"variable": [
										{
											"key": "managed_id",
											"value": "schema type not provided",
											"description": "(Required) ManagedID of object whose descendants to get"
										}
									]
								},
								"description": "Gets the summaries of all the descendants of a managed object"
							},
							"response": [
								{
									"name": "Summaries of each descendant object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_object/:managed_id/descendants?limit=&object_type=&operating_system_type=&offset=&primary_cluster_id=&search_attr=&search_value=&search_type=&join_operator=&sort_attr=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_object",
												":managed_id",
												"descendants"
											],
											"query": [
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "object_type",
													"value": ""
												},
												{
													"key": "operating_system_type",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "search_attr",
													"value": ""
												},
												{
													"key": "search_value",
													"value": ""
												},
												{
													"key": "search_type",
													"value": ""
												},
												{
													"key": "join_operator",
													"value": ""
												},
												{
													"key": "sort_attr",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "managed_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the summary of a managed object",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_object/:managed_id/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_object",
										":managed_id",
										"summary"
									],
									"variable": [
										{
											"key": "managed_id",
											"value": "schema type not provided",
											"description": "(Required) ManagedID of object whose summary to get"
										}
									]
								},
								"description": "Gets the summary of a managed object"
							},
							"response": [
								{
									"name": "Summary of managed object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_object/:managed_id/summary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_object",
												":managed_id",
												"summary"
											],
											"variable": [
												{
													"key": "managed_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the summaries of a managed object's children",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_object/:managed_id/children?limit=&object_type=&operating_system_type=&offset=&primary_cluster_id=&search_attr=&search_value=&search_type=&join_operator=&sort_attr=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_object",
										":managed_id",
										"children"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "Maximum number of results to return"
										},
										{
											"key": "object_type",
											"value": "",
											"description": "Comma-separated list of objectType values by which to search (all if not specified)"
										},
										{
											"key": "operating_system_type",
											"value": "",
											"description": "Comma-separated list of operatingSystemType values by which to search (all if not specified): Linux|Windows"
										},
										{
											"key": "offset",
											"value": "",
											"description": "Starting offset of the results to return"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or local"
										},
										{
											"key": "search_attr",
											"value": "",
											"description": "Comma-separated list of attributes by which to search: name|hostname"
										},
										{
											"key": "search_value",
											"value": "",
											"description": "Comma-separated list of values by which to search (one for each search_attr)"
										},
										{
											"key": "search_type",
											"value": "",
											"description": "Comma-separated list of search types (one for each search_attr): prefix|infix|exact"
										},
										{
											"key": "join_operator",
											"value": "",
											"description": "Whether results must match any or all of the search attributes: all|any (default is \"all\")"
										},
										{
											"key": "sort_attr",
											"value": "",
											"description": "Comma-separated list of attributes by which to sort: name|objectType|hostname"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Comma-separated list of sort orders (one for each sort_attr): asc|desc"
										}
									],
									"variable": [
										{
											"key": "managed_id",
											"value": "schema type not provided",
											"description": "(Required) ManagedID of object whose summary to get"
										}
									]
								},
								"description": "Gets the summaries of a managed object's immediate children"
							},
							"response": [
								{
									"name": "Summaries of each child object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/managed_object/:managed_id/children?limit=&object_type=&operating_system_type=&offset=&primary_cluster_id=&search_attr=&search_value=&search_type=&join_operator=&sort_attr=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managed_object",
												":managed_id",
												"children"
											],
											"query": [
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "object_type",
													"value": ""
												},
												{
													"key": "operating_system_type",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "search_attr",
													"value": ""
												},
												{
													"key": "search_value",
													"value": ""
												},
												{
													"key": "search_type",
													"value": ""
												},
												{
													"key": "join_operator",
													"value": ""
												},
												{
													"key": "sort_attr",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "managed_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Gets the summaries of a set of managed objects",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/managed_object/bulk/summary?sort_attr=&sort_order=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"managed_object",
								"bulk",
								"summary"
							],
							"query": [
								{
									"key": "sort_attr",
									"value": "",
									"description": "Comma-separated list of attributes by which to sort: name|objectType|hostname"
								},
								{
									"key": "sort_order",
									"value": "",
									"description": "Comma-separated list of sort orders (one for each sort_attr): asc|desc"
								}
							]
						},
						"description": "Gets the summaries of a set of managed objects"
					},
					"response": [
						{
							"name": "Summaries of each managed object",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managed_object/bulk/summary?sort_attr=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managed_object",
										"bulk",
										"summary"
									],
									"query": [
										{
											"key": "sort_attr",
											"value": ""
										},
										{
											"key": "sort_order",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "job",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN - Get details about a job instance",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/job/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of Job instance"
										}
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Retrieve the following information about job instance- ID of job instance, job status, error details, start time of job, end time of job, job type, ID of the node and job progress. A support token is required for this operation."
							},
							"response": [
								{
									"name": "Return job instance details.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/job/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - End point to update general properties of a job.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/job/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the job"
										}
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - This is to allow one to update general properties of a job. A support token is required for this operation."
							},
							"response": [
								{
									"name": "TODO",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/job/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - list of child job instances.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/job/:id/child_job_instance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										":id",
										"child_job_instance"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of parent job instance"
										}
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Returns an array of child job instances for the given parent job instance. Returns an empty array when the job has no child job instances."
							},
							"response": [
								{
									"name": "Job instance details for all children",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/job/:id/child_job_instance",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id",
												"child_job_instance"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "type",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN - Creates a job to clean up references (semaphores, throttles, replication targets)",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/job/type/clean_up_references",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										"type",
										"clean_up_references"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Creates a job to clean up references (semaphores, throttles, replication targets). A support token is required for this operation."
							},
							"response": [
								{
									"name": "Returned if the job creation fails",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/job/type/clean_up_references",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"type",
												"clean_up_references"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the job creation succeeds",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/job/type/clean_up_references",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"type",
												"clean_up_references"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Creates a job that maintains other VM jobs.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/job/type/vmJobMaintainer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										"type",
										"vmJobMaintainer"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Creates a job that maintains other VM jobs. A support token is required for this operation."
							},
							"response": [
								{
									"name": "TODO",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/job/type/vmJobMaintainer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"type",
												"vmJobMaintainer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Create a garbage collection job instance for the current node",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/job/type/garbageCollection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										"type",
										"garbageCollection"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Create a garbage collection job instance for the current node. To force garbage collection on all nodes use \"rkcl exec all 'rubrik_tool.py create_garbage_collection'\"."
							},
							"response": [
								{
									"name": "Returns the composite JobInstance ID of the scheduled GC job on success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/job/type/garbageCollection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"type",
												"garbageCollection"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Create an expire snapshot job instance",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/job/type/expire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										"type",
										"expire"
									]
								},
								"description": "TODO"
							},
							"response": [
								{
									"name": "Returned if snappable does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/job/type/expire",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"type",
												"expire"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request to create the expire job fails",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/job/type/expire",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"type",
												"expire"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Return the expire job instance id on success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/job/type/expire",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"type",
												"expire"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Create a backup job instance",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/job/type/backup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										"type",
										"backup"
									]
								},
								"description": "TODO"
							},
							"response": [
								{
									"name": "Status of backup job creation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/job/type/backup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"type",
												"backup"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - deletes a replication source cluster on the target cluster.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/job/deleteReplicationSource",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"job",
								"deleteReplicationSource"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Deletes a replication source cluster on the target cluster. A support token is required for this operation."
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/job/deleteReplicationSource",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										"deleteReplicationSource"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Get list of job instances for job ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/job/:job_id/instances?status=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"job",
								":job_id",
								"instances"
							],
							"query": [
								{
									"key": "status",
									"value": "",
									"description": "Filter by status of the job instance."
								}
							],
							"variable": [
								{
									"key": "job_id",
									"value": "schema type not provided",
									"description": "(Required) ID of the job to fetch instances."
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get instances by job ID and filter by job instance status."
					},
					"response": [
						{
							"name": "List of JobInstances corresponding to job_id which are filtered by their running status.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/job/:job_id/instances?status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										":job_id",
										"instances"
									],
									"query": [
										{
											"key": "status",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "job_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Query for job instances",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/job/instance?status=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"job",
								"instance"
							],
							"query": [
								{
									"key": "status",
									"value": "",
									"description": "Status of job instance"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - This is just for easier diagnosis to figure out what jobs there are in the system. A support token is required for this operation."
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/job/instance?status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										"instance"
									],
									"query": [
										{
											"key": "status",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "snapshot",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Returns storage stats for a snapshot",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/:id/storage/stats?snappable_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										":id",
										"storage",
										"stats"
									],
									"query": [
										{
											"key": "snappable_id",
											"value": "",
											"description": "(Required) Snappable ID of target object"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to a snapshot object"
										}
									]
								},
								"description": "Returns the storage statistics for a snapshot."
							},
							"response": [
								{
									"name": "Returns storage stats for a snapshot",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/snapshot/:id/storage/stats?snappable_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												":id",
												"storage",
												"stats"
											],
											"query": [
												{
													"key": "snappable_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Returns the diagnostic info of a snapshot",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/:id/diagnostic?snappable_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										":id",
										"diagnostic"
									],
									"query": [
										{
											"key": "snappable_id",
											"value": "",
											"description": "(Required) Snappable ID of target object"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Snapshot to get info from"
										}
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - It returns some diagnostic info of a snapshot, right now only compression type is returned. A support token is required for this operation."
							},
							"response": [
								{
									"name": "Returns storage stats for a snapshot",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/snapshot/:id/diagnostic?snappable_id=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												":id",
												"diagnostic"
											],
											"query": [
												{
													"key": "snappable_id",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Expire a snapshot",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snapshot/expire",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshot",
								"expire"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Will mark the snapshot as expired. A support token is required for this operation."
					},
					"response": [
						{
							"name": "Returned if expire snapshot request fails",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/expire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"expire"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Return the expire job instance id on success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/expire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"expire"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if snapshot does not exist",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/expire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"expire"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Corrupt an incremental snapshot by redirecting its base pointer.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snapshot/corrupt_chain",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshot",
								"corrupt_chain"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN- Corrupt an incremental snapshot by redirecting its base pointer. CAUTION - This request races with Reverse and Expire, so care must be taken to disable these jobs or stop services (on all nodes). A support token is required for this operation."
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/corrupt_chain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"corrupt_chain"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d on archive",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snapshot/archive_garbage_collect_status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshot",
								"archive_garbage_collect_status"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d on archive. A support token is required for this operation."
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/archive_garbage_collect_status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"archive_garbage_collect_status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snapshot/garbage_collect_status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshot",
								"garbage_collect_status"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d. A support token is required for this operation."
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/garbage_collect_status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"garbage_collect_status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "session",
			"item": [
				{
					"name": "Create user session",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/session",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"session"
							]
						},
						"description": "Open a user session."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/session",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get token summaries for a user.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/session?user_id=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"session"
							],
							"query": [
								{
									"key": "user_id",
									"value": "",
									"description": "(Required) ID of user for whom token summaries are queried."
								}
							]
						},
						"description": "Gets token summaries for a user."
					},
					"response": [
						{
							"name": "List of token summaries",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/session?user_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session"
									],
									"query": [
										{
											"key": "user_id",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create user session in realm",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/session/realm/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"session",
								"realm",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "schema type not provided",
									"description": "(Required) Bind the new session to the specified LDAP service.\n"
								}
							]
						},
						"description": "Open a user session in realm."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/session/realm/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session",
										"realm",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete session tokens.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/session/bulk_delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"session",
								"bulk_delete"
							]
						},
						"description": "Deletes session tokens."
					},
					"response": [
						{
							"name": "Successfully deleted the specified session token(s)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/session/bulk_delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"session",
										"bulk_delete"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "nutanix",
			"item": [
				{
					"name": "vm",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "snapshot",
									"item": [
										{
											"name": "Create on-demand VM snapshot",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the VM"
														}
													]
												},
												"description": "Create an on-demand snapshot for the given VM ID"
											},
											"response": [
												{
													"name": "Status for the backup request.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/nutanix/vm/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nutanix",
																"vm",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete all snapshots of VM",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) Virtual machine ID"
														}
													]
												},
												"description": "Delete all snapshots of a virtual machine"
											},
											"response": [
												{
													"name": "Snapshots successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/nutanix/vm/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nutanix",
																"vm",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get list of snapshots of VM",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/:id/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														":id",
														"snapshot"
													],
													"variable": [
														{
															"key": "id",
															"value": "schema type not provided",
															"description": "(Required) ID of the vm"
														}
													]
												},
												"description": "Retrieve the following information for all snapshots for a VM: ID, snapshot date, expiration date, type of source object, name of VM, type of snapshot, state of the cloud, level of consistency, name of snapshot VM, index state, total number of files, IDs of all replication location, IDs of all archival locations."
											},
											"response": [
												{
													"name": "Returns summary information for all snapshots.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/nutanix/vm/:id/snapshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"nutanix",
																"vm",
																":id",
																"snapshot"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get VM details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Nutanix Virtual Machine."
												}
											]
										},
										"description": "Detailed view of a Nutanix VM"
									},
									"response": [
										{
											"name": "Return details about the Nutanix Virtual machine.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Patch VM",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of Nutanix Virtual Machine"
												}
											]
										},
										"description": "Patch VM with specified properties"
									},
									"response": [
										{
											"name": "Return details about Nutanix virtual machine.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Search for file in Nutanix VM",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/:id/search?path=&limit=&cursor=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												":id",
												"search"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) The path query. Either path prefix or filename prefix."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Maximum number of entries in the response."
												},
												{
													"key": "cursor",
													"value": "",
													"description": "Pagination cursor returned by the previous request."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the vm"
												}
											]
										},
										"description": "Search for a file within the Nutanix Virtual Machine. Search via full path prefix or filename prefix."
									},
									"response": [
										{
											"name": "Search results",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/:id/search?path=&limit=&cursor=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														":id",
														"search"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														},
														{
															"key": "cursor",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get details about missed snapshots for a VM",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/:id/missed_snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												":id",
												"missed_snapshot"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the vm"
												}
											]
										},
										"description": "Retrieve the time of the day when the snapshots were missed specific to a vm."
									},
									"response": [
										{
											"name": "Returns details about missed snapshots for a VM.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/:id/missed_snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														":id",
														"missed_snapshot"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Register the agent installed on the Nutanix VM",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/:id/register_agent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												":id",
												"register_agent"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Virtual Machine"
												}
											]
										},
										"description": "Register the agent installed on the Nutanix VM"
									},
									"response": [
										{
											"name": "The VM agent has successfully registered",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/:id/register_agent",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														":id",
														"register_agent"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "snapshot/{id}",
							"item": [
								{
									"name": "Delete VM snapshot",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id?location=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												"snapshot",
												":id"
											],
											"query": [
												{
													"key": "location",
													"value": "",
													"description": "(Required) Snapshot location to delete. Use **_local_** to delete all local snapshots and **_all_** to delete the snapshot in all locations. (This can only be one of all,local)"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Delete a snapshot by expiring it. Snapshot is expired only if it is a manual snapshot or a snapshot of an unprotected vm."
									},
									"response": [
										{
											"name": "Snapshot successfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id?location=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														"snapshot",
														":id"
													],
													"query": [
														{
															"key": "location",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get VM snapshot details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												"snapshot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Retrieve detailed information about a snapshot."
									},
									"response": [
										{
											"name": "Returns details about a snapshot",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														"snapshot",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Lists all files in VM snapshot",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id/browse?path=&offset=&limit=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												"snapshot",
												":id",
												"browse"
											],
											"query": [
												{
													"key": "path",
													"value": "",
													"description": "(Required) The absolute path of the starting point for the directory listing."
												},
												{
													"key": "offset",
													"value": "",
													"description": "Starting position in the list of path entries contained in the query results, sorted by lexicographical order. The response includes the specified numbered entry and all higher numbered entries."
												},
												{
													"key": "limit",
													"value": "",
													"description": "Maximum number of entries in the response."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Lists all files and directories in a given path"
									},
									"response": [
										{
											"name": "List of files and directories at the specified path.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id/browse?path=&offset=&limit=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														"snapshot",
														":id",
														"browse"
													],
													"query": [
														{
															"key": "path",
															"value": ""
														},
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "limit",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Restore files",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id/restore_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												"snapshot",
												":id",
												"restore_files"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Restore files from a snapshot to the source Nutanix virtual machine."
									},
									"response": [
										{
											"name": "Status for the restore request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id/restore_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														"snapshot",
														":id",
														"restore_files"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Export VM snapshot",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												"snapshot",
												":id",
												"export"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Export snapshot of a vm."
									},
									"response": [
										{
											"name": "Status for the export request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														"snapshot",
														":id",
														"export"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download files from a Nutanix VM backup",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id/download_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												"snapshot",
												":id",
												"download_files"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID assigned to a Nutanix VM backup object."
												}
											]
										},
										"description": "Start an asynchronous job to download multiple files and folders from a specified Nutanix VM backup. The response returns an asynchronous request ID. Get the URL for downloading the zip file including the specific files/folders by sending a GET request to 'nutanix/vm/request/{id}'."
									},
									"response": [
										{
											"name": "Status of an async job to download files and folders from a Nutanix VM backup.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id/download_files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														"snapshot",
														":id",
														"download_files"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a download from archival request.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												"snapshot",
												":id",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of snapshot"
												}
											]
										},
										"description": "Download a snapshot from archival."
									},
									"response": [
										{
											"name": "Status for the download request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/vm/snapshot/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"vm",
														"snapshot",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get list of Nutanix VMs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nutanix/vm?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&is_relic=&name=&sla_assignment=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nutanix",
										"vm"
									],
									"query": [
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "is_relic",
											"value": "",
											"description": "Filter by isRelic field of VM. Return both relic and non-relic VM if this query is not set."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search vm by vm name."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Attribute to sort the results on (This can only be one of effectiveSlaDomainName,name,folderPath,infraPath)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										}
									]
								},
								"description": "Get summary of all the VMs"
							},
							"response": [
								{
									"name": "Get page summary about Nutanix virtual machine",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm?effective_sla_domain_id=&primary_cluster_id=&limit=&offset=&is_relic=&name=&sla_assignment=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "is_relic",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get VM async request details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nutanix/vm/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nutanix",
										"vm",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the request"
										}
									]
								},
								"description": "Get details about a Nutanix VM-related async request."
							},
							"response": [
								{
									"name": "Status for the async request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/vm/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"vm",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "hierarchy/{id}",
					"item": [
						{
							"name": "Get summary of a hierarchy object",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nutanix/hierarchy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nutanix",
										"hierarchy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the hierarchy object"
										}
									]
								},
								"description": "Retrieve details for the specified hierarchy object."
							},
							"response": [
								{
									"name": "Details of the hierarchy object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/hierarchy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"hierarchy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of descendant objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nutanix/hierarchy/:id/descendants?effective_sla_domain_id=&object_type=&primary_cluster_id=&is_relic=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=&snappable_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nutanix",
										"hierarchy",
										":id",
										"descendants"
									],
									"query": [
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain"
										},
										{
											"key": "object_type",
											"value": "",
											"description": "Filter by node object type (This can only be one of cluster,vm)"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "is_relic",
											"value": "",
											"description": "Filter by isRelic field of Nutanix VM hierarchy object. Return both relic and non-relic children if this query is not set."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search vm by vm name."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Attribute to sort the results on (This can only be one of effectiveSlaDomainName,name,descendantCount.cluster,descendantCount.vm)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										},
										{
											"key": "snappable_status",
											"value": "",
											"description": "Filters Nutanix hierarchy objects based on the specified query value. (This can only be one of Protectable)"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the parent Nutanix hierarchy object"
										}
									]
								},
								"description": "Retrieve the list of descendant objects for the specified parent"
							},
							"response": [
								{
									"name": "Summary list of descendant objects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/hierarchy/:id/descendants?effective_sla_domain_id=&object_type=&primary_cluster_id=&is_relic=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=&snappable_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"hierarchy",
												":id",
												"descendants"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "object_type",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "is_relic",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "snappable_status",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of immediate descendant objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nutanix/hierarchy/:id/children?effective_sla_domain_id=&object_type=&primary_cluster_id=&is_relic=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=&snappable_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nutanix",
										"hierarchy",
										":id",
										"children"
									],
									"query": [
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter by ID of effective SLA domain"
										},
										{
											"key": "object_type",
											"value": "",
											"description": "Filter by node object type"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filter by primary cluster ID, or **local**"
										},
										{
											"key": "is_relic",
											"value": "",
											"description": "Filter by isRelic field of Nutanix VM hierarchy object. Return both relic and non-relic children if this query is not set."
										},
										{
											"key": "limit",
											"value": "",
											"description": "Limit the number of matches returned."
										},
										{
											"key": "offset",
											"value": "",
											"description": "Ignore these many matches in the beginning."
										},
										{
											"key": "name",
											"value": "",
											"description": "Search vm by vm name."
										},
										{
											"key": "sla_assignment",
											"value": "",
											"description": "Filter by SLA assignment type (This can only be one of Derived,Direct,Unassigned)"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Attribute to sort the results on (This can only be one of effectiveSlaDomainName,name,descendantCount.cluster,descendantCount.vm)"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Sort order, either ascending or descending (This can only be one of asc,desc)"
										},
										{
											"key": "snappable_status",
											"value": "",
											"description": "Filters Nutanix hierarchy objects based on the specified query value. (This can only be one of Protectable)"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the parent Nutanix hierarchy object. To get top-level nodes, use **root** as the ID."
										}
									]
								},
								"description": "Retrieve the list of immediate descendant objects for the specified parent"
							},
							"response": [
								{
									"name": "Summary list of descendant objects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/hierarchy/:id/children?effective_sla_domain_id=&object_type=&primary_cluster_id=&is_relic=&limit=&offset=&name=&sla_assignment=&sort_by=&sort_order=&snappable_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"hierarchy",
												":id",
												"children"
											],
											"query": [
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "object_type",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "is_relic",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												},
												{
													"key": "offset",
													"value": ""
												},
												{
													"key": "name",
													"value": ""
												},
												{
													"key": "sla_assignment",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												},
												{
													"key": "snappable_status",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cluster",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Remove Nutanix cluster",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/cluster/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"cluster",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Nutanix cluster to remove."
												}
											]
										},
										"description": "Initiates an asynchronous job to remove a Nutanix cluster object. The Nutanix cluster cannot have VMs mounted through the Rubrik cluster."
									},
									"response": [
										{
											"name": "Status for the async request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/cluster/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"cluster",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get the details of a Nutanix Cluster",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/cluster/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"cluster",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Nutanix Cluster."
												}
											]
										},
										"description": "Retrieve detailed information for a Nutanix Cluster object."
									},
									"response": [
										{
											"name": "Details for a Nutanix Cluster object.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/cluster/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"cluster",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Patch Nutanix cluster",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/cluster/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"cluster",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Nutanix cluster."
												}
											]
										},
										"description": "Patch the host, credentials, and/or CA certs of the specified Nutanix cluster object."
									},
									"response": [
										{
											"name": "Detail of the updated Nutanix cluster object.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/cluster/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"cluster",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get list of containers on this cluster",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/cluster/:id/container",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"cluster",
												":id",
												"container"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Nutanix cluster"
												}
											]
										},
										"description": "Query the nutanix cluster to get the list of containers, used for export purposes."
									},
									"response": [
										{
											"name": "Returns the ID and name of containers on the Nutanix cluster",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/cluster/:id/container",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"cluster",
														":id",
														"container"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Refresh Nutanix cluster metadata",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/cluster/:id/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"cluster",
												":id",
												"refresh"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Nutanix cluster"
												}
											]
										},
										"description": "Create a job to refresh the metadata for the specified Nutanix cluster"
									},
									"response": [
										{
											"name": "Status for the async request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/nutanix/cluster/:id/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"nutanix",
														"cluster",
														":id",
														"refresh"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Add Nutanix cluster",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nutanix/cluster",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nutanix",
										"cluster"
									]
								},
								"description": "Create a Nutanix cluster object by providing an address and account credentials for Prism. Initiates an asynchronous job to establish a connection with the cluster and retrieve all metadata. Use GET /nutanix_cluster/{id}/status to check status."
							},
							"response": [
								{
									"name": "Status for the refresh request.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/cluster",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"cluster"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of Nutanix clusters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nutanix/cluster?primary_cluster_id=&should_get_status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nutanix",
										"cluster"
									],
									"query": [
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Limits the information to the Rubrik cluster specified by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that is hosting the current REST API session."
										},
										{
											"key": "should_get_status",
											"value": "",
											"description": "Determines whether or not the status field is populated. Populating this field involves issuing a call to the Nutanix cluster itself, which may not be performant. Defaults to false."
										}
									]
								},
								"description": "Retrieve information for each managed Nutanix cluster"
							},
							"response": [
								{
									"name": "Summary information for managed Nutanix clusters.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/cluster?primary_cluster_id=&should_get_status=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"cluster"
											],
											"query": [
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "should_get_status",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Nutanix cluster async request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nutanix/cluster/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nutanix",
										"cluster",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the request"
										}
									]
								},
								"description": "Get details about a Nutanix cluster-related async request."
							},
							"response": [
								{
									"name": "Status for the async request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/nutanix/cluster/request/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"nutanix",
												"cluster",
												"request",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "report",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "email subscription",
							"item": [
								{
									"name": "Creates email subscription for a report.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/:id/email_subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												":id",
												"email_subscription"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Id of the report to create an email subscription for."
												}
											]
										},
										"description": "Creates an email subscription for the report specified by id."
									},
									"response": [
										{
											"name": "Summary of email subscriptions for the report specified by id.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/report/:id/email_subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														":id",
														"email_subscription"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Returns email subscriptions for a report.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/:id/email_subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												":id",
												"email_subscription"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) Id of the report to get email subscriptions for"
												}
											]
										},
										"description": "Returns all email subscriptions for the report specified by id."
									},
									"response": [
										{
											"name": "Summary of email subscriptions for the report specified by id.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/report/:id/email_subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"report",
														":id",
														"email_subscription"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete a specific report.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the report"
										}
									]
								},
								"description": "Delete a specific report specified by reportId"
							},
							"response": [
								{
									"name": "Returned if report was deleted successfully.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get information about a specific report.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the report"
										}
									]
								},
								"description": "Get report details and update status"
							},
							"response": [
								{
									"name": "Return report details.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a specific report.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the report"
										}
									]
								},
								"description": "Update a specific report. The report's name, chart parameters, filters and table can be updated. If successful, this will automatically trigger an async job to refresh the report content."
							},
							"response": [
								{
									"name": "Returns the status of the job that was automatically triggered to refresh the report's content.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the table associated with the report specified by id and filters",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/:id/table",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										":id",
										"table"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the report"
										}
									]
								},
								"description": "Retrieve table data for a specific report"
							},
							"response": [
								{
									"name": "Table data for the report",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/:id/table",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												":id",
												"table"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the link for CSV file of the report specified by id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/:id/csv_link",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										":id",
										"csv_link"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the report"
										}
									]
								},
								"description": "Get the link to a CSV file for a report. This is a synchronous operation."
							},
							"response": [
								{
									"name": "Download link of the requested CSV file.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/:id/csv_link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												":id",
												"csv_link"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Begins to refresh the data associated with a report.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/:id/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										":id",
										"refresh"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) Id of the report to refresh"
										}
									]
								},
								"description": "Begins to refresh the data associated with the report specified by id. This should be used following calls to the various report patch endpoints in order to trigger the data update."
							},
							"response": [
								{
									"name": "Returns the status of the refresh data request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/:id/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												":id",
												"refresh"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get chart data for a report",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/:id/chart?chart_id=&limit=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										":id",
										"chart"
									],
									"query": [
										{
											"key": "chart_id",
											"value": "",
											"description": "ID of the chart"
										},
										{
											"key": "limit",
											"value": "",
											"description": "Maximum number of chart columns to return"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the report"
										}
									]
								},
								"description": "Retrieve chart data associated with the report specified by id"
							},
							"response": [
								{
									"name": "Chart data for the report",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/:id/chart?chart_id=&limit=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												":id",
												"chart"
											],
											"query": [
												{
													"key": "chart_id",
													"value": ""
												},
												{
													"key": "limit",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "data source",
					"item": [
						{
							"name": "Get table data from report data source.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/data_source/:data_source_name/csv",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"data_source",
										":data_source_name",
										"csv"
									],
									"variable": [
										{
											"key": "data_source_name",
											"value": "schema type not provided",
											"description": "(Required) Name of a report data source table."
										}
									]
								},
								"description": "Retrieve a CSV file containing the raw table data from the specified data source. Retrieved data is not constructed as a report. Returns a download link for the CSV file."
							},
							"response": [
								{
									"name": "Download link of the requested CSV file.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/data_source/:data_source_name/csv",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"data_source",
												":data_source_name",
												"csv"
											],
											"variable": [
												{
													"key": "data_source_name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get table data from data soruce based on ReportTableRequest",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/data_source/table",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"data_source",
										"table"
									]
								},
								"description": "Returns the raw table data without constructing a report."
							},
							"response": [
								{
									"name": "Data from the data source",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/data_source/table",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"data_source",
												"table"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a CSV file for the report data source specified by type",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/data_source/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"data_source",
										"download"
									]
								},
								"description": "Create a job to generate data source csv file in background. Returns a job id to poll the status of job."
							},
							"response": [
								{
									"name": "Status of the file download request.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/data_source/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"data_source",
												"download"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "email subscription/{subscription id}",
					"item": [
						{
							"name": "Deletes a specific email subscription for a report.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/email_subscription/:subscription_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"email_subscription",
										":subscription_id"
									],
									"variable": [
										{
											"key": "subscription_id",
											"value": "schema type not provided",
											"description": "(Required) Id of the specific email seubscription to retrieve"
										}
									]
								},
								"description": "Deletes the email subscription specified by subscription_id for the report it is a subscription of."
							},
							"response": [
								{
									"name": "Email subscription was successfully deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/email_subscription/:subscription_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"email_subscription",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns specific email subscription for a report.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/email_subscription/:subscription_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"email_subscription",
										":subscription_id"
									],
									"variable": [
										{
											"key": "subscription_id",
											"value": "schema type not provided",
											"description": "(Required) Id of the specific email seubscription to retrieve"
										}
									]
								},
								"description": "Returns the email subscription specified by subscription_id for the report it is a subscription of."
							},
							"response": [
								{
									"name": "Specific email subscription summary.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/email_subscription/:subscription_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"email_subscription",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates a specific email subscription for a report.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/email_subscription/:subscription_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"email_subscription",
										":subscription_id"
									],
									"variable": [
										{
											"key": "subscription_id",
											"value": "schema type not provided",
											"description": "(Required) Id of the specific email seubscription to retrieve"
										}
									]
								},
								"description": "Updates the email subscription specified by subscription_id for the report it is a subscription of."
							},
							"response": [
								{
									"name": "The updated email subscription summary.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/report/email_subscription/:subscription_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"report",
												"email_subscription",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create a new report.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/report",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"report"
							]
						},
						"description": "Create a new report by specifying one of the report templates."
					},
					"response": [
						{
							"name": "Returned if report successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get summary information for all reports.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/report?report_template=&report_type=&name=&sort_by=&sort_order=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"report"
							],
							"query": [
								{
									"key": "report_template",
									"value": "",
									"description": "Provides the name of a report template for filtering the reports returned by a request based on that name. (This can only be one of CapacityOverTime,ObjectProtectionSummary,ObjectTaskSummary,ObjectIndexingSummary,ProtectionTasksDetails,ProtectionTasksSummary,RecoveryTasksDetails,SlaComplianceSummary,SystemCapacity)"
								},
								{
									"key": "report_type",
									"value": "",
									"description": "Filter the returned reports based off the reports type (This can only be one of Canned,Custom)"
								},
								{
									"key": "name",
									"value": "",
									"description": "Filter the returned reports based off their name"
								},
								{
									"key": "sort_by",
									"value": "",
									"description": "Sort the returned reports based off the specified attribute. Default: name (This can only be one of name,reportTemplate,reportType)"
								},
								{
									"key": "sort_order",
									"value": "",
									"description": "Order by which to sort the returned reports. Default: asc (This can only be one of asc,desc)"
								}
							]
						},
						"description": "Retrieve summary information for each report. Optionally, filter the retrieved information."
					},
					"response": [
						{
							"name": "Summary information for reports.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report?report_template=&report_type=&name=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report"
									],
									"query": [
										{
											"key": "report_template",
											"value": ""
										},
										{
											"key": "report_type",
											"value": ""
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "sort_by",
											"value": ""
										},
										{
											"key": "sort_order",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get asynchronous request details for data source CSV download job",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/report/request/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"report",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of an asynchronous request."
								}
							]
						},
						"description": "Get the details of an asynchronous request that generates data source CSV download file"
					},
					"response": [
						{
							"name": "Status of an asynchronous data source CSV request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/request/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"request",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get past 24 hour compliance summary information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/report/compliance_summary_24_hours",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"report",
								"compliance_summary_24_hours"
							]
						},
						"description": "Returns the past 24 hour compliance summary information for all objects."
					},
					"response": [
						{
							"name": "Data from the report data source.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/report/compliance_summary_24_hours",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"report",
										"compliance_summary_24_hours"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "node management",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "upgrade",
							"item": [
								{
									"name": "REQUIRES SUPPORT TOKEN - Initiate upgrade using package downloaded from remote http server",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/:id/upgrade",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												":id",
												"upgrade"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self"
												}
											]
										},
										"description": "REQUIRES SUPPORT TOKEN - Runs upgrade with the package downloaded from remote http server, use the node_management/{id}/fetch_upgrade endpoint to fetch upgrade package. A support token is required for this operation."
									},
									"response": [
										{
											"name": "Successfully initiated upgrade. To poll for status, use the GET endpoint",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/node_management/:id/upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"node_management",
														":id",
														"upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Previous upgrade request in process",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/node_management/:id/upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"node_management",
														":id",
														"upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "REQUIRES SUPPORT TOKEN - Get upgrade request status",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/:id/upgrade",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												":id",
												"upgrade"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self"
												}
											]
										},
										"description": "REQUIRES SUPPORT TOKEN - Returns the status of the upgrade request, which is initiated by the POST endpoint. A support token is required for this operation."
									},
									"response": [
										{
											"name": "Returns status of upgrade request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/node_management/:id/upgrade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"node_management",
														":id",
														"upgrade"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "fetch package",
							"item": [
								{
									"name": "REQUIRES SUPPORT TOKEN - Initiate download of rubrik upgrade package from http server",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/:id/fetch_package",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												":id",
												"fetch_package"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self"
												}
											]
										},
										"description": "REQUIRES SUPPORT TOKEN - Fetch a package for software upgrade from a remote http server given the url, use the node_management/{id}/upgrade endpoint to initiate upgrade. A support token is required for this operation."
									},
									"response": [
										{
											"name": "Successfully initiated download of rubrik upgrade package. To poll for status, use the GET endpoint",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/node_management/:id/fetch_package",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"node_management",
														":id",
														"fetch_package"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Download request failed because the previous request is still in process",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/node_management/:id/fetch_package",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"node_management",
														":id",
														"fetch_package"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "REQUIRES SUPPORT TOKEN - Return fetch upgrade package request status",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/:id/fetch_package",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												":id",
												"fetch_package"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the Rubrik cluster or *me* for self"
												}
											]
										},
										"description": "REQUIRES SUPPORT TOKEN - Returns the status of the fetch upgrade package request, which is initiated by fetch_package POST. A support token is required for this operation."
									},
									"response": [
										{
											"name": "Returns status of fetch upgrade package request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/node_management/:id/fetch_package",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"node_management",
														":id",
														"fetch_package"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cluster ip",
					"item": [
						{
							"name": "Get a list of a cluster's always-available Ips",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/cluster_ip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"cluster_ip"
									]
								},
								"description": "Get a list of a cluster's always-available Ips"
							},
							"response": [
								{
									"name": "TODO",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/cluster_ip",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"cluster_ip"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Modify the list of cluster IPs",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/cluster_ip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"cluster_ip"
									]
								},
								"description": "Modify the list of cluster IPs"
							},
							"response": [
								{
									"name": "TODO",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/cluster_ip",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"cluster_ip"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the node which owns the cluster IP address",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/cluster_ip/:ip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"cluster_ip",
										":ip"
									],
									"variable": [
										{
											"key": "ip",
											"value": "schema type not provided",
											"description": "(Required) cluster IP for which owner needs to be fetched"
										}
									]
								},
								"description": "Returns the node which owns provided cluster IP address. Returns 'NOT OWNED' if the IP is not owned by any node"
							},
							"response": [
								{
									"name": "Returned if IP address is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/cluster_ip/:ip",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"cluster_ip",
												":ip"
											],
											"variable": [
												{
													"key": "ip"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns the node which owns provided cluster IP address",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/cluster_ip/:ip",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"cluster_ip",
												":ip"
											],
											"variable": [
												{
													"key": "ip"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "route config",
					"item": [
						{
							"name": "Add a new route config to all hosts",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/route_config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"route_config"
									]
								},
								"description": "Add a new route config to all hosts"
							},
							"response": [
								{
									"name": "Returned if no nodes were found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/route_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"route_config"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if route successfully added to node table",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/route_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"route_config"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete an existing route",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/route_config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"route_config"
									]
								},
								"description": "Delete an existing route that was configured"
							},
							"response": [
								{
									"name": "Returned if route not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/route_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"route_config"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Retuned if nodes were found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/route_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"route_config"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if route successfully deleted from node table",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/route_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"route_config"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get all existing route configs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/route_config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"route_config"
									]
								},
								"description": "Lists all existing route configs"
							},
							"response": [
								{
									"name": "Returns list of existing route configs",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/route_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"route_config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if no nodes were found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/route_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"route_config"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "replace node",
					"item": [
						{
							"name": "REQUIRES SUPPORT TOKEN - Replace a removed node with a new node, keeping HDDs and IPs",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/replace_node",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"replace_node"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Replace a removed node with a new node. A support token is required for this operation."
							},
							"response": [
								{
									"name": "Request handle to check replace node request status",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/replace_node",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"replace_node"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "REQUIRES SUPPORT TOKEN - Returns the status of the corresponding replaceNode request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/replace_node",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"replace_node"
									]
								},
								"description": "REQUIRES SUPPORT TOKEN - Returns the status of the corresponding replaceNode request. A support token is required for this operation."
							},
							"response": [
								{
									"name": "Replace node request status",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/replace_node",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"replace_node"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "proxy config",
					"item": [
						{
							"name": "Delete existing proxy configuration",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/proxy_config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"proxy_config"
									]
								},
								"description": "Delete an existing proxy that was configured"
							},
							"response": [
								{
									"name": "Returned if proxy successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/proxy_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"proxy_config"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if no proxy configured",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/proxy_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"proxy_config"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get existing proxy settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/proxy_config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"proxy_config"
									]
								},
								"description": "Get existing proxy settings"
							},
							"response": [
								{
									"name": "Returns existing proxy config",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/proxy_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"proxy_config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update proxy config",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/proxy_config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"proxy_config"
									]
								},
								"description": "Update proxy config"
							},
							"response": [
								{
									"name": "Returned if proxy successfully configured",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/proxy_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"proxy_config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "default gateway",
					"item": [
						{
							"name": "Get current default gateway",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/default_gateway",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"default_gateway"
									]
								},
								"description": "Get current default gateway"
							},
							"response": [
								{
									"name": "Returns current default gateways for both IPv4 and IPv6",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/default_gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"default_gateway"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned response when failed to get default gateway",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/default_gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"default_gateway"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update the default gateway",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/default_gateway",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"default_gateway"
									]
								},
								"description": "Update the default gateway"
							},
							"response": [
								{
									"name": "Returned response when default gateway has failed to update",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/default_gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"default_gateway"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if default gateway is updated",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node_management/default_gateway",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node_management",
												"default_gateway"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "hostname supporting the current server",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/node_management/hostname",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"node_management",
								"hostname"
							]
						},
						"description": "hostname supporting the current server"
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/hostname",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"hostname"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the management ip's netmask and gateway for this machine's cluster",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/node_management/management_ip",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"node_management",
								"management_ip"
							]
						},
						"description": "Get the management ip's netmask and gateway for this machine's cluster"
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/management_ip",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"management_ip"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Issues a reset to the current node",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/node_management/reset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"node_management",
								"reset"
							]
						},
						"description": "Issues a reset to the current node"
					},
					"response": [
						{
							"name": "Successfully started reseting the node",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/reset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"reset"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns whether this machine is bootstrapped to a cluster",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/node_management/is_bootstrapped",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"node_management",
								"is_bootstrapped"
							]
						},
						"description": "Check whether this machine has been bootstrapped"
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/is_bootstrapped",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"is_bootstrapped"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Rubrik cluster failure tolerance information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/node_management/cluster/:id/failure_tolerance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"node_management",
								"cluster",
								":id",
								"failure_tolerance"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Rubrik cluster or *me* for self"
								}
							]
						},
						"description": "Return various numbers of component failures allowed in the Rubrik cluster under which the cluster remains fully functional."
					},
					"response": [
						{
							"name": "Failures can be tolerated in the cluster",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node_management/cluster/:id/failure_tolerance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node_management",
										"cluster",
										":id",
										"failure_tolerance"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "user",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "ADMIN ONLY: Delete a user for the given id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the user to be deleted"
										}
									]
								},
								"description": "Delete a user for the given id"
							},
							"response": [
								{
									"name": "TODO",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "ADMIN ONLY: Details about the specific User",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the User that needs to be fetched. Pass in 'me' for getting the current logged in user"
										}
									]
								},
								"description": "To be used by Admin to fetch details about the specific User"
							},
							"response": [
								{
									"name": "TODO",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "ADMIN ONLY: Update existing User",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the User that needs to be updated"
										}
									]
								},
								"description": "To be used by Admin to update existing User"
							},
							"response": [
								{
									"name": "Returns updated details about the user",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Organization access list",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:id/organization?name=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id",
										"organization"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "An optional field that specifies a string. The returned list of organizations is filtered to show only organizations with names that contain the specified string."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of user. The value must be me, which stands for the current session user."
										}
									]
								},
								"description": "Retrieve a list of all of the Organization objects that the current session user can access."
							},
							"response": [
								{
									"name": "Access list of Organization objects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:id/organization?name=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id",
												"organization"
											],
											"query": [
												{
													"key": "name",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ADMIN ONLY: Create new User",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "To be used by Admin to create new User"
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "ADMIN ONLY: Summary of all the Users ",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user?username=&auth_domain_id=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "username",
									"value": "",
									"description": "Username to match"
								},
								{
									"key": "auth_domain_id",
									"value": "",
									"description": "Auth domain ID to match"
								}
							]
						},
						"description": "To be used by Admin to fetch the list of Users"
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user?username=&auth_domain_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "username",
											"value": ""
										},
										{
											"key": "auth_domain_id",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "diagnostic/snappable/{id}",
			"item": [
				{
					"name": "Get diagnostic information on tasks of a snappable.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostic/snappable/:id?before_date=&after_date=&task_type=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostic",
								"snappable",
								":id"
							],
							"query": [
								{
									"key": "before_date",
									"value": "",
									"description": "Filter all the task actions before a date."
								},
								{
									"key": "after_date",
									"value": "",
									"description": "Filter all task actions after a date."
								},
								{
									"key": "task_type",
									"value": "",
									"description": "Filter task actions with task types (This can only be one of Backup,LogBackup,Replication,LogReplication,Archival,ArchivalTiering,LogArchival,LogShipping,Instantiate,LiveMount,InstantRecovery,Export,Restore,DownloadFile,RestoreFile,Conversion)"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) Managed ID of the snappable."
								}
							]
						},
						"description": "Get diagnostic information on tasks of a snappable."
					},
					"response": [
						{
							"name": "Return diagnostic details on tasks of the snappable.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostic/snappable/:id?before_date=&after_date=&task_type=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostic",
										"snappable",
										":id"
									],
									"query": [
										{
											"key": "before_date",
											"value": ""
										},
										{
											"key": "after_date",
											"value": ""
										},
										{
											"key": "task_type",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get diagnostic information on the most recent task of a snappable.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/diagnostic/snappable/:id/latest?task_type=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagnostic",
								"snappable",
								":id",
								"latest"
							],
							"query": [
								{
									"key": "task_type",
									"value": "",
									"description": "(Required) Filter task actions with task types (This can only be one of Backup,LogBackup,Replication,LogReplication,Archival,ArchivalTiering,LogArchival,LogShipping,Instantiate,LiveMount,InstantRecovery,Export,Restore,DownloadFile,RestoreFile,Conversion)"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) Managed ID of the snappable."
								}
							]
						},
						"description": "Get diagnostic information on the most recent task of a snappable."
					},
					"response": [
						{
							"name": "Return diagnostic information on the most recent task of the snappable.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostic/snappable/:id/latest?task_type=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostic",
										"snappable",
										":id",
										"latest"
									],
									"query": [
										{
											"key": "task_type",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if there is no task found for the snappable.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/diagnostic/snappable/:id/latest?task_type=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagnostic",
										"snappable",
										":id",
										"latest"
									],
									"query": [
										{
											"key": "task_type",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "node",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "support tunnel",
							"item": [
								{
									"name": "Check support tunnel status for a particular node",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node/:id/support_tunnel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node",
												":id",
												"support_tunnel"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the node to check the tunnel status for"
												}
											]
										},
										"description": "To be used by Admin to check status of the support tunnel."
									},
									"response": [
										{
											"name": "To be used to obtain the status of support tunnels on a per node basis.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/node/:id/support_tunnel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"node",
														":id",
														"support_tunnel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Enable or disable the SSH Tunnel for Support Access",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node/:id/support_tunnel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node",
												":id",
												"support_tunnel"
											],
											"variable": [
												{
													"key": "id",
													"value": "schema type not provided",
													"description": "(Required) ID of the node add the tunnel to (this must be the current node id or *me*)."
												}
											]
										},
										"description": "To be used by Admin to open or close a SSH tunnel for support. When enabling the support tunnel, the node 'id' must be *me* or the current node's 'id', because remote open is not supported. When disabling a support tunnel, the node 'id' can be that of any node in the cluster."
									},
									"response": [
										{
											"name": "Returns the status of the support tunnel.",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/node/:id/support_tunnel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"node",
														":id",
														"support_tunnel"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Detailed view of a Rubrik node",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the node to load."
										}
									]
								},
								"description": "Returns the complete view of a Rubrik node."
							},
							"response": [
								{
									"name": "Detailed information about the node.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Iops and IO throughput of the node",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node/:id/io_stats?range=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node",
										":id",
										"io_stats"
									],
									"query": [
										{
											"key": "range",
											"value": "",
											"description": "Optional starting point for a time series. The starting point is expressed as -<int><unit>, where <int> is an integer and <unit> is one of: s(seconds), m(minutes), h(hours), d(days). Default value is -6h."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) Id of node to fetch IO throughput stats for."
										}
									]
								},
								"description": "Iops and IO throughput of the node."
							},
							"response": [
								{
									"name": "IO stats for the node.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node/:id/io_stats?range=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node",
												":id",
												"io_stats"
											],
											"query": [
												{
													"key": "range",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Fetches time ranged statistics about the specified Node",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node/:id/stats?range=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node",
										":id",
										"stats"
									],
									"query": [
										{
											"key": "range",
											"value": "",
											"description": "Starting point for a time series. The starting point is expressed as -<int><unit>, where <int> is an integer and <unit> is one of: s(seconds), m(minutes), h(hours), d(days). Default value is -1h."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) Id of the node to fetch statistics for."
										}
									]
								},
								"description": "Statistics about the specific Node given a time range. One hour is default."
							},
							"response": [
								{
									"name": "Statistics about the node.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node/:id/stats?range=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node",
												":id",
												"stats"
											],
											"query": [
												{
													"key": "range",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of active sessions on a node",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node/:id/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node",
										":id",
										"sessions"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the node or *me* for self"
										}
									]
								},
								"description": "Returns the list of all active sessions on a node"
							},
							"response": [
								{
									"name": "List of active sessions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node/:id/sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node",
												":id",
												"sessions"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get CPU Cores count of a node",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node/:id/cpu_cores_count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node",
										":id",
										"cpu_cores_count"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) Id of the node to get cpu cores count for."
										}
									]
								},
								"description": "CPU cores count of a node."
							},
							"response": [
								{
									"name": "Count of cpu cores for the given node.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/node/:id/cpu_cores_count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"node",
												":id",
												"cpu_cores_count"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get list of nodes in this Rubrik cluster.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/node",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"node"
							]
						},
						"description": "Returns the list of all Rubrik nodes."
					},
					"response": [
						{
							"name": "List of nodes.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets a list of time-series statistics for each node in this Rubrik cluster",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/node/stats?range=&limit=&offset=&sort_by=&sort_order=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"node",
								"stats"
							],
							"query": [
								{
									"key": "range",
									"value": "",
									"description": "Starting point for a time series. The starting point is expressed as -<int><unit>, where <int> is an integer and <unit> is one of: s(seconds), m(minutes), h(hours), d(days). Default value is -1h."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the number of matches returned."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Ignore these many matches in the beginning."
								},
								{
									"key": "sort_by",
									"value": "",
									"description": "Attribute by which the results are sorted. (This can only be one of Status,Name,Ip)"
								},
								{
									"key": "sort_order",
									"value": "",
									"description": "Sort order, either ascending or descending. (This can only be one of asc,desc)"
								}
							]
						},
						"description": "Returns the list statistics of all Rubrik nodes."
					},
					"response": [
						{
							"name": "List of node stats.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/node/stats?range=&limit=&offset=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"node",
										"stats"
									],
									"query": [
										{
											"key": "range",
											"value": ""
										},
										{
											"key": "limit",
											"value": ""
										},
										{
											"key": "offset",
											"value": ""
										},
										{
											"key": "sort_by",
											"value": ""
										},
										{
											"key": "sort_order",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "hierarchy",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get summary of a hierarchy object",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hierarchy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hierarchy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the hierarchy object"
										}
									]
								},
								"description": "Retrieve details for the specified storage hierarchy object."
							},
							"response": [
								{
									"name": "Details of the hierarchy object",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hierarchy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hierarchy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update cached hierarchy information",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hierarchy/:id/update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hierarchy",
										":id",
										"update"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the hierarchy object"
										}
									]
								},
								"description": "Force an update of the cached hierarchy information for the specified object."
							},
							"response": [
								{
									"name": "Hierarchy update successfully triggered.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hierarchy/:id/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hierarchy",
												":id",
												"update"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of descendant objects with SLA conflicts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hierarchy/:id/sla_conflicts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hierarchy",
										":id",
										"sla_conflicts"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the hierarchy object"
										}
									]
								},
								"description": "Retrieve the list of descendant objects with an explicitly configured SLA, or inherit an SLA from a different parent."
							},
							"response": [
								{
									"name": "Summary list of descendant objects",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/hierarchy/:id/sla_conflicts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hierarchy",
												":id",
												"sla_conflicts"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Bulk get the list of descendant objects with SLA conflicts",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/hierarchy/bulk_sla_conflicts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hierarchy",
								"bulk_sla_conflicts"
							]
						},
						"description": "Retrieve the list of descendant objects with an explicitly configured SLA Domain, or inherit an SLA Domain from a different parent for each of the managed IDs."
					},
					"response": [
						{
							"name": "List of SLA Domain conflict summaries for the specified managed IDs.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hierarchy/bulk_sla_conflicts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hierarchy",
										"bulk_sla_conflicts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Search for hierarchy objects",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/hierarchy/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hierarchy",
								"search"
							]
						},
						"description": "Search by name, location and slaDomain over hierarchy objects for specified object types."
					},
					"response": [
						{
							"name": "Return the list of summaries of matching objects",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/hierarchy/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hierarchy",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "fileset",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Create filesets for a host.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fileset/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fileset",
										"bulk"
									]
								},
								"description": "Create filesets for a network host. Each fileset is a fileset template applied to a host"
							},
							"response": [
								{
									"name": "Details of new filesets.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fileset/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileset",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete filesets.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fileset/bulk?ids=&preserve_snapshots=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fileset",
										"bulk"
									],
									"query": [
										{
											"key": "ids",
											"value": "",
											"description": "(Required) Provide a comma-separated list of fileset IDs."
										},
										{
											"key": "preserve_snapshots",
											"value": "",
											"description": "Flag to indicate whether to convert snapshots of all deleted filesets to relics or to delete them. Applies to all filesets. Default is true."
										}
									]
								},
								"description": "Delete filesets by specifying the fileset IDs."
							},
							"response": [
								{
									"name": "Fileset deletion failed for at least one fileset.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fileset/bulk?ids=&preserve_snapshots=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileset",
												"bulk"
											],
											"query": [
												{
													"key": "ids",
													"value": ""
												},
												{
													"key": "preserve_snapshots",
													"value": ""
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted all specified filesets.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fileset/bulk?ids=&preserve_snapshots=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileset",
												"bulk"
											],
											"query": [
												{
													"key": "ids",
													"value": ""
												},
												{
													"key": "preserve_snapshots",
													"value": ""
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "snapshot/{id}",
					"item": [
						{
							"name": "Create restore job to restore multiple files/directories",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fileset/snapshot/:id/restore_files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fileset",
										"snapshot",
										":id",
										"restore_files"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of snapshot"
										}
									]
								},
								"description": "Initiate a job to copy one or more file or folder from a fileset backup to the source host. Returns the job instance ID."
							},
							"response": [
								{
									"name": "Status for the restore request.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fileset/snapshot/:id/restore_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileset",
												"snapshot",
												":id",
												"restore_files"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create an export job to export multiple files or directories.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fileset/snapshot/:id/export_files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fileset",
										"snapshot",
										":id",
										"export_files"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of snapshot"
										}
									]
								},
								"description": "Starts a job that exports one or more files or folders from a fileset backup to the destination host. Returns the job status as of the job creation time. This job status includes the job ID."
							},
							"response": [
								{
									"name": "Status of the export request.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fileset/snapshot/:id/export_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileset",
												"snapshot",
												":id",
												"export_files"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Download files from a fileset backup",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fileset/snapshot/:id/download_files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fileset",
										"snapshot",
										":id",
										"download_files"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to a fileset backup object."
										}
									]
								},
								"description": "Start an asynchronous job to download multiple files and folders from a specified fileset backup. The response returns an asynchronous request ID. Get the URL for downloading the ZIP file including the specific files/folders by sending a GET request to 'fileset/request/{id}'."
							},
							"response": [
								{
									"name": "Status of an async job to download files and folders from a fileset backup.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fileset/snapshot/:id/download_files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileset",
												"snapshot",
												":id",
												"download_files"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Unprotect a fileset.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/fileset/:id/unprotect",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"fileset",
								":id",
								"unprotect"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) Managed ID of fileset"
								}
							]
						},
						"description": "Remove SLA assignment from a fileset, specifying what retention policy to apply to existing snapshots."
					},
					"response": [
						{
							"name": "Successfully unprotected fileset.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/fileset/:id/unprotect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fileset",
										":id",
										"unprotect"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "app blueprint",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get Blueprint details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app_blueprint/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app_blueprint",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to a Blueprint object."
										}
									]
								},
								"description": "Retrieve detailed information for a specified Blueprint."
							},
							"response": [
								{
									"name": "Detailed information about a Blueprint object.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/app_blueprint/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"app_blueprint",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get list of snapshots of a Blueprint",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app_blueprint/:id/snapshot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app_blueprint",
										":id",
										"snapshot"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID assigned to a Blueprint object."
										}
									]
								},
								"description": "Retrieve summary information for each of the snapshot objects of a specified Blueprint object."
							},
							"response": [
								{
									"name": "Summary snapshot information for a Blueprint object.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/app_blueprint/:id/snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"app_blueprint",
												":id",
												"snapshot"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get details about missed snapshots for a Blueprint",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app_blueprint/:id/missed_snapshot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app_blueprint",
										":id",
										"missed_snapshot"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the Blueprint."
										}
									]
								},
								"description": "Retrieve the timestamp for each missed snapshot for a specified Blueprint."
							},
							"response": [
								{
									"name": "Details for missed snapshots for a Blueprint.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/app_blueprint/:id/missed_snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"app_blueprint",
												":id",
												"missed_snapshot"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get summary for Blueprints",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app_blueprint?sort_by=&sort_order=&limit=&offset=&name=&is_relic=&effective_sla_domain_id=&primary_cluster_id=&sla_assignment=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app_blueprint"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "",
									"description": "Attribute to sort the Blueprints list on. (This can only be one of Name,EffectiveSlaDomainName,SlaAssignment,ConnectionStatus)"
								},
								{
									"key": "sort_order",
									"value": "",
									"description": "Order for sorting the results, either ascending or descending. (This can only be one of asc,desc)"
								},
								{
									"key": "limit",
									"value": "",
									"description": "Limit the number of matches returned."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Number of matches to ignore from the beginning of the results."
								},
								{
									"key": "name",
									"value": "",
									"description": "Search for Blueprint objects by name."
								},
								{
									"key": "is_relic",
									"value": "",
									"description": "A Boolean value that specifies whether to filter results by the isRelic field of the Blueprint. When 'true,' the results show only relic Blueprints. When 'false,' the results show only non-relic Blueprints. By default, shows both relic and non-relic Blueprints."
								},
								{
									"key": "effective_sla_domain_id",
									"value": "",
									"description": "Filter by ID of effective SLA domain."
								},
								{
									"key": "primary_cluster_id",
									"value": "",
									"description": "Filter by primary cluster ID, or **local**"
								},
								{
									"key": "sla_assignment",
									"value": "",
									"description": "Filter by SLA assignment type. (This can only be one of Derived,Direct,Unassigned)"
								}
							]
						},
						"description": "Retrieve summary information for all Blueprint objects."
					},
					"response": [
						{
							"name": "Summary information for Blueprints.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app_blueprint?sort_by=&sort_order=&limit=&offset=&name=&is_relic=&effective_sla_domain_id=&primary_cluster_id=&sla_assignment=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app_blueprint"
									],
									"query": [
										{
											"key": "sort_by",
											"value": ""
										},
										{
											"key": "sort_order",
											"value": ""
										},
										{
											"key": "limit",
											"value": ""
										},
										{
											"key": "offset",
											"value": ""
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "is_relic",
											"value": ""
										},
										{
											"key": "effective_sla_domain_id",
											"value": ""
										},
										{
											"key": "primary_cluster_id",
											"value": ""
										},
										{
											"key": "sla_assignment",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Link to Blueprint detail page on Polaris",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app_blueprint/polaris_link/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app_blueprint",
								"polaris_link",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID assigned to a Blueprint object."
								}
							]
						},
						"description": "Return the link to URL to view the Blueprint detail page on Polaris."
					},
					"response": [
						{
							"name": "Detailed information about a Blueprint object.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app_blueprint/polaris_link/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app_blueprint",
										"polaris_link",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Blueprint snapshot details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app_blueprint/snapshot/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app_blueprint",
								"snapshot",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID assigned to a snapshot object."
								}
							]
						},
						"description": "Retrieve detailed information about a specified snapshot for a Blueprint object."
					},
					"response": [
						{
							"name": "Details for a Blueprint snapshot.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app_blueprint/snapshot/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app_blueprint",
										"snapshot",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "host fileset",
			"item": [
				{
					"name": "share",
					"item": [
						{
							"name": "Get summary information for network shares.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host_fileset/share?hostname=&export_point=&share_type=&primary_cluster_id=&effective_sla_domain_id=&template_id=&search_type=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host_fileset",
										"share"
									],
									"query": [
										{
											"key": "hostname",
											"value": "",
											"description": "Filter the summary information based on the hostname."
										},
										{
											"key": "export_point",
											"value": "",
											"description": "Filter the summary information based on the export point."
										},
										{
											"key": "share_type",
											"value": "",
											"description": "Filter the summary information based on the share type. (This can only be one of NFS,SMB)"
										},
										{
											"key": "primary_cluster_id",
											"value": "",
											"description": "Filters the summary information based on the Rubrik cluster specified by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that is hosting the current REST API session."
										},
										{
											"key": "effective_sla_domain_id",
											"value": "",
											"description": "Filter the summary information based on the ID of the effective SLA Domain that is inherited by the filesets that are assigned to a network share. Use **_UNPROTECTED_** to only return information for network shares that have filesets without an effective SLA Domain. Use **_PROTECTED_** to only return information for network shares that have filesets with an effective SLA Domain."
										},
										{
											"key": "template_id",
											"value": "",
											"description": "Filter the summary information based on the ID of a fileset templates applied to the network share. Use **_NO_FILESET_** to return information for network shares with no filesets. _NO_FILESET_ must be used with searchType 'exact'"
										},
										{
											"key": "search_type",
											"value": "",
											"description": "Search type. Accepted values are 'infix' or 'exact'. Default is 'exact'"
										},
										{
											"key": "sort_by",
											"value": "",
											"description": "Comma-separated list of attributes that define the sort order of the search results. Use the following attributes to form the list: exportPoint | hostName | shareType | status"
										},
										{
											"key": "sort_order",
											"value": "",
											"description": "Comma-separated list of sort directions for each attribute type, use either 'asc' for ascending or 'desc' for descending. Match the order of the sort direction list values to the attribute list values to define the sort direction for each attribute type in the results.\nComma-separated list of sort orders (one for each sort_by) asc | desc\","
										}
									]
								},
								"description": "Retrieve summary information for the network shares that are registered with a Rubrik cluster, and summary information for the filesets that are assigned to each network share."
							},
							"response": [
								{
									"name": "Summary information for network shares.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host_fileset/share?hostname=&export_point=&share_type=&primary_cluster_id=&effective_sla_domain_id=&template_id=&search_type=&sort_by=&sort_order=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host_fileset",
												"share"
											],
											"query": [
												{
													"key": "hostname",
													"value": ""
												},
												{
													"key": "export_point",
													"value": ""
												},
												{
													"key": "share_type",
													"value": ""
												},
												{
													"key": "primary_cluster_id",
													"value": ""
												},
												{
													"key": "effective_sla_domain_id",
													"value": ""
												},
												{
													"key": "template_id",
													"value": ""
												},
												{
													"key": "search_type",
													"value": ""
												},
												{
													"key": "sort_by",
													"value": ""
												},
												{
													"key": "sort_order",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get detailed information for a network share.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host_fileset/share/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host_fileset",
										"share",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the network share."
										}
									]
								},
								"description": "Retrieve detailed information for a network share, including detailed information for the filesets that are assigned to the network share."
							},
							"response": [
								{
									"name": "Detailed information for the specified network share..",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/host_fileset/share/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"host_fileset",
												"share",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get summary information for hosts.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/host_fileset?hostname=&operating_system_type=&operating_system=&primary_cluster_id=&effective_sla_domain_id=&template_id=&search_type=&sort_by=&sort_order=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"host_fileset"
							],
							"query": [
								{
									"key": "hostname",
									"value": "",
									"description": "Filter the summary information based on the hostname."
								},
								{
									"key": "operating_system_type",
									"value": "",
									"description": "Filter the summary information based on the operating system type. Values are 'UnixLike' or 'Windows' (This can only be one of UnixLike,Windows)"
								},
								{
									"key": "operating_system",
									"value": "",
									"description": "Filter the summary information based on the operating system of the host."
								},
								{
									"key": "primary_cluster_id",
									"value": "",
									"description": "Filters the summary information based on the Rubrik cluster specified by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that is hosting the current REST API session."
								},
								{
									"key": "effective_sla_domain_id",
									"value": "",
									"description": "Filter the summary information based on the ID of the effective SLA Domain inherited by filesets of the host. Use **_UNPROTECTED_** to only return information for hosts with filesets that do not have an effective SLA Domain. Use **_PROTECTED_** to only return information for hosts with filesets that do have an effective SLA Domain."
								},
								{
									"key": "template_id",
									"value": "",
									"description": "Filter the summary information based on the ID of a fileset templates applied to the host. Use **_NO_FILESET_** to return information for hosts with no filesets. _NO_FILESET_ must be used with searchType 'exact'"
								},
								{
									"key": "search_type",
									"value": "",
									"description": "Search type. Accepted values are 'infix' or 'exact'. Default is 'exact'"
								},
								{
									"key": "sort_by",
									"value": "",
									"description": "Comma-separated list of attributes by which to sort hostName | operatingSystem | operatingSystemType | status"
								},
								{
									"key": "sort_order",
									"value": "",
									"description": "Comma-separated list of sort orders (one for each sort_by) asc | desc\", (This can only be one of asc,desc)"
								}
							]
						},
						"description": "Retrieve summary information for all hosts that are registered with a Rubrik cluster. For each host, we also retrieve the summary information for the filesets applied to the host."
					},
					"response": [
						{
							"name": "Summary information for registered hosts.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host_fileset?hostname=&operating_system_type=&operating_system=&primary_cluster_id=&effective_sla_domain_id=&template_id=&search_type=&sort_by=&sort_order=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host_fileset"
									],
									"query": [
										{
											"key": "hostname",
											"value": ""
										},
										{
											"key": "operating_system_type",
											"value": ""
										},
										{
											"key": "operating_system",
											"value": ""
										},
										{
											"key": "primary_cluster_id",
											"value": ""
										},
										{
											"key": "effective_sla_domain_id",
											"value": ""
										},
										{
											"key": "template_id",
											"value": ""
										},
										{
											"key": "search_type",
											"value": ""
										},
										{
											"key": "sort_by",
											"value": ""
										},
										{
											"key": "sort_order",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get detail information for a host.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/host_fileset/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"host_fileset",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the registered host."
								}
							]
						},
						"description": "Retrieve detail information for a registered host. For each host, we also retrieve the detail information for the filesets applied to the host."
					},
					"response": [
						{
							"name": "Summary information for the specified host.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/host_fileset/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"host_fileset",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "search",
			"item": [
				{
					"name": "Search for file",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search?managed_id=&query_string=&limit=&cursor=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "managed_id",
									"value": "",
									"description": "(Required) ID assigned to the object to be searched. The object must represent a snapshot or backup of a virtual machine, fileset, host, or storage array volume group."
								},
								{
									"key": "query_string",
									"value": "",
									"description": "(Required) Search string that consists of a prefix portion of the full path of the file or a prefix portion of the filename."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Maximum number of entries in the response."
								},
								{
									"key": "cursor",
									"value": "",
									"description": "Pagination cursor returned by the previous request."
								}
							]
						},
						"description": "Search for a file within the backup of a specified virtual machine, fileset, host, or storage array volume group. Perform the search by using a search string that consists of a prefix portion of the full path of the file or a prefix portion of the filename."
					},
					"response": [
						{
							"name": "Search results",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search?managed_id=&query_string=&limit=&cursor=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "managed_id",
											"value": ""
										},
										{
											"key": "query_string",
											"value": ""
										},
										{
											"key": "limit",
											"value": ""
										},
										{
											"key": "cursor",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Search for a file",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search/snapshot_search?snapshot_id=&name=&dir=&limit=&offset=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"snapshot_search"
							],
							"query": [
								{
									"key": "snapshot_id",
									"value": "",
									"description": "(Required) ID assigned to a snapshot object to search."
								},
								{
									"key": "name",
									"value": "",
									"description": "(Required) Query string consisting of a prefix portion of the filename."
								},
								{
									"key": "dir",
									"value": "",
									"description": "(Required) Full path of a directory to search."
								},
								{
									"key": "limit",
									"value": "",
									"description": "Maximum number of entries in the response."
								},
								{
									"key": "offset",
									"value": "",
									"description": "Starting position in the list of entries contained in the query results, sorted by lexicographical order. The response includes the specified numbered entry and all higher numbered entries."
								}
							]
						},
						"description": "Perform a search for a file within a specified snapshot by using a prefix portion of the filename."
					},
					"response": [
						{
							"name": "Search results",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/snapshot_search?snapshot_id=&name=&dir=&limit=&offset=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"snapshot_search"
									],
									"query": [
										{
											"key": "snapshot_id",
											"value": ""
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "dir",
											"value": ""
										},
										{
											"key": "limit",
											"value": ""
										},
										{
											"key": "offset",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Search globally for a file",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search/global",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"global"
							]
						},
						"description": "Perform a search for a file across multiple snappables filtering by regular expression."
					},
					"response": [
						{
							"name": "Search results.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/global",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"global"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "smtp instance",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Delete a smtp instance",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/smtp_instance/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp_instance",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the smtp instance to be deleted"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMTP instance deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/smtp_instance/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp_instance",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Details of a smtp instance",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/smtp_instance/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp_instance",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the smtp instance to be fetched"
										}
									]
								}
							},
							"response": [
								{
									"name": "TODO",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/smtp_instance/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp_instance",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "update specifications for sending email",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/smtp_instance/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp_instance",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the smtp instance to be deleted"
										}
									]
								},
								"description": "update specifications for sending email"
							},
							"response": [
								{
									"name": "TODO",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/smtp_instance/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp_instance",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Add smtp instances",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/smtp_instance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"smtp_instance"
							]
						},
						"description": "Add smtp instances"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/smtp_instance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp_instance"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get summary of all smtp instances",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/smtp_instance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"smtp_instance"
							]
						},
						"description": "Get summary of all smtp instances"
					},
					"response": [
						{
							"name": "TODO",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/smtp_instance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp_instance"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "send email",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/smtp_instance/send_test_email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"smtp_instance",
								"send_test_email"
							]
						},
						"description": "Send email to admin users if toEmailIds is empty"
					},
					"response": [
						{
							"name": "Email sent",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/smtp_instance/send_test_email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp_instance",
										"send_test_email"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "role",
			"item": [
				{
					"name": "{id}/authorization",
					"item": [
						{
							"name": "Grants authorizations to a role",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/:id/authorization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id",
										"authorization"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) The role ID of the role being granted authorizations."
										}
									]
								},
								"description": "Grant the specified authorizations to the specified role."
							},
							"response": [
								{
									"name": "Summary of authorizations granted to the role.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/role/:id/authorization",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"role",
												":id",
												"authorization"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Queries the current list of explicit authorizations for a role",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/:id/authorization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id",
										"authorization"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) The role ID of the role to query for authorizations."
										}
									]
								},
								"description": "Query the current list of explicit authorizations for a role.\n"
							},
							"response": [
								{
									"name": "Summary of authorizations granted to the role.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/role/:id/authorization",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"role",
												":id",
												"authorization"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Revokes authorizations from a role",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/:id/authorization/bulk_revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id",
										"authorization",
										"bulk_revoke"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) The role ID of the role whose authorizations are being revoked.\n"
										}
									]
								},
								"description": "Revoke the specified authorizations from the specified role."
							},
							"response": [
								{
									"name": "Summary of authorizations granted to the role.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/role/:id/authorization/bulk_revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"role",
												":id",
												"authorization",
												"bulk_revoke"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Query explicit authorizations",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/role/authorization_query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								"authorization_query"
							]
						},
						"description": "Query the current list of explicit authorizations."
					},
					"response": [
						{
							"name": "Summary of authorizations granted to the roles.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/authorization_query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"authorization_query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "backup throttle",
			"item": [
				{
					"name": "Get backup throttle settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/backup_throttle",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"backup_throttle"
							]
						},
						"description": "Retrieve the configuration of the backup throttle for the specified Rubrik cluster."
					},
					"response": [
						{
							"name": "Backup throttle configuration. settings",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/backup_throttle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup_throttle"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Change the backup throttle settings",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/backup_throttle",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"backup_throttle"
							]
						},
						"description": "Change the backup throttling settings. This request completely replaces the existing settings. Unspecified fields are cleared and are not used for backup throttling."
					},
					"response": [
						{
							"name": "Successfully changed backup throttle settings",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/backup_throttle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"backup_throttle"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "folder",
			"item": [
				{
					"name": "Details of a folder",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folder/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folder",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the Folder"
								}
							]
						},
						"description": "Details of a folder"
					},
					"response": [
						{
							"name": "Returns details about a folder.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Hierarchy of folders and managed objects with this folder as root.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folder/hierarchy_rooted_at/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folder",
								"hierarchy_rooted_at",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the folder at the root of expected hierarchy."
								}
							]
						},
						"description": "Hierarchy of folders and managed objects with this folder as root."
					},
					"response": [
						{
							"name": "Contents of the folder are divided into two lists: subfolders, and other contents.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder/hierarchy_rooted_at/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder",
										"hierarchy_rooted_at",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the top level host folder",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folder/host/:datacenter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folder",
								"host",
								":datacenter_id"
							],
							"variable": [
								{
									"key": "datacenter_id",
									"value": "schema type not provided",
									"description": "(Required) ID of the datacenter"
								}
							]
						},
						"description": "The top level host folder"
					},
					"response": [
						{
							"name": "Returns details about a host folder.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder/host/:datacenter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder",
										"host",
										":datacenter_id"
									],
									"variable": [
										{
											"key": "datacenter_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the top level vm folder",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/folder/vm/:datacenter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"folder",
								"vm",
								":datacenter_id"
							],
							"variable": [
								{
									"key": "datacenter_id",
									"value": "schema type not provided",
									"description": "(Required) ID of the datacenter"
								}
							]
						},
						"description": "The top level vm folder"
					},
					"response": [
						{
							"name": "Returns details about a vm folder.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/folder/vm/:datacenter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"folder",
										"vm",
										":datacenter_id"
									],
									"variable": [
										{
											"key": "datacenter_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "network throttle",
			"item": [
				{
					"name": "Get network throttles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/network_throttle?resource_id=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"network_throttle"
							],
							"query": [
								{
									"key": "resource_id",
									"value": "",
									"description": "Filter network throttle information to only include the specified resource. (This can only be one of ArchivalEgress,ReplicationEgress)"
								}
							]
						},
						"description": "Retrieve information about the network throttles that are configured for the specified Rubrik cluster."
					},
					"response": [
						{
							"name": "List of network throttles",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/network_throttle?resource_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network_throttle"
									],
									"query": [
										{
											"key": "resource_id",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a network throttle",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/network_throttle/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"network_throttle",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID assigned to a network throttle object."
								}
							]
						},
						"description": "Update the configuration of a specified network throttle object."
					},
					"response": [
						{
							"name": "Summary of the updated network throttle",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/network_throttle/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"network_throttle",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "sla domain",
			"item": [
				{
					"name": "Assign managed entities to an SLA Domain synchronously.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sla_domain/:id/assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sla_domain",
								":id",
								"assign"
							],
							"variable": [
								{
									"key": "id",
									"value": "schema type not provided",
									"description": "(Required) ID of the SLA Domain."
								}
							]
						},
						"description": "Assign managed entities to the specified SLA Domain. The assignment event runs synchronously."
					},
					"response": [
						{
							"name": "Assigned managed entities to the specified SLA Domain.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sla_domain/:id/assign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sla_domain",
										":id",
										"assign"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Finding managed entities with SLA Domain conflicts.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sla_domain/conflicts?managed_id=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sla_domain",
								"conflicts"
							],
							"query": [
								{
									"key": "managed_id",
									"value": "",
									"description": "(Required) ID of the managed entity that is the source of the derived SLA Domain assignment. All entities that derive an SLA Domain assignment from the specified managed entity are checked for conflicts."
								}
							]
						},
						"description": "Find managed entities that have a conflict with the SLA Domain assignment that is derived from a specified entity. For managed entities that derive an assignment from the specified entity, this call finds conflicts caused by an individual assignment, and conflicts caused by deriving assignments from more than one source."
					},
					"response": [
						{
							"name": "List of conflicts found in managed entities that derive an assignment from the specified managed entity.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sla_domain/conflicts?managed_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sla_domain",
										"conflicts"
									],
									"query": [
										{
											"key": "managed_id",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "notification setting",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Delete a Notification Setting",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notification_setting/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_setting",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of a Notification Setting."
										}
									]
								},
								"description": "Delete a specified Notification Setting."
							},
							"response": [
								{
									"name": "Failed to delete the specified Notification Setting.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/notification_setting/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_setting",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted the specified Notification Setting.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/notification_setting/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_setting",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a Notification Setting",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notification_setting/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_setting",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of a Notification Setting."
										}
									]
								},
								"description": "Get a Notification Setting by its ID."
							},
							"response": [
								{
									"name": "The specified Notification Setting.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/notification_setting/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_setting",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a Notification Setting",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notification_setting/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_setting",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of a Notification Setting."
										}
									]
								},
								"description": "Make changes to the parameters of a specified Notification Setting."
							},
							"response": [
								{
									"name": "Information for the updated Notification Setting.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/notification_setting/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notification_setting",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create a new Notification Setting",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notification_setting",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notification_setting"
							]
						},
						"description": "Create a new Notification Setting with the specified parameters."
					},
					"response": [
						{
							"name": "Summary of the new Notification Setting.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notification_setting",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_setting"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Notification Settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notification_setting",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notification_setting"
							]
						},
						"description": "Get list of all Notification Settings."
					},
					"response": [
						{
							"name": "Get list of all Notification Settings.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notification_setting",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notification_setting"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "smb",
			"item": [
				{
					"name": "domain",
					"item": [
						{
							"name": "{domain name}",
							"item": [
								{
									"name": "Delete Active Directory from Rubrik.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/smb/domain/:domain_name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smb",
												"domain",
												":domain_name"
											],
											"variable": [
												{
													"key": "domain_name",
													"value": "schema type not provided",
													"description": "(Required) SMB domain name."
												}
											]
										},
										"description": "Delete Active Directory from Rubrik."
									},
									"response": [
										{
											"name": "Successfully delete Active Directory from Rubrik.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/smb/domain/:domain_name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"smb",
														"domain",
														":domain_name"
													],
													"variable": [
														{
															"key": "domain_name"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Join Active Directory.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/smb/domain/:domain_name/join",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smb",
												"domain",
												":domain_name",
												"join"
											],
											"variable": [
												{
													"key": "domain_name",
													"value": "schema type not provided",
													"description": "(Required) SMB domain name."
												}
											]
										},
										"description": "Join Active Directory."
									},
									"response": [
										{
											"name": "Successfully joined Active Directory domain.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/smb/domain/:domain_name/join",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"smb",
														"domain",
														":domain_name",
														"join"
													],
													"variable": [
														{
															"key": "domain_name"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Add a new domain",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/smb/domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smb",
										"domain"
									]
								},
								"description": "Add a new domain manually and join Active Directory"
							},
							"response": [
								{
									"name": "Added SMB Active Directory domain.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/smb/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smb",
												"domain"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get discovered SMB domains",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/smb/domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smb",
										"domain"
									]
								},
								"description": "Get discovered SMB domains"
							},
							"response": [
								{
									"name": "Discovered SMB Active Directory domains.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/smb/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smb",
												"domain"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "config",
					"item": [
						{
							"name": "Get SMB configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/smb/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smb",
										"config"
									]
								},
								"description": "Get SMB configuration"
							},
							"response": [
								{
									"name": "Successfully configured SMB.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/smb/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smb",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "SMB configuration",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/smb/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smb",
										"config"
									]
								},
								"description": "SMB configuration"
							},
							"response": [
								{
									"name": "Successfully configured SMB.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/smb/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smb",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "support/support bundle",
			"item": [
				{
					"name": "Collect log files from the cluster",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/support/support_bundle",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"support",
								"support_bundle"
							]
						},
						"description": "To be used by Admin to collect necessary Rubrik's log files from all the nodes. Both event_id and reqeust_ids are optional. If nothing is specified, the whole support bundle is to be collected, if event_id is specified, the reqeuest_ids is ignored. If request id is specified, only collect logs related to the specific request, otherwise collect all the logs"
					},
					"response": [
						{
							"name": "Returns the status of the create support bundle request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/support/support_bundle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"support",
										"support_bundle"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the status of generating support bundle",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/support/support_bundle?id=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"support",
								"support_bundle"
							],
							"query": [
								{
									"key": "id",
									"value": "",
									"description": "(Required) The support bundle generation request"
								}
							]
						},
						"description": "Given a request ID for generate support bundle request, provide the status of the request. If the request is successful, the download link for the support bundle would be included."
					},
					"response": [
						{
							"name": "Returns the status of given request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/support/support_bundle?id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"support",
										"support_bundle"
									],
									"query": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ods configuration",
			"item": [
				{
					"name": "Get on-demand snapshot configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ods_configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ods_configuration"
							]
						},
						"description": "Retrieve the current on-demand snapshot configuration."
					},
					"response": [
						{
							"name": "Current on-demand snapshot configuration",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ods_configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ods_configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update on-demand snapshot configuration.",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ods_configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ods_configuration"
							]
						},
						"description": "Updates the on-demand snapshot configuration."
					},
					"response": [
						{
							"name": "Updated on-demand snapshot configuration.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ods_configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ods_configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "mfa/rsa/server",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Delete RSA server",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mfa/rsa/server/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mfa",
										"rsa",
										"server",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the RSA server"
										}
									]
								},
								"description": "Delete RSA server configuration"
							},
							"response": [
								{
									"name": "RSA server configuration removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mfa/rsa/server/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mfa",
												"rsa",
												"server",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get RSA server configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mfa/rsa/server/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mfa",
										"rsa",
										"server",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the RSA server"
										}
									]
								},
								"description": "Get RSA server configuration"
							},
							"response": [
								{
									"name": "Configuration summary of known RSA servers.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mfa/rsa/server/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mfa",
												"rsa",
												"server",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update RSA server configuration.",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mfa/rsa/server/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mfa",
										"rsa",
										"server",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "schema type not provided",
											"description": "(Required) ID of the RSA server"
										}
									]
								},
								"description": "Update an existing RSA server using specified configuration."
							},
							"response": [
								{
									"name": "Updated RSA server configuration.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mfa/rsa/server/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mfa",
												"rsa",
												"server",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Register a new RSA server.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/mfa/rsa/server",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mfa",
								"rsa",
								"server"
							]
						},
						"description": "Register a new RSA server using specified configuration."
					},
					"response": [
						{
							"name": "Added a new RSA server.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mfa/rsa/server",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mfa",
										"rsa",
										"server"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get RSA server configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/mfa/rsa/server",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mfa",
								"rsa",
								"server"
							]
						},
						"description": "Get RSA server configuration"
					},
					"response": [
						{
							"name": "Configuration summary of known RSA servers.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mfa/rsa/server",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mfa",
										"rsa",
										"server"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "INTERNAL ONLY: Log a message",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/log",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"log"
					]
				},
				"description": "Used by UI to generate logs"
			},
			"response": [
				{
					"name": "TODO",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/log",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"log"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Searches for security principals",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/principal_search",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"principal_search"
					]
				},
				"description": "Searches for security principals using one or more independent queries. The result set is the union of the principals returned by each query."
			},
			"response": [
				{
					"name": "Returns the list of matching principals",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/principal_search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"principal_search"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Lists all files and directories in a given path",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/browse?snapshot_id=&path=&offset=&limit=",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"browse"
					],
					"query": [
						{
							"key": "snapshot_id",
							"value": "",
							"description": "(Required) ID of the Snapshot that is browsed"
						},
						{
							"key": "path",
							"value": "",
							"description": "(Required) The absolute path of the starting point for the directory listing."
						},
						{
							"key": "offset",
							"value": "",
							"description": "Starting position in the list of path entries contained in the query results, sorted by lexicographical order. The response includes the specified numbered entry and all higher numbered entries."
						},
						{
							"key": "limit",
							"value": "",
							"description": "Maximum number of entries in the response."
						}
					]
				},
				"description": "Lists all files and directories in a given path"
			},
			"response": [
				{
					"name": "List of files and directories at the specified path.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/browse?snapshot_id=&path=&offset=&limit=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"browse"
							],
							"query": [
								{
									"key": "snapshot_id",
									"value": ""
								},
								{
									"key": "path",
									"value": ""
								},
								{
									"key": "offset",
									"value": ""
								},
								{
									"key": "limit",
									"value": ""
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "/",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}